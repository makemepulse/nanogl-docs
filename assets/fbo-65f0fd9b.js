import{_ as l}from"./UICallout.vue_vue_type_script_setup_true_lang-ebd67163.js";import{b as c}from"./route-block-83d24a4e.js";import{o as i,c as k,a as t,w as o,d as s,e as n,b as a,g as r}from"./index-ae0869d6.js";const d={class:"markdown-body"},f=a(`<h1>Fbo</h1><p>The Fbo class manages <strong>framebuffers creation</strong> with :</p><ul><li>color</li><li>optional depth and/or stencil</li><li>resizing</li><li>binding helpers</li></ul><p>It supports any kind of pixel formats (<code class="language-js"><span class="token constant">RGB</span></code>, <code class="language-js"><span class="token constant">RGBA</span></code>, <code class="language-js"><span class="token constant">LUMINANCE</span></code>, etc.) and any kind of pixel type (<code class="language-js"><span class="token constant">UNSIGNED_BYTE</span></code>, <code class="language-js"><span class="token constant">FLOAT</span></code>, etc.).</p><h2>Create an FBO</h2><p>You can create an FBO with the <code class="language-js">Fbo</code> class, providing the gl context.</p><pre class="language-js"><code class="language-js"><span class="token keyword">import</span> Fbo <span class="token keyword">from</span> <span class="token string">&quot;nanogl/fbo&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> fbo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fbo</span><span class="token punctuation">(</span>gl<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><h2>Bind FBO</h2><p>The FBO is bound on its creation. You can later bind it using the <code class="language-js">bind</code> function.</p>`,9),h=s("p",null,[s("strong",null,"Note :"),n(" If you use a function that requires the FBO to be bound, directly after its creation, there is no need to call the bind function.")],-1),g=a(`<pre class="language-js"><code class="language-js"><span class="token function">fbo</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><h2>Resizing</h2><p>By default, your FBO will be 0x0. You can change its size with the <code class="language-js">resize</code> function.</p><pre class="language-js"><code class="language-js"><span class="token comment">// set FBO size to 128x128</span>
fbo<span class="token punctuation">.</span><span class="token function">resize</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><h2>Attach color</h2><p>You can attach a texture to the color attachment 0 with the <code class="language-js">attachColor</code> function.</p>`,6),m=s("p",null,[s("strong",null,"Important :"),n(" The FBO must be bound before using attach functions.")],-1),b=a(`<pre class="language-js"><code class="language-js"><span class="token function">fbo</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

fbo<span class="token punctuation">.</span><span class="token function">attachColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// you can specify a pixel format (default is gl.RGB)</span>
fbo<span class="token punctuation">.</span><span class="token function">attachColor</span><span class="token punctuation">(</span>gl<span class="token punctuation">.</span><span class="token constant">RGBA</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// you can specify a pixel type (default is gl.UNSIGNED_BYTE)</span>
fbo<span class="token punctuation">.</span><span class="token function">attachColor</span><span class="token punctuation">(</span>gl<span class="token punctuation">.</span><span class="token constant">RGB</span><span class="token punctuation">,</span> gl<span class="token punctuation">.</span><span class="token constant">FLOAT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// you can specify a pixel internal format (default is &#39;format&#39; parameter value)</span>
fbo<span class="token punctuation">.</span><span class="token function">attachColor</span><span class="token punctuation">(</span>gl<span class="token punctuation">.</span><span class="token constant">RGB</span><span class="token punctuation">,</span> gl<span class="token punctuation">.</span><span class="token constant">UNSIGNED_BYTE</span><span class="token punctuation">,</span> gl<span class="token punctuation">.</span><span class="token constant">RGBA</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><h2>Attach depth/stencil</h2><p>You can attach a renderbuffer or texture for depth and/or stencil to this FBO with the <code class="language-js">attachDepth</code> function.</p><p>You can choose, in order :</p><ul><li>to add a depth component or not</li><li>to add a stencil component or not</li><li>to use a texture or a renderbuffer</li></ul>`,5),_=s("p",null,[s("strong",null,"Important :"),n(" The FBO must be bound before using attach functions.")],-1),w=a(`<pre class="language-js"><code class="language-js"><span class="token function">fbo</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// without any arguments, the depth component will be added,</span>
<span class="token comment">// the stencil component will not</span>
<span class="token comment">// and a renderbuffer will be used</span>
fbo<span class="token punctuation">.</span><span class="token function">attachDepth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// add only stencil &amp; use renderbuffer</span>
fbo<span class="token punctuation">.</span><span class="token function">attachDepth</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// add depth, stencil &amp; use renderbuffer</span>
fbo<span class="token punctuation">.</span><span class="token function">attachDepth</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// add depth &amp; use texture</span>
fbo<span class="token punctuation">.</span><span class="token function">attachDepth</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// add depth, stencil &amp; use texture</span>
fbo<span class="token punctuation">.</span><span class="token function">attachDepth</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><h2>Get color texture</h2><p>You can get the color texture of the FBO (if it exists) with the <code class="language-js">getColorTexture</code> function.</p>`,3),x=a(`<pre class="language-js"><code class="language-js"><span class="token comment">// get the fbo color texture</span>
<span class="token keyword">const</span> colorTexture <span class="token operator">=</span> fbo<span class="token punctuation">.</span><span class="token function">getColorTexture</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// use sampler options</span>
<span class="token function">colorTexture</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
colorTexture<span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// set program texture with fbo color texture</span>
prg<span class="token punctuation">.</span><span class="token function">uTexture</span><span class="token punctuation">(</span>colorTexture<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><h2>Get depth/stencil data</h2><p>You can get the depth/stencil texture or renderbuffer of the FBO (if it exists) with the <code class="language-js">getDepth</code> function.</p>`,3),j=a(`<pre class="language-js"><code class="language-js"><span class="token comment">// fbo1 has depth component &amp; uses renderbuffer</span>
<span class="token keyword">const</span> fbo1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fbo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
fbo1<span class="token punctuation">.</span><span class="token function">attachDepth</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// returns RenderBuffer with depth data</span>
<span class="token keyword">const</span> fbo1Depth <span class="token operator">=</span> fbo1<span class="token punctuation">.</span><span class="token function">getDepth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// fbo2 has depth component &amp; stencil component</span>
<span class="token comment">// &amp; uses texture</span>
<span class="token keyword">const</span> fbo2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fbo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
fbo2<span class="token punctuation">.</span><span class="token function">attachDepth</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// returns Texture2D with depth &amp; stencil data</span>
<span class="token keyword">const</span> fbo2Depth <span class="token operator">=</span> fbo2<span class="token punctuation">.</span><span class="token function">getDepth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><h2>Viewport</h2><p>You can set the gl viewport to the size of the FBO with the <code class="language-js">defaultViewport</code> function.</p><pre class="language-js"><code class="language-js"><span class="token comment">// set FBO size to 128x128</span>
fbo<span class="token punctuation">.</span><span class="token function">resize</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// set gl viewport with x = 0 ; y = 0</span>
<span class="token comment">// width = 128 &amp; height = 128</span>
fbo<span class="token punctuation">.</span><span class="token function">defaultViewport</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><h2>Clear</h2><p>You can clear all buffers (color, stencil and depth) of the FBO with the <code class="language-js">clear</code> function.</p>`,6),y=s("p",null,[s("strong",null,"Important :"),n(" The FBO must be bound before using clear function.")],-1),B=a(`<pre class="language-js"><code class="language-js"><span class="token function">fbo</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

fbo<span class="token punctuation">.</span><span class="token function">defaultViewport</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// clear all buffers</span>
fbo<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><h2>Delete the FBO</h2><p>You can delete the webgl objects related to this FBO with the <code class="language-js">dispose</code> function.</p><pre class="language-js"><code class="language-js">fbo<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>`,4),F={__name:"fbo",setup(T,{expose:u}){return u({frontmatter:{}}),(O,Y)=>{const e=l,p=r("router-link");return i(),k("div",d,[f,t(e,null,{default:o(()=>[h]),_:1}),g,t(e,{type:"important"},{default:o(()=>[m]),_:1}),b,t(e,{type:"important"},{default:o(()=>[_]),_:1}),w,s("p",null,[n("You can then use it as you would a normal "),t(p,{to:"/guide/quick-guides/texture-2d"},{default:o(()=>[n("Texture2D")]),_:1}),n(".")]),x,s("p",null,[n("You can then use it as you would a normal RenderBuffer or "),t(p,{to:"/guide/quick-guides/texture-2d"},{default:o(()=>[n("Texture2D")]),_:1}),n(".")]),j,t(e,{type:"important"},{default:o(()=>[y]),_:1}),B])}}};typeof c=="function"&&c(F);export{F as default};
