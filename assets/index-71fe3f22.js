import{e as Ps,B as dr,i as Ss,a as Lt,c as hr,b as fr,d as yr,f as As,h as Is,g as vr,j as Lr,k as Tr,l as Gs,m as xr,s as kr,u as V,n as Cr,o as _r,p as Te,r as wr,q as Ke,t as oe,v as Rs,w as Ot,x as ze,y as Er,z as Ve,A as F,C as X,F as ge,D as fe,E as te,G as Se,H as ie,I as qe,J as Ye,K as Pe,L as ye,M as Pr,N as Sr,O as Be}from"./runtime-core.esm-bundler-b2e16801.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))a(s);new MutationObserver(s=>{for(const r of s)if(r.type==="childList")for(const i of r.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&a(i)}).observe(document,{childList:!0,subtree:!0});function n(s){const r={};return s.integrity&&(r.integrity=s.integrity),s.referrerpolicy&&(r.referrerPolicy=s.referrerpolicy),s.crossorigin==="use-credentials"?r.credentials="include":s.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function a(s){if(s.ep)return;s.ep=!0;const r=n(s);fetch(s.href,r)}})();const Ar="http://www.w3.org/2000/svg",Ne=typeof document<"u"?document:null,Bn=Ne&&Ne.createElement("template"),Ir={insert:(t,e,n)=>{e.insertBefore(t,n||null)},remove:t=>{const e=t.parentNode;e&&e.removeChild(t)},createElement:(t,e,n,a)=>{const s=e?Ne.createElementNS(Ar,t):Ne.createElement(t,n?{is:n}:void 0);return t==="select"&&a&&a.multiple!=null&&s.setAttribute("multiple",a.multiple),s},createText:t=>Ne.createTextNode(t),createComment:t=>Ne.createComment(t),setText:(t,e)=>{t.nodeValue=e},setElementText:(t,e)=>{t.textContent=e},parentNode:t=>t.parentNode,nextSibling:t=>t.nextSibling,querySelector:t=>Ne.querySelector(t),setScopeId(t,e){t.setAttribute(e,"")},insertStaticContent(t,e,n,a,s,r){const i=n?n.previousSibling:e.lastChild;if(s&&(s===r||s.nextSibling))for(;e.insertBefore(s.cloneNode(!0),n),!(s===r||!(s=s.nextSibling)););else{Bn.innerHTML=a?`<svg>${t}</svg>`:t;const o=Bn.content;if(a){const l=o.firstChild;for(;l.firstChild;)o.appendChild(l.firstChild);o.removeChild(l)}e.insertBefore(o,n)}return[i?i.nextSibling:e.firstChild,n?n.previousSibling:e.lastChild]}};function Gr(t,e,n){const a=t._vtc;a&&(e=(e?[e,...a]:[...a]).join(" ")),e==null?t.removeAttribute("class"):n?t.setAttribute("class",e):t.className=e}function Rr(t,e,n){const a=t.style,s=Lt(n);if(n&&!s){for(const r in n)yn(a,r,n[r]);if(e&&!Lt(e))for(const r in e)n[r]==null&&yn(a,r,"")}else{const r=a.display;s?e!==n&&(a.cssText=n):e&&t.removeAttribute("style"),"_vod"in t&&(a.display=r)}}const qn=/\s*!important$/;function yn(t,e,n){if(As(n))n.forEach(a=>yn(t,e,a));else if(n==null&&(n=""),e.startsWith("--"))t.setProperty(e,n);else{const a=Dr(t,e);qn.test(n)?t.setProperty(Is(a),n.replace(qn,""),"important"):t[a]=n}}const Fn=["Webkit","Moz","ms"],Bt={};function Dr(t,e){const n=Bt[e];if(n)return n;let a=vr(e);if(a!=="filter"&&a in t)return Bt[e]=a;a=Lr(a);for(let s=0;s<Fn.length;s++){const r=Fn[s]+a;if(r in t)return Bt[e]=r}return e}const zn="http://www.w3.org/1999/xlink";function Mr(t,e,n,a,s){if(a&&e.startsWith("xlink:"))n==null?t.removeAttributeNS(zn,e.slice(6,e.length)):t.setAttributeNS(zn,e,n);else{const r=Tr(e);n==null||r&&!Gs(n)?t.removeAttribute(e):t.setAttribute(e,r?"":n)}}function Nr(t,e,n,a,s,r,i){if(e==="innerHTML"||e==="textContent"){a&&i(a,s,r),t[e]=n??"";return}if(e==="value"&&t.tagName!=="PROGRESS"&&!t.tagName.includes("-")){t._value=n;const l=n??"";(t.value!==l||t.tagName==="OPTION")&&(t.value=l),n==null&&t.removeAttribute(e);return}let o=!1;if(n===""||n==null){const l=typeof t[e];l==="boolean"?n=Gs(n):n==null&&l==="string"?(n="",o=!0):l==="number"&&(n=0,o=!0)}try{t[e]=n}catch{}o&&t.removeAttribute(e)}function Or(t,e,n,a){t.addEventListener(e,n,a)}function Br(t,e,n,a){t.removeEventListener(e,n,a)}function qr(t,e,n,a,s=null){const r=t._vei||(t._vei={}),i=r[e];if(a&&i)i.value=a;else{const[o,l]=Fr(e);if(a){const m=r[e]=Hr(a,s);Or(t,o,m,l)}else i&&(Br(t,o,i,l),r[e]=void 0)}}const Vn=/(?:Once|Passive|Capture)$/;function Fr(t){let e;if(Vn.test(t)){e={};let a;for(;a=t.match(Vn);)t=t.slice(0,t.length-a[0].length),e[a[0].toLowerCase()]=!0}return[t[2]===":"?t.slice(3):Is(t.slice(2)),e]}let qt=0;const zr=Promise.resolve(),Vr=()=>qt||(zr.then(()=>qt=0),qt=Date.now());function Hr(t,e){const n=a=>{if(!a._vts)a._vts=Date.now();else if(a._vts<=n.attached)return;xr(jr(a,n.value),e,5,[a])};return n.value=t,n.attached=Vr(),n}function jr(t,e){if(As(e)){const n=t.stopImmediatePropagation;return t.stopImmediatePropagation=()=>{n.call(t),t._stopped=!0},e.map(a=>s=>!s._stopped&&a&&a(s))}else return e}const Hn=/^on[a-z]/,Ur=(t,e,n,a,s=!1,r,i,o,l)=>{e==="class"?Gr(t,a,s):e==="style"?Rr(t,n,a):fr(e)?yr(e)||qr(t,e,n,a,i):(e[0]==="."?(e=e.slice(1),!0):e[0]==="^"?(e=e.slice(1),!1):$r(t,e,a,s))?Nr(t,e,a,r,i,o,l):(e==="true-value"?t._trueValue=a:e==="false-value"&&(t._falseValue=a),Mr(t,e,a,s))};function $r(t,e,n,a){return a?!!(e==="innerHTML"||e==="textContent"||e in t&&Hn.test(e)&&Ss(n)):e==="spellcheck"||e==="draggable"||e==="translate"||e==="form"||e==="list"&&t.tagName==="INPUT"||e==="type"&&t.tagName==="TEXTAREA"||Hn.test(e)&&Lt(n)?!1:e in t}const Wr={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String};dr.props;const Kr=Ps({patchProp:Ur},Ir);let jn;function Xr(){return jn||(jn=hr(Kr))}const Zr=(...t)=>{const e=Xr().createApp(...t),{mount:n}=e;return e.mount=a=>{const s=Yr(a);if(!s)return;const r=e._component;!Ss(r)&&!r.render&&!r.template&&(r.template=s.innerHTML),s.innerHTML="";const i=n(s,!1,s instanceof SVGElement);return s instanceof Element&&(s.removeAttribute("v-cloak"),s.setAttribute("data-v-app","")),i},e};function Yr(t){return Lt(t)?document.querySelector(t):t}/*!
  * vue-router v4.2.5
  * (c) 2023 Eduardo San Martin Morote
  * @license MIT
  */const $e=typeof window<"u";function Qr(t){return t.__esModule||t[Symbol.toStringTag]==="Module"}const Y=Object.assign;function Ft(t,e){const n={};for(const a in e){const s=e[a];n[a]=xe(s)?s.map(t):t(s)}return n}const rt=()=>{},xe=Array.isArray,Jr=/\/$/,eo=t=>t.replace(Jr,"");function zt(t,e,n="/"){let a,s={},r="",i="";const o=e.indexOf("#");let l=e.indexOf("?");return o<l&&o>=0&&(l=-1),l>-1&&(a=e.slice(0,l),r=e.slice(l+1,o>-1?o:e.length),s=t(r)),o>-1&&(a=a||e.slice(0,o),i=e.slice(o,e.length)),a=so(a??e,n),{fullPath:a+(r&&"?")+r+i,path:a,query:s,hash:i}}function to(t,e){const n=e.query?t(e.query):"";return e.path+(n&&"?")+n+(e.hash||"")}function Un(t,e){return!e||!t.toLowerCase().startsWith(e.toLowerCase())?t:t.slice(e.length)||"/"}function no(t,e,n){const a=e.matched.length-1,s=n.matched.length-1;return a>-1&&a===s&&Xe(e.matched[a],n.matched[s])&&Ds(e.params,n.params)&&t(e.query)===t(n.query)&&e.hash===n.hash}function Xe(t,e){return(t.aliasOf||t)===(e.aliasOf||e)}function Ds(t,e){if(Object.keys(t).length!==Object.keys(e).length)return!1;for(const n in t)if(!ao(t[n],e[n]))return!1;return!0}function ao(t,e){return xe(t)?$n(t,e):xe(e)?$n(e,t):t===e}function $n(t,e){return xe(e)?t.length===e.length&&t.every((n,a)=>n===e[a]):t.length===1&&t[0]===e}function so(t,e){if(t.startsWith("/"))return t;if(!t)return e;const n=e.split("/"),a=t.split("/"),s=a[a.length-1];(s===".."||s===".")&&a.push("");let r=n.length-1,i,o;for(i=0;i<a.length;i++)if(o=a[i],o!==".")if(o==="..")r>1&&r--;else break;return n.slice(0,r).join("/")+"/"+a.slice(i-(i===a.length?1:0)).join("/")}var lt;(function(t){t.pop="pop",t.push="push"})(lt||(lt={}));var ot;(function(t){t.back="back",t.forward="forward",t.unknown=""})(ot||(ot={}));function ro(t){if(!t)if($e){const e=document.querySelector("base");t=e&&e.getAttribute("href")||"/",t=t.replace(/^\w+:\/\/[^\/]+/,"")}else t="/";return t[0]!=="/"&&t[0]!=="#"&&(t="/"+t),eo(t)}const oo=/^[^#]+#/;function io(t,e){return t.replace(oo,"#")+e}function lo(t,e){const n=document.documentElement.getBoundingClientRect(),a=t.getBoundingClientRect();return{behavior:e.behavior,left:a.left-n.left-(e.left||0),top:a.top-n.top-(e.top||0)}}const wt=()=>({left:window.pageXOffset,top:window.pageYOffset});function uo(t){let e;if("el"in t){const n=t.el,a=typeof n=="string"&&n.startsWith("#"),s=typeof n=="string"?a?document.getElementById(n.slice(1)):document.querySelector(n):n;if(!s)return;e=lo(s,t)}else e=t;"scrollBehavior"in document.documentElement.style?window.scrollTo(e):window.scrollTo(e.left!=null?e.left:window.pageXOffset,e.top!=null?e.top:window.pageYOffset)}function Wn(t,e){return(history.state?history.state.position-e:-1)+t}const vn=new Map;function mo(t,e){vn.set(t,e)}function co(t){const e=vn.get(t);return vn.delete(t),e}let go=()=>location.protocol+"//"+location.host;function Ms(t,e){const{pathname:n,search:a,hash:s}=e,r=t.indexOf("#");if(r>-1){let o=s.includes(t.slice(r))?t.slice(r).length:1,l=s.slice(o);return l[0]!=="/"&&(l="/"+l),Un(l,"")}return Un(n,t)+a+s}function po(t,e,n,a){let s=[],r=[],i=null;const o=({state:u})=>{const c=Ms(t,location),k=n.value,_=e.value;let x=0;if(u){if(n.value=c,e.value=u,i&&i===k){i=null;return}x=_?u.position-_.position:0}else a(c);s.forEach(f=>{f(n.value,k,{delta:x,type:lt.pop,direction:x?x>0?ot.forward:ot.back:ot.unknown})})};function l(){i=n.value}function m(u){s.push(u);const c=()=>{const k=s.indexOf(u);k>-1&&s.splice(k,1)};return r.push(c),c}function g(){const{history:u}=window;u.state&&u.replaceState(Y({},u.state,{scroll:wt()}),"")}function p(){for(const u of r)u();r=[],window.removeEventListener("popstate",o),window.removeEventListener("beforeunload",g)}return window.addEventListener("popstate",o),window.addEventListener("beforeunload",g,{passive:!0}),{pauseListeners:l,listen:m,destroy:p}}function Kn(t,e,n,a=!1,s=!1){return{back:t,current:e,forward:n,replaced:a,position:window.history.length,scroll:s?wt():null}}function bo(t){const{history:e,location:n}=window,a={value:Ms(t,n)},s={value:e.state};s.value||r(a.value,{back:null,current:a.value,forward:null,position:e.length-1,replaced:!0,scroll:null},!0);function r(l,m,g){const p=t.indexOf("#"),u=p>-1?(n.host&&document.querySelector("base")?t:t.slice(p))+l:go()+t+l;try{e[g?"replaceState":"pushState"](m,"",u),s.value=m}catch(c){console.error(c),n[g?"replace":"assign"](u)}}function i(l,m){const g=Y({},e.state,Kn(s.value.back,l,s.value.forward,!0),m,{position:s.value.position});r(l,g,!0),a.value=l}function o(l,m){const g=Y({},s.value,e.state,{forward:l,scroll:wt()});r(g.current,g,!0);const p=Y({},Kn(a.value,l,null),{position:g.position+1},m);r(l,p,!1),a.value=l}return{location:a,state:s,push:o,replace:i}}function ho(t){t=ro(t);const e=bo(t),n=po(t,e.state,e.location,e.replace);function a(r,i=!0){i||n.pauseListeners(),history.go(r)}const s=Y({location:"",base:t,go:a,createHref:io.bind(null,t)},e,n);return Object.defineProperty(s,"location",{enumerable:!0,get:()=>e.location.value}),Object.defineProperty(s,"state",{enumerable:!0,get:()=>e.state.value}),s}function fo(t){return typeof t=="string"||t&&typeof t=="object"}function Ns(t){return typeof t=="string"||typeof t=="symbol"}const Ae={path:"/",name:void 0,params:{},query:{},hash:"",fullPath:"/",matched:[],meta:{},redirectedFrom:void 0},Os=Symbol("");var Xn;(function(t){t[t.aborted=4]="aborted",t[t.cancelled=8]="cancelled",t[t.duplicated=16]="duplicated"})(Xn||(Xn={}));function Ze(t,e){return Y(new Error,{type:t,[Os]:!0},e)}function Ee(t,e){return t instanceof Error&&Os in t&&(e==null||!!(t.type&e))}const Zn="[^/]+?",yo={sensitive:!1,strict:!1,start:!0,end:!0},vo=/[.+*?^${}()[\]/\\]/g;function Lo(t,e){const n=Y({},yo,e),a=[];let s=n.start?"^":"";const r=[];for(const m of t){const g=m.length?[]:[90];n.strict&&!m.length&&(s+="/");for(let p=0;p<m.length;p++){const u=m[p];let c=40+(n.sensitive?.25:0);if(u.type===0)p||(s+="/"),s+=u.value.replace(vo,"\\$&"),c+=40;else if(u.type===1){const{value:k,repeatable:_,optional:x,regexp:f}=u;r.push({name:k,repeatable:_,optional:x});const b=f||Zn;if(b!==Zn){c+=10;try{new RegExp(`(${b})`)}catch(v){throw new Error(`Invalid custom RegExp for param "${k}" (${b}): `+v.message)}}let h=_?`((?:${b})(?:/(?:${b}))*)`:`(${b})`;p||(h=x&&m.length<2?`(?:/${h})`:"/"+h),x&&(h+="?"),s+=h,c+=20,x&&(c+=-8),_&&(c+=-20),b===".*"&&(c+=-50)}g.push(c)}a.push(g)}if(n.strict&&n.end){const m=a.length-1;a[m][a[m].length-1]+=.7000000000000001}n.strict||(s+="/?"),n.end?s+="$":n.strict&&(s+="(?:/|$)");const i=new RegExp(s,n.sensitive?"":"i");function o(m){const g=m.match(i),p={};if(!g)return null;for(let u=1;u<g.length;u++){const c=g[u]||"",k=r[u-1];p[k.name]=c&&k.repeatable?c.split("/"):c}return p}function l(m){let g="",p=!1;for(const u of t){(!p||!g.endsWith("/"))&&(g+="/"),p=!1;for(const c of u)if(c.type===0)g+=c.value;else if(c.type===1){const{value:k,repeatable:_,optional:x}=c,f=k in m?m[k]:"";if(xe(f)&&!_)throw new Error(`Provided param "${k}" is an array but it is not repeatable (* or + modifiers)`);const b=xe(f)?f.join("/"):f;if(!b)if(x)u.length<2&&(g.endsWith("/")?g=g.slice(0,-1):p=!0);else throw new Error(`Missing required param "${k}"`);g+=b}}return g||"/"}return{re:i,score:a,keys:r,parse:o,stringify:l}}function To(t,e){let n=0;for(;n<t.length&&n<e.length;){const a=e[n]-t[n];if(a)return a;n++}return t.length<e.length?t.length===1&&t[0]===40+40?-1:1:t.length>e.length?e.length===1&&e[0]===40+40?1:-1:0}function xo(t,e){let n=0;const a=t.score,s=e.score;for(;n<a.length&&n<s.length;){const r=To(a[n],s[n]);if(r)return r;n++}if(Math.abs(s.length-a.length)===1){if(Yn(a))return 1;if(Yn(s))return-1}return s.length-a.length}function Yn(t){const e=t[t.length-1];return t.length>0&&e[e.length-1]<0}const ko={type:0,value:""},Co=/[a-zA-Z0-9_]/;function _o(t){if(!t)return[[]];if(t==="/")return[[ko]];if(!t.startsWith("/"))throw new Error(`Invalid path "${t}"`);function e(c){throw new Error(`ERR (${n})/"${m}": ${c}`)}let n=0,a=n;const s=[];let r;function i(){r&&s.push(r),r=[]}let o=0,l,m="",g="";function p(){m&&(n===0?r.push({type:0,value:m}):n===1||n===2||n===3?(r.length>1&&(l==="*"||l==="+")&&e(`A repeatable param (${m}) must be alone in its segment. eg: '/:ids+.`),r.push({type:1,value:m,regexp:g,repeatable:l==="*"||l==="+",optional:l==="*"||l==="?"})):e("Invalid state to consume buffer"),m="")}function u(){m+=l}for(;o<t.length;){if(l=t[o++],l==="\\"&&n!==2){a=n,n=4;continue}switch(n){case 0:l==="/"?(m&&p(),i()):l===":"?(p(),n=1):u();break;case 4:u(),n=a;break;case 1:l==="("?n=2:Co.test(l)?u():(p(),n=0,l!=="*"&&l!=="?"&&l!=="+"&&o--);break;case 2:l===")"?g[g.length-1]=="\\"?g=g.slice(0,-1)+l:n=3:g+=l;break;case 3:p(),n=0,l!=="*"&&l!=="?"&&l!=="+"&&o--,g="";break;default:e("Unknown state");break}}return n===2&&e(`Unfinished custom RegExp for param "${m}"`),p(),i(),s}function wo(t,e,n){const a=Lo(_o(t.path),n),s=Y(a,{record:t,parent:e,children:[],alias:[]});return e&&!s.record.aliasOf==!e.record.aliasOf&&e.children.push(s),s}function Eo(t,e){const n=[],a=new Map;e=ea({strict:!1,end:!0,sensitive:!1},e);function s(g){return a.get(g)}function r(g,p,u){const c=!u,k=Po(g);k.aliasOf=u&&u.record;const _=ea(e,g),x=[k];if("alias"in g){const h=typeof g.alias=="string"?[g.alias]:g.alias;for(const v of h)x.push(Y({},k,{components:u?u.record.components:k.components,path:v,aliasOf:u?u.record:k}))}let f,b;for(const h of x){const{path:v}=h;if(p&&v[0]!=="/"){const d=p.record.path,L=d[d.length-1]==="/"?"":"/";h.path=p.record.path+(v&&L+v)}if(f=wo(h,p,_),u?u.alias.push(f):(b=b||f,b!==f&&b.alias.push(f),c&&g.name&&!Jn(f)&&i(g.name)),k.children){const d=k.children;for(let L=0;L<d.length;L++)r(d[L],f,u&&u.children[L])}u=u||f,(f.record.components&&Object.keys(f.record.components).length||f.record.name||f.record.redirect)&&l(f)}return b?()=>{i(b)}:rt}function i(g){if(Ns(g)){const p=a.get(g);p&&(a.delete(g),n.splice(n.indexOf(p),1),p.children.forEach(i),p.alias.forEach(i))}else{const p=n.indexOf(g);p>-1&&(n.splice(p,1),g.record.name&&a.delete(g.record.name),g.children.forEach(i),g.alias.forEach(i))}}function o(){return n}function l(g){let p=0;for(;p<n.length&&xo(g,n[p])>=0&&(g.record.path!==n[p].record.path||!Bs(g,n[p]));)p++;n.splice(p,0,g),g.record.name&&!Jn(g)&&a.set(g.record.name,g)}function m(g,p){let u,c={},k,_;if("name"in g&&g.name){if(u=a.get(g.name),!u)throw Ze(1,{location:g});_=u.record.name,c=Y(Qn(p.params,u.keys.filter(b=>!b.optional).map(b=>b.name)),g.params&&Qn(g.params,u.keys.map(b=>b.name))),k=u.stringify(c)}else if("path"in g)k=g.path,u=n.find(b=>b.re.test(k)),u&&(c=u.parse(k),_=u.record.name);else{if(u=p.name?a.get(p.name):n.find(b=>b.re.test(p.path)),!u)throw Ze(1,{location:g,currentLocation:p});_=u.record.name,c=Y({},p.params,g.params),k=u.stringify(c)}const x=[];let f=u;for(;f;)x.unshift(f.record),f=f.parent;return{name:_,path:k,params:c,matched:x,meta:Ao(x)}}return t.forEach(g=>r(g)),{addRoute:r,resolve:m,removeRoute:i,getRoutes:o,getRecordMatcher:s}}function Qn(t,e){const n={};for(const a of e)a in t&&(n[a]=t[a]);return n}function Po(t){return{path:t.path,redirect:t.redirect,name:t.name,meta:t.meta||{},aliasOf:void 0,beforeEnter:t.beforeEnter,props:So(t),children:t.children||[],instances:{},leaveGuards:new Set,updateGuards:new Set,enterCallbacks:{},components:"components"in t?t.components||null:t.component&&{default:t.component}}}function So(t){const e={},n=t.props||!1;if("component"in t)e.default=n;else for(const a in t.components)e[a]=typeof n=="object"?n[a]:n;return e}function Jn(t){for(;t;){if(t.record.aliasOf)return!0;t=t.parent}return!1}function Ao(t){return t.reduce((e,n)=>Y(e,n.meta),{})}function ea(t,e){const n={};for(const a in t)n[a]=a in e?e[a]:t[a];return n}function Bs(t,e){return e.children.some(n=>n===t||Bs(t,n))}const qs=/#/g,Io=/&/g,Go=/\//g,Ro=/=/g,Do=/\?/g,Fs=/\+/g,Mo=/%5B/g,No=/%5D/g,zs=/%5E/g,Oo=/%60/g,Vs=/%7B/g,Bo=/%7C/g,Hs=/%7D/g,qo=/%20/g;function Sn(t){return encodeURI(""+t).replace(Bo,"|").replace(Mo,"[").replace(No,"]")}function Fo(t){return Sn(t).replace(Vs,"{").replace(Hs,"}").replace(zs,"^")}function Ln(t){return Sn(t).replace(Fs,"%2B").replace(qo,"+").replace(qs,"%23").replace(Io,"%26").replace(Oo,"`").replace(Vs,"{").replace(Hs,"}").replace(zs,"^")}function zo(t){return Ln(t).replace(Ro,"%3D")}function Vo(t){return Sn(t).replace(qs,"%23").replace(Do,"%3F")}function Ho(t){return t==null?"":Vo(t).replace(Go,"%2F")}function Tt(t){try{return decodeURIComponent(""+t)}catch{}return""+t}function jo(t){const e={};if(t===""||t==="?")return e;const a=(t[0]==="?"?t.slice(1):t).split("&");for(let s=0;s<a.length;++s){const r=a[s].replace(Fs," "),i=r.indexOf("="),o=Tt(i<0?r:r.slice(0,i)),l=i<0?null:Tt(r.slice(i+1));if(o in e){let m=e[o];xe(m)||(m=e[o]=[m]),m.push(l)}else e[o]=l}return e}function ta(t){let e="";for(let n in t){const a=t[n];if(n=zo(n),a==null){a!==void 0&&(e+=(e.length?"&":"")+n);continue}(xe(a)?a.map(r=>r&&Ln(r)):[a&&Ln(a)]).forEach(r=>{r!==void 0&&(e+=(e.length?"&":"")+n,r!=null&&(e+="="+r))})}return e}function Uo(t){const e={};for(const n in t){const a=t[n];a!==void 0&&(e[n]=xe(a)?a.map(s=>s==null?null:""+s):a==null?a:""+a)}return e}const $o=Symbol(""),na=Symbol(""),Et=Symbol(""),js=Symbol(""),Tn=Symbol("");function nt(){let t=[];function e(a){return t.push(a),()=>{const s=t.indexOf(a);s>-1&&t.splice(s,1)}}function n(){t=[]}return{add:e,list:()=>t.slice(),reset:n}}function Ie(t,e,n,a,s){const r=a&&(a.enterCallbacks[s]=a.enterCallbacks[s]||[]);return()=>new Promise((i,o)=>{const l=p=>{p===!1?o(Ze(4,{from:n,to:e})):p instanceof Error?o(p):fo(p)?o(Ze(2,{from:e,to:p})):(r&&a.enterCallbacks[s]===r&&typeof p=="function"&&r.push(p),i())},m=t.call(a&&a.instances[s],e,n,l);let g=Promise.resolve(m);t.length<3&&(g=g.then(l)),g.catch(p=>o(p))})}function Vt(t,e,n,a){const s=[];for(const r of t)for(const i in r.components){let o=r.components[i];if(!(e!=="beforeRouteEnter"&&!r.instances[i]))if(Wo(o)){const m=(o.__vccOpts||o)[e];m&&s.push(Ie(m,n,a,r,i))}else{let l=o();s.push(()=>l.then(m=>{if(!m)return Promise.reject(new Error(`Couldn't resolve component "${i}" at "${r.path}"`));const g=Qr(m)?m.default:m;r.components[i]=g;const u=(g.__vccOpts||g)[e];return u&&Ie(u,n,a,r,i)()}))}}return s}function Wo(t){return typeof t=="object"||"displayName"in t||"props"in t||"__vccOpts"in t}function aa(t){const e=Ke(Et),n=Ke(js),a=oe(()=>e.resolve(V(t.to))),s=oe(()=>{const{matched:l}=a.value,{length:m}=l,g=l[m-1],p=n.matched;if(!g||!p.length)return-1;const u=p.findIndex(Xe.bind(null,g));if(u>-1)return u;const c=sa(l[m-2]);return m>1&&sa(g)===c&&p[p.length-1].path!==c?p.findIndex(Xe.bind(null,l[m-2])):u}),r=oe(()=>s.value>-1&&Yo(n.params,a.value.params)),i=oe(()=>s.value>-1&&s.value===n.matched.length-1&&Ds(n.params,a.value.params));function o(l={}){return Zo(l)?e[V(t.replace)?"replace":"push"](V(t.to)).catch(rt):Promise.resolve()}return{route:a,href:oe(()=>a.value.href),isActive:r,isExactActive:i,navigate:o}}const Ko=Te({name:"RouterLink",compatConfig:{MODE:3},props:{to:{type:[String,Object],required:!0},replace:Boolean,activeClass:String,exactActiveClass:String,custom:Boolean,ariaCurrentValue:{type:String,default:"page"}},useLink:aa,setup(t,{slots:e}){const n=wr(aa(t)),{options:a}=Ke(Et),s=oe(()=>({[ra(t.activeClass,a.linkActiveClass,"router-link-active")]:n.isActive,[ra(t.exactActiveClass,a.linkExactActiveClass,"router-link-exact-active")]:n.isExactActive}));return()=>{const r=e.default&&e.default(n);return t.custom?r:Rs("a",{"aria-current":n.isExactActive?t.ariaCurrentValue:null,href:n.href,onClick:n.navigate,class:s.value},r)}}}),Xo=Ko;function Zo(t){if(!(t.metaKey||t.altKey||t.ctrlKey||t.shiftKey)&&!t.defaultPrevented&&!(t.button!==void 0&&t.button!==0)){if(t.currentTarget&&t.currentTarget.getAttribute){const e=t.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(e))return}return t.preventDefault&&t.preventDefault(),!0}}function Yo(t,e){for(const n in e){const a=e[n],s=t[n];if(typeof a=="string"){if(a!==s)return!1}else if(!xe(s)||s.length!==a.length||a.some((r,i)=>r!==s[i]))return!1}return!0}function sa(t){return t?t.aliasOf?t.aliasOf.path:t.path:""}const ra=(t,e,n)=>t??e??n,Qo=Te({name:"RouterView",inheritAttrs:!1,props:{name:{type:String,default:"default"},route:Object},compatConfig:{MODE:3},setup(t,{attrs:e,slots:n}){const a=Ke(Tn),s=oe(()=>t.route||a.value),r=Ke(na,0),i=oe(()=>{let m=V(r);const{matched:g}=s.value;let p;for(;(p=g[m])&&!p.components;)m++;return m}),o=oe(()=>s.value.matched[i.value]);Ot(na,oe(()=>i.value+1)),Ot($o,o),Ot(Tn,s);const l=ze();return Er(()=>[l.value,o.value,t.name],([m,g,p],[u,c,k])=>{g&&(g.instances[p]=m,c&&c!==g&&m&&m===u&&(g.leaveGuards.size||(g.leaveGuards=c.leaveGuards),g.updateGuards.size||(g.updateGuards=c.updateGuards))),m&&g&&(!c||!Xe(g,c)||!u)&&(g.enterCallbacks[p]||[]).forEach(_=>_(m))},{flush:"post"}),()=>{const m=s.value,g=t.name,p=o.value,u=p&&p.components[g];if(!u)return oa(n.default,{Component:u,route:m});const c=p.props[g],k=c?c===!0?m.params:typeof c=="function"?c(m):c:null,x=Rs(u,Y({},k,e,{onVnodeUnmounted:f=>{f.component.isUnmounted&&(p.instances[g]=null)},ref:l}));return oa(n.default,{Component:x,route:m})||x}}});function oa(t,e){if(!t)return null;const n=t(e);return n.length===1?n[0]:n}const Jo=Qo;function ei(t){const e=Eo(t.routes,t),n=t.parseQuery||jo,a=t.stringifyQuery||ta,s=t.history,r=nt(),i=nt(),o=nt(),l=kr(Ae);let m=Ae;$e&&t.scrollBehavior&&"scrollRestoration"in history&&(history.scrollRestoration="manual");const g=Ft.bind(null,G=>""+G),p=Ft.bind(null,Ho),u=Ft.bind(null,Tt);function c(G,O){let N,B;return Ns(G)?(N=e.getRecordMatcher(G),B=O):B=G,e.addRoute(B,N)}function k(G){const O=e.getRecordMatcher(G);O&&e.removeRoute(O)}function _(){return e.getRoutes().map(G=>G.record)}function x(G){return!!e.getRecordMatcher(G)}function f(G,O){if(O=Y({},O||l.value),typeof G=="string"){const U=zt(n,G,O.path),ne=e.resolve({path:U.path},O),tt=s.createHref(U.fullPath);return Y(U,ne,{params:u(ne.params),hash:Tt(U.hash),redirectedFrom:void 0,href:tt})}let N;if("path"in G)N=Y({},G,{path:zt(n,G.path,O.path).path});else{const U=Y({},G.params);for(const ne in U)U[ne]==null&&delete U[ne];N=Y({},G,{params:p(U)}),O.params=p(O.params)}const B=e.resolve(N,O),K=G.hash||"";B.params=g(u(B.params));const J=to(a,Y({},G,{hash:Fo(K),path:B.path})),j=s.createHref(J);return Y({fullPath:J,hash:K,query:a===ta?Uo(G.query):G.query||{}},B,{redirectedFrom:void 0,href:j})}function b(G){return typeof G=="string"?zt(n,G,l.value.path):Y({},G)}function h(G,O){if(m!==G)return Ze(8,{from:O,to:G})}function v(G){return C(G)}function d(G){return v(Y(b(G),{replace:!0}))}function L(G){const O=G.matched[G.matched.length-1];if(O&&O.redirect){const{redirect:N}=O;let B=typeof N=="function"?N(G):N;return typeof B=="string"&&(B=B.includes("?")||B.includes("#")?B=b(B):{path:B},B.params={}),Y({query:G.query,hash:G.hash,params:"path"in B?{}:G.params},B)}}function C(G,O){const N=m=f(G),B=l.value,K=G.state,J=G.force,j=G.replace===!0,U=L(N);if(U)return C(Y(b(U),{state:typeof U=="object"?Y({},K,U.state):K,force:J,replace:j}),O||N);const ne=N;ne.redirectedFrom=O;let tt;return!J&&no(a,B,N)&&(tt=Ze(16,{to:ne,from:B}),Q(B,B,!0,!1)),(tt?Promise.resolve(tt):R(ne,B)).catch(ce=>Ee(ce)?Ee(ce,2)?ce:H(ce):M(ce,ne,B)).then(ce=>{if(ce){if(Ee(ce,2))return C(Y({replace:j},b(ce.to),{state:typeof ce.to=="object"?Y({},K,ce.to.state):K,force:J}),O||ne)}else ce=E(ne,B,!0,j,K);return y(ne,B,ce),ce})}function A(G,O){const N=h(G,O);return N?Promise.reject(N):Promise.resolve()}function I(G){const O=se.values().next().value;return O&&typeof O.runWithContext=="function"?O.runWithContext(G):G()}function R(G,O){let N;const[B,K,J]=ti(G,O);N=Vt(B.reverse(),"beforeRouteLeave",G,O);for(const U of B)U.leaveGuards.forEach(ne=>{N.push(Ie(ne,G,O))});const j=A.bind(null,G,O);return N.push(j),re(N).then(()=>{N=[];for(const U of r.list())N.push(Ie(U,G,O));return N.push(j),re(N)}).then(()=>{N=Vt(K,"beforeRouteUpdate",G,O);for(const U of K)U.updateGuards.forEach(ne=>{N.push(Ie(ne,G,O))});return N.push(j),re(N)}).then(()=>{N=[];for(const U of J)if(U.beforeEnter)if(xe(U.beforeEnter))for(const ne of U.beforeEnter)N.push(Ie(ne,G,O));else N.push(Ie(U.beforeEnter,G,O));return N.push(j),re(N)}).then(()=>(G.matched.forEach(U=>U.enterCallbacks={}),N=Vt(J,"beforeRouteEnter",G,O),N.push(j),re(N))).then(()=>{N=[];for(const U of i.list())N.push(Ie(U,G,O));return N.push(j),re(N)}).catch(U=>Ee(U,8)?U:Promise.reject(U))}function y(G,O,N){o.list().forEach(B=>I(()=>B(G,O,N)))}function E(G,O,N,B,K){const J=h(G,O);if(J)return J;const j=O===Ae,U=$e?history.state:{};N&&(B||j?s.replace(G.fullPath,Y({scroll:j&&U&&U.scroll},K)):s.push(G.fullPath,K)),l.value=G,Q(G,O,N,j),H()}let S;function T(){S||(S=s.listen((G,O,N)=>{if(!pe.listening)return;const B=f(G),K=L(B);if(K){C(Y(K,{replace:!0}),B).catch(rt);return}m=B;const J=l.value;$e&&mo(Wn(J.fullPath,N.delta),wt()),R(B,J).catch(j=>Ee(j,12)?j:Ee(j,2)?(C(j.to,B).then(U=>{Ee(U,20)&&!N.delta&&N.type===lt.pop&&s.go(-1,!1)}).catch(rt),Promise.reject()):(N.delta&&s.go(-N.delta,!1),M(j,B,J))).then(j=>{j=j||E(B,J,!1),j&&(N.delta&&!Ee(j,8)?s.go(-N.delta,!1):N.type===lt.pop&&Ee(j,20)&&s.go(-1,!1)),y(B,J,j)}).catch(rt)}))}let P=nt(),w=nt(),D;function M(G,O,N){H(G);const B=w.list();return B.length?B.forEach(K=>K(G,O,N)):console.error(G),Promise.reject(G)}function z(){return D&&l.value!==Ae?Promise.resolve():new Promise((G,O)=>{P.add([G,O])})}function H(G){return D||(D=!G,T(),P.list().forEach(([O,N])=>G?N(G):O()),P.reset()),G}function Q(G,O,N,B){const{scrollBehavior:K}=t;if(!$e||!K)return Promise.resolve();const J=!N&&co(Wn(G.fullPath,0))||(B||!N)&&history.state&&history.state.scroll||null;return _r().then(()=>K(G,O,J)).then(j=>j&&uo(j)).catch(j=>M(j,G,O))}const $=G=>s.go(G);let le;const se=new Set,pe={currentRoute:l,listening:!0,addRoute:c,removeRoute:k,hasRoute:x,getRoutes:_,resolve:f,options:t,push:v,replace:d,go:$,back:()=>$(-1),forward:()=>$(1),beforeEach:r.add,beforeResolve:i.add,afterEach:o.add,onError:w.add,isReady:z,install(G){const O=this;G.component("RouterLink",Xo),G.component("RouterView",Jo),G.config.globalProperties.$router=O,Object.defineProperty(G.config.globalProperties,"$route",{enumerable:!0,get:()=>V(l)}),$e&&!le&&l.value===Ae&&(le=!0,v(s.location).catch(K=>{}));const N={};for(const K in Ae)Object.defineProperty(N,K,{get:()=>l.value[K],enumerable:!0});G.provide(Et,O),G.provide(js,Cr(N)),G.provide(Tn,l);const B=G.unmount;se.add(G),G.unmount=function(){se.delete(G),se.size<1&&(m=Ae,S&&S(),S=null,l.value=Ae,le=!1,D=!1),B()}}};function re(G){return G.reduce((O,N)=>O.then(()=>I(N)),Promise.resolve())}return pe}function ti(t,e){const n=[],a=[],s=[],r=Math.max(e.matched.length,t.matched.length);for(let i=0;i<r;i++){const o=e.matched[i];o&&(t.matched.find(m=>Xe(m,o))?a.push(o):n.push(o));const l=t.matched[i];l&&(e.matched.find(m=>Xe(m,l))||s.push(l))}return[n,a,s]}function An(){return Ke(Et)}var ve=(t=>(t.GUIDE="guide",t.API="api",t.EXAMPLES="examples",t))(ve||{}),We=(t=>(t.FUNCTION="functions",t.CLASS="classes",t.INTERFACE="interfaces",t.TYPE="types",t.ENUM="enumerations",t))(We||{}),ni=(t=>(t.ABSTRACT="abstract",t.OPTIONAL="optional",t.READONLY="readonly",t.PROTECTED="protected",t.PRIVATE="private",t.STATIC="static",t))(ni||{});const Us={Geometry:[{id:"triangle",name:"Triangle"},{id:"rectangle",name:"Rectangle",description:"The color here represents UVs, directly included in the 4 [nanogl-primitives-2d](/api/nanogl-primitives-2d) geometries, with the *aTexCoord* vec2 attribute."},{id:"circle",name:"Circle"},{id:"rectangle-outline",name:"Rectangle outline"},{id:"circle-outline",name:"Circle outline",description:"The color here represents the distance from the inner edge of the geometry, directly included in [CircleOutline](/api/nanogl-primitives-2d/classes/CircleOutline) and [RectOutline](/api/nanogl-primitives-2d/classes/RectOutline), with the *aSide* float attribute."}],Materials:[]},$s=[{name:"nanogl",description:"WebGL micro framework",classes:[{id:409,name:"AbstractTexture",originalName:"default",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-base.ts#L23",comment:"This class is the base for all texture classes.",tags:["abstract"],constructors:[{id:410,name:"AbstractTexture",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-base.ts#L56",tags:[],type:{name:"AbstractTexture",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-base.ts#L23"},params:[{id:412,name:"gl",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[],comment:"The webgl context this Texture belongs to"},{id:413,name:"format",type:{name:"number"},tags:["optional"],comment:"The pixel format of the texture (`GL_RGB`, `GL_RGBA`, etc.), defaults to `GL_RGB`",optional:!0},{id:414,name:"type",type:{name:"number"},tags:["optional"],comment:"The pixel data type of the texture (`GL_UNSIGNED_BYTE`, `GL_FLOAT`, etc.), defaults to `GL_UNSIGNED_BYTE`",optional:!0},{id:415,name:"internal",type:{name:"number"},tags:["optional"],comment:"The pixel internal format of the texture, defaults to the `format` parameter value",optional:!0}],typeParams:[]}],properties:[{id:425,name:"_target",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-base.ts#L48",comment:"The binding point for this Texture",type:{name:"number"},tags:["abstract"]},{id:424,name:"_uid",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-base.ts#L45",comment:"Unique id for the Texture",type:{name:"number"},tags:["readonly"]},{id:421,name:"format",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-base.ts#L38",comment:"The pixel format of the texture",defaultValue:"0",type:{name:"number"},tags:[]},{id:417,name:"gl",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-base.ts#L28",comment:"The webgl context this Texture belongs to",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:["readonly"]},{id:420,name:"height",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-base.ts#L35",comment:"The height of the texture",type:{name:"number"},tags:[]},{id:418,name:"id",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-base.ts#L30",comment:"The underlying webgl texture",type:{name:"WebGLTexture"},tags:["readonly"]},{id:422,name:"internal",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-base.ts#L40",comment:"The pixel internal format of the texture",defaultValue:"0",type:{name:"number"},tags:[]},{id:416,name:"textureType",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-base.ts#L25",comment:"The type of webgl texture (`TEXTURE_2D`, `TEXTURE_CUBE`, etc)",defaultValue:"TextureType.NONE",type:{name:"TextureType",lib:"nanogl",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-base.ts#L9"},tags:["readonly"]},{id:423,name:"type",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-base.ts#L42",comment:"The pixel data type of the texture",defaultValue:"0",type:{name:"number"},tags:[]},{id:419,name:"width",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-base.ts#L33",comment:"The width of the texture",type:{name:"number"},tags:[]}],accessors:[],methods:[{id:431,name:"bind",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-base.ts#L81",comment:"Bind the underlying webgl texture.",tags:[],type:{name:"void"},params:[{id:433,name:"unit",type:{name:"number"},tags:["optional"],comment:"The texture unit to make active before binding",optional:!0}],typeParams:[]},{id:443,name:"clamp",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-base.ts#L122",comment:"Make texture clamp :\nSet the `WRAP_S` and `WRAP_T` properties to `GL_CLAMP_TO_EDGE`.",tags:[],type:{name:"AbstractTexture",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-base.ts#L23"},typeParams:[]},{id:434,name:"dispose",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-base.ts#L92",comment:"Delete all webgl objects related to this Texture.",tags:[],type:{name:"void"},typeParams:[]},{id:445,name:"mirror",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-base.ts#L131",comment:"Make texture mirror :\nSet the `WRAP_S` and `WRAP_T` properties to `GL_MIRRORED_REPEAT`.",tags:[],type:{name:"AbstractTexture",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-base.ts#L23"},typeParams:[]},{id:441,name:"repeat",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-base.ts#L113",comment:"Make texture repeat :\nSet the `WRAP_S` and `WRAP_T` properties to `GL_REPEAT`.",tags:[],type:{name:"AbstractTexture",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-base.ts#L23"},typeParams:[]},{id:436,name:"setFilter",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-base.ts#L102",comment:"Change the filtering parameters.",tags:[],type:{name:"AbstractTexture",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-base.ts#L23"},params:[{id:438,name:"smooth",type:{name:"boolean"},tags:["optional"],comment:"Use linear filtering or not",optional:!0,defaultValue:"false"},{id:439,name:"mipmap",type:{name:"boolean"},tags:["optional"],comment:"Enable mipmapping or not",optional:!0,defaultValue:"false"},{id:440,name:"miplinear",type:{name:"boolean"},tags:["optional"],comment:"Use linear mipmapping or not",optional:!0,defaultValue:"false"}],typeParams:[]},{id:426,name:"setFormat",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-base.ts#L71",comment:"Define underlying format, internal format and data type of the texture.",tags:[],type:{name:"void"},params:[{id:428,name:"format",type:{name:"number"},tags:["optional"],comment:"The pixel format of the texture (`GL_RGB`, `GL_RGBA`, etc.), defaults to `GL_RGB`",optional:!0},{id:429,name:"type",type:{name:"number"},tags:["optional"],comment:"The pixel data type of the texture (`GL_UNSIGNED_BYTE`, `GL_FLOAT`, etc.), defaults to `GL_UNSIGNED_BYTE`",optional:!0},{id:430,name:"internal",type:{name:"number"},tags:["optional"],comment:"The pixel internal format of the texture, defaults to the `format` parameter value",optional:!0}],typeParams:[]},{id:447,name:"wrap",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-base.ts#L140",comment:"Set the `WRAP_S` and `WRAP_T` properties to the given value.",tags:[],type:{name:"AbstractTexture",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-base.ts#L23"},params:[{id:449,name:"wrap",type:{name:"number"},tags:[],comment:"The wrap value to use (`GL_REPEAT`, `GL_CLAMP_TO_EDGE`, etc.)"}],typeParams:[]}],extends:null,implements:null},{id:9,name:"ArrayBuffer",originalName:"default",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/arraybuffer.ts#L34",comment:"This class manages ARRAY_BUFFER type buffers.",tags:[],constructors:[{id:10,name:"ArrayBuffer",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/arraybuffer.ts#L57",tags:[],type:{name:"ArrayBuffer",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/arraybuffer.ts#L34"},params:[{id:12,name:"gl",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[],comment:"The webgl context this ArrayBuffer belongs to"},{id:13,name:"data",type:{listType:"union",list:[{name:"number"},{name:"BufferSource"}]},tags:["optional"],comment:"The data to fill the buffer with, or the size (in bytes)",optional:!0},{id:14,name:"usage",type:{name:"number"},tags:["optional"],comment:"The usage hint for this buffer (`GL_STATIC_DRAW`, `GL_DYNAMIC_DRAW`, etc.)",optional:!0,defaultValue:"gl.STATIC_DRAW"},{id:15,name:"glbuffer",type:{name:"WebGLBuffer"},tags:["optional"],comment:"A WebGLBuffer to use instead of creating a new one",optional:!0}],typeParams:[]}],properties:[{id:22,name:"attribs",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/arraybuffer.ts#L49",comment:"The attributes declared for this buffer",type:{name:"AttributeDef",lib:"nanogl",kind:"Interface",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/arraybuffer.ts#L12",isArray:!0},tags:[]},{id:17,name:"buffer",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/arraybuffer.ts#L38",comment:"The webgl buffer this ArrayBuffer writes to",type:{name:"WebGLBuffer"},tags:["readonly"]},{id:20,name:"byteLength",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/arraybuffer.ts#L45",comment:"The length in bytes of the buffer",type:{name:"number"},tags:[]},{id:16,name:"gl",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/arraybuffer.ts#L36",comment:"The webgl context this ArrayBuffer belongs to",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:["readonly"]},{id:21,name:"length",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/arraybuffer.ts#L47",comment:"The number of vertices in the buffer data",type:{name:"number"},tags:[]},{id:19,name:"stride",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/arraybuffer.ts#L43",comment:"The number of bytes for each vertex in this buffer",type:{name:"number"},tags:[]},{id:18,name:"usage",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/arraybuffer.ts#L41",comment:"The usage hint for this buffer",type:{name:"number"},tags:[]}],accessors:[],methods:[{id:48,name:"_computeLength",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/arraybuffer.ts#L155",comment:"Compute the number of vertices in the buffer data.",tags:[],type:{name:"void"},typeParams:[]},{id:25,name:"attrib",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/arraybuffer.ts#L87",comment:`Add attribute declaration for this buffer. Once the attributes declared, the buffer can be linked to
the program's attributes using [attribPointer](/api/nanogl/classes/ArrayBuffer#item-38).`,tags:[],type:{name:"ArrayBuffer",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/arraybuffer.ts#L34"},params:[{id:27,name:"name",type:{name:"string"},tags:[],comment:"The name of the program's attribute"},{id:28,name:"size",type:{name:"number"},tags:[],comment:"The size of the attribute (`1` for a number, `2` for a vec2, etc.)"},{id:29,name:"type",type:{name:"number"},tags:[],comment:"The type of data (`GL_FLOAT`, `GL_SHORT`, etc.)"},{id:30,name:"normalize",type:{name:"boolean"},tags:["optional"],comment:"Indicate if the data must be normalized",optional:!0,defaultValue:"false"}],typeParams:[]},{id:38,name:"attribPointer",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/arraybuffer.ts#L123",comment:`Link the given program attributes to this buffer. You should first declare attributes using [attrib](/api/nanogl/classes/ArrayBuffer#item-25)
before calling this method.`,tags:[],type:{name:"void"},params:[{id:40,name:"program",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[],comment:"The program to link"}],typeParams:[]},{id:23,name:"bind",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/arraybuffer.ts#L75",comment:"Bind the underlying webgl buffer.",tags:[],type:{name:"void"},typeParams:[]},{id:31,name:"data",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/arraybuffer.ts#L101",comment:"Fill the webgl buffer with the given data. You can also pass a number instead to allocate the buffer to a given size.",tags:[],type:{name:"void"},params:[{id:33,name:"array",type:{listType:"union",list:[{name:"number"},{name:"BufferSource"}]},tags:[],comment:"The data to use, or a size"}],typeParams:[]},{id:46,name:"dispose",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/arraybuffer.ts#L148",comment:"Delete all webgl objects related to this BaseBuffer.",tags:[],type:{name:"void"},typeParams:[]},{id:41,name:"draw",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/arraybuffer.ts#L144",comment:"Shortcut to `gl.drawArrays`.",tags:[],type:{name:"void"},params:[{id:43,name:"mode",type:{name:"number"},tags:[],comment:"The type of primitive to draw (`GL_TRIANGLE`, `GL_POINTS` etc)"},{id:44,name:"count",type:{name:"number"},tags:["optional"],comment:"The number of vertices to draw (the full buffer is used if omited)",optional:!0},{id:45,name:"offset",type:{name:"number"},tags:["optional"],comment:"The position of the first vertex to draw",optional:!0,defaultValue:"0"}],typeParams:[]},{id:34,name:"subData",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/arraybuffer.ts#L111",comment:"Set part of the buffer with the given data, starting at an offset.",tags:[],type:{name:"void"},params:[{id:36,name:"array",type:{name:"BufferSource"},tags:[],comment:"The data to use"},{id:37,name:"offset",type:{name:"number"},tags:[],comment:"The offset (in bytes) where the data should start to be written"}],typeParams:[]}],extends:[{name:"BaseBuffer",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/basebuffer.ts#L4"}],implements:null},{id:128,name:"Attachment",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L23",comment:"This class manages framebuffer attachments.",tags:[],constructors:[{id:129,name:"Attachment",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L34",tags:[],type:{name:"Attachment",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L23"},params:[{id:131,name:"target",type:{name:"AttachmentTarget",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L18"},tags:[],comment:"The texture or renderbuffer to attach"}],typeParams:[]}],properties:[{id:134,name:"_isTexture",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L29",comment:"Whether the attachment target is a texture or not",type:{name:"boolean"},tags:["private"]},{id:132,name:"level",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L25",comment:"The mipmap level of the target texture (must be `0`)",type:{name:"number"},tags:[]},{id:133,name:"target",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L27",comment:"The target (texture or renderbuffer) of this attachment",type:{name:"AttachmentTarget",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L18"},tags:["readonly"]}],accessors:[],methods:[{id:141,name:"_attach",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L71",comment:`Attach the target to the FBO.
The FBO must be explicitely bound before calling this method.`,tags:[],type:{name:"void"},params:[{id:143,name:"bindingPoint",type:{name:"number"},tags:[],comment:"The binding point of the attachment (`GL_COLOR_ATTACHMENT0`, `GL_DEPTH_ATTACHMENT`, etc.)"}],typeParams:[]},{id:144,name:"_detach",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L85",comment:`Detach the target from the FBO.
The FBO must be explicitely bound before calling this method.`,tags:[],type:{name:"void"},params:[{id:146,name:"bindingPoint",type:{name:"number"},tags:[],comment:"The binding point of the attachment (`GL_COLOR_ATTACHMENT0`, `GL_DEPTH_ATTACHMENT`, etc.)"}],typeParams:[]},{id:137,name:"_resize",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L54",comment:"Resize the attachment target.",tags:[],type:{name:"void"},params:[{id:139,name:"w",type:{name:"number"},tags:[],comment:"The new width"},{id:140,name:"h",type:{name:"number"},tags:[],comment:"The new height"}],typeParams:[]},{id:147,name:"dispose",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L97",comment:"Delete all webgl objects related to this Attachment.",tags:[],type:{name:"void"},typeParams:[]},{id:135,name:"isTexture",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L45",comment:"Getter for the `_isTexture` property.\nKnow whether the attachment target is a texture or not.",tags:[],type:{name:"boolean"},typeParams:[]}],extends:null,implements:null},{id:79,name:"BaseBuffer",originalName:"default",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/basebuffer.ts#L4",comment:"This class is the base for all buffer classes.",tags:["abstract"],constructors:[{id:80,name:"BaseBuffer",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/basebuffer.ts#L4",tags:[],type:{name:"BaseBuffer",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/basebuffer.ts#L4"},typeParams:[]}],properties:[],accessors:[],methods:[{id:82,name:"bind",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/basebuffer.ts#L8",comment:"Bind the underlying webgl buffer.",tags:["abstract"],type:{name:"void"},typeParams:[]},{id:86,name:"data",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/basebuffer.ts#L19",comment:"Fill the webgl buffer with the given data. You can also pass a number instead to allocate the buffer to a given size.",tags:["abstract"],type:{name:"void"},params:[{id:88,name:"array",type:{listType:"union",list:[{name:"number"},{name:"BufferSource"}]},tags:[],comment:"The data to use, or a size"}],typeParams:[]},{id:84,name:"dispose",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/basebuffer.ts#L13",comment:"Delete all webgl objects related to this BaseBuffer.",tags:["abstract"],type:{name:"void"},typeParams:[]},{id:93,name:"draw",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/basebuffer.ts#L34",comment:"Shortcut to `gl.drawArrays`.",tags:["abstract"],type:{name:"void"},params:[{id:95,name:"mode",type:{name:"number"},tags:[],comment:"The type of primitive to draw (`GL_TRIANGLE`, `GL_POINTS` etc)"},{id:96,name:"count",type:{name:"number"},tags:["optional"],comment:"The number of elements to draw (the full buffer is used if omited)",optional:!0},{id:97,name:"offset",type:{name:"number"},tags:["optional"],comment:"The position in the buffer to start from",optional:!0}],typeParams:[]},{id:106,name:"drawLineLoop",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/basebuffer.ts#L59",comment:"Shortcut to `gl.drawArrays(gl.LINE_LOOP, offset, count)`.",tags:[],type:{name:"void"},params:[{id:108,name:"count",type:{name:"number"},tags:["optional"],comment:"The number of elements to draw (the full buffer is used if omited)",optional:!0},{id:109,name:"offset",type:{name:"number"},tags:["optional"],comment:"The position in the buffer to start from",optional:!0}],typeParams:[]},{id:110,name:"drawLineStrip",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/basebuffer.ts#L68",comment:"Shortcut to `gl.drawArrays(gl.LINE_STRIP, offset, count)`.",tags:[],type:{name:"void"},params:[{id:112,name:"count",type:{name:"number"},tags:["optional"],comment:"The number of elements to draw (the full buffer is used if omited)",optional:!0},{id:113,name:"offset",type:{name:"number"},tags:["optional"],comment:"The position in the buffer to start from",optional:!0}],typeParams:[]},{id:102,name:"drawLines",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/basebuffer.ts#L50",comment:"Shortcut to `gl.drawArrays(gl.LINES, offset, count)`.",tags:[],type:{name:"void"},params:[{id:104,name:"count",type:{name:"number"},tags:["optional"],comment:"The number of elements to draw (the full buffer is used if omited)",optional:!0},{id:105,name:"offset",type:{name:"number"},tags:["optional"],comment:"The position in the buffer to start from",optional:!0}],typeParams:[]},{id:98,name:"drawPoints",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/basebuffer.ts#L41",comment:"Shortcut to `gl.drawArrays(gl.POINTS, offset, count)`.",tags:[],type:{name:"void"},params:[{id:100,name:"count",type:{name:"number"},tags:["optional"],comment:"The number of elements to draw (the full buffer is used if omited)",optional:!0},{id:101,name:"offset",type:{name:"number"},tags:["optional"],comment:"The position in the buffer to start from",optional:!0}],typeParams:[]},{id:122,name:"drawTriangleFan",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/basebuffer.ts#L95",comment:"Shortcut to `gl.drawArrays(gl.TRIANGLE_FAN, offset, count)`.",tags:[],type:{name:"void"},params:[{id:124,name:"count",type:{name:"number"},tags:["optional"],comment:"The number of elements to draw (the full buffer is used if omited)",optional:!0},{id:125,name:"offset",type:{name:"number"},tags:["optional"],comment:"The position in the buffer to start from",optional:!0}],typeParams:[]},{id:118,name:"drawTriangleStrip",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/basebuffer.ts#L86",comment:"Shortcut to `gl.drawArrays(gl.TRIANGLE_STRIP, offset, count)`.",tags:[],type:{name:"void"},params:[{id:120,name:"count",type:{name:"number"},tags:["optional"],comment:"The number of elements to draw (the full buffer is used if omited)",optional:!0},{id:121,name:"offset",type:{name:"number"},tags:["optional"],comment:"The position in the buffer to start from",optional:!0}],typeParams:[]},{id:114,name:"drawTriangles",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/basebuffer.ts#L77",comment:"Shortcut to `gl.drawArrays(gl.TRIANGLES, offset, count)`.",tags:[],type:{name:"void"},params:[{id:116,name:"count",type:{name:"number"},tags:["optional"],comment:"The number of elements to draw (the full buffer is used if omited)",optional:!0},{id:117,name:"offset",type:{name:"number"},tags:["optional"],comment:"The position in the buffer to start from",optional:!0}],typeParams:[]},{id:89,name:"subData",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/basebuffer.ts#L26",comment:"Set part of the buffer with the given data, starting at an offset.",tags:["abstract"],type:{name:"void"},params:[{id:91,name:"array",type:{name:"BufferSource"},tags:[],comment:"The data to use"},{id:92,name:"offset",type:{name:"number"},tags:[],comment:"The offset (in bytes) where the data should start to be written"}],typeParams:[]}],extends:null,implements:null},{id:149,name:"Fbo",originalName:"default",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L105",comment:"This class manages framebuffers and their attachments.",tags:[],constructors:[{id:150,name:"Fbo",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L124",tags:[],type:{name:"Fbo",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L105"},params:[{id:152,name:"gl",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[],comment:"The webgl context this FBO belongs to"}],typeParams:[]}],properties:[{id:156,name:"attachments",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L114",comment:"The list of the bindingPoint/attachment pairs setup for this FBO",type:{name:"Record",data:{arguments:[{name:"string"},{name:"Attachment",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L23"}]}},tags:[]},{id:155,name:"attachmentsList",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L112",comment:"The list of the attachments setup for this FBO",type:{name:"Attachment",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L23",isArray:!0},tags:["readonly"]},{id:154,name:"fbo",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L109",comment:"The underlying webgl framebuffer",type:{name:"WebGLFramebuffer"},tags:["readonly"]},{id:153,name:"gl",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L107",comment:"The webgl context this FBO belongs to",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:["readonly"]},{id:158,name:"height",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L119",comment:"The height of this FBO",type:{name:"number"},tags:[]},{id:157,name:"width",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L117",comment:"The width of this FBO",type:{name:"number"},tags:[]}],accessors:[],methods:[{id:201,name:"_allocate",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L309",comment:"Resize all attachments to the FBO size.",tags:[],type:{name:"void"},typeParams:[]},{id:159,name:"attach",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L142",comment:`Add an attachment to this FBO.
The FBO must be explicitely bound before calling this method.`,tags:[],type:{name:"Attachment",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L23"},params:[{id:161,name:"bindingPoint",type:{name:"number"},tags:[],comment:"The binding point of the attachment (`GL_COLOR_ATTACHMENT0`, `GL_DEPTH_ATTACHMENT`, etc.)"},{id:162,name:"res",type:{name:"AttachmentTarget",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L18"},tags:[],comment:"The texture or buffer to attach"}],typeParams:[]},{id:177,name:"attachColor",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L220",comment:`Attach a texture to the color attachment 0 of this FBO.
The FBO must be explicitely bound before calling this method.`,tags:[],type:{name:"Attachment",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L23"},params:[{id:179,name:"format",type:{name:"number"},tags:["optional"],comment:"The pixel format of the texture (`GL_RGB`, `GL_RGBA`, etc.), defaults to `GL_RGB`",optional:!0},{id:180,name:"type",type:{name:"number"},tags:["optional"],comment:"The pixel data type of the texture (`GL_UNSIGNED_BYTE`, `GL_FLOAT`, etc.), defaults to `GL_UNSIGNED_BYTE`",optional:!0},{id:181,name:"internal",type:{name:"number"},tags:["optional"],comment:"The pixel internal format of the texture, defaults to the `format` parameter value",optional:!0}],typeParams:[]},{id:182,name:"attachDepth",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L232",comment:`Attach a renderbuffer/texture to the depth/stencil attachment of this FBO.
 The FBO must be explicitely bound before calling this method.`,tags:[],type:{name:"Attachment",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L23"},params:[{id:184,name:"depth",type:{name:"boolean"},tags:["optional"],comment:"Add depth component or not",optional:!0,defaultValue:"true"},{id:185,name:"stencil",type:{name:"boolean"},tags:["optional"],comment:"Add stencil component or not",optional:!0,defaultValue:"false"},{id:186,name:"useTexture",type:{name:"boolean"},tags:["optional"],comment:"Use a Texture2D instead of a RenderBuffer. If true, the depth param must also be true. You also must ensure Depth Texture capability is available on your context.",optional:!0,defaultValue:"false"}],typeParams:[]},{id:191,name:"bind",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L261",comment:"Bind the underlying webgl framebuffer.",tags:[],type:{name:"void"},typeParams:[]},{id:193,name:"clear",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L269",comment:"Clear all buffers (color, depth and stencil).",tags:[],type:{name:"void"},typeParams:[]},{id:195,name:"defaultViewport",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L277",comment:"Set the webgl viewport to the size of this FBO.",tags:[],type:{name:"void"},typeParams:[]},{id:163,name:"detach",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L161",comment:`Remove an attachment from this FBO.
The FBO must be explicitely bound before calling this method.`,tags:[],type:{name:"void"},params:[{id:165,name:"bindingPoint",type:{name:"number"},tags:[],comment:"The binding point of the attachment (`GL_COLOR_ATTACHMENT0`, `GL_DEPTH_ATTACHMENT`, etc.)"}],typeParams:[]},{id:199,name:"dispose",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L293",comment:"Delete all webgl objects related to this FBO.",tags:[],type:{name:"void"},typeParams:[]},{id:166,name:"getAttachment",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L175",comment:"Get a specific attachment of this FBO (if it exists).",tags:[],type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"Attachment",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L23"}]},params:[{id:168,name:"bindingPoint",type:{name:"number"},tags:[],comment:"The binding point of the attachment (`GL_COLOR_ATTACHMENT0`, `GL_DEPTH_ATTACHMENT`, etc.)"}],typeParams:[]},{id:169,name:"getColor",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L187",comment:"Get the color attachment of this FBO (if it exists).",tags:[],type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"AttachmentTarget",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L18"}]},params:[{id:171,name:"index",type:{name:"number"},tags:["optional"],comment:"The color attachment index",optional:!0,defaultValue:"0"}],typeParams:[]},{id:172,name:"getColorTexture",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L196",comment:"Get the color texture of this FBO (if it exists).",tags:[],type:{name:"Texture2D",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-2d.ts#L9"},params:[{id:174,name:"index",type:{name:"number"},tags:["optional"],comment:"The color attachment index",optional:!0,defaultValue:"0"}],typeParams:[]},{id:175,name:"getDepth",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L205",comment:"Get the depth attachment of this FBO (if it exists).",tags:[],type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"AttachmentTarget",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L18"}]},typeParams:[]},{id:197,name:"isValid",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L285",comment:`Check if the FBO is valid.
The FBO must be explicitely bound before calling this method.`,tags:[],type:{name:"boolean"},typeParams:[]},{id:187,name:"resize",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L250",comment:"Resize the FBO and its attachments.",tags:[],type:{name:"void"},params:[{id:189,name:"w",type:{name:"number"},tags:[],comment:"The new width"},{id:190,name:"h",type:{name:"number"},tags:[],comment:"The new height"}],typeParams:[]}],extends:null,implements:null},{id:204,name:"IndexBuffer",originalName:"default",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/indexbuffer.ts#L13",comment:"This class manages ELEMENT_ARRAY_BUFFER type buffers.",tags:[],constructors:[{id:205,name:"IndexBuffer",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/indexbuffer.ts#L35",tags:[],type:{name:"IndexBuffer",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/indexbuffer.ts#L13"},params:[{id:207,name:"gl",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[],comment:"The webgl context this IndexBuffer belongs to"},{id:208,name:"type",type:{name:"number"},tags:["optional"],comment:"The number type of the index data (`GL_UNSIGNED_BYTE`, `GL_UNSIGNED_INT`, etc.)",optional:!0,defaultValue:"gl.UNSIGNED_SHORT"},{id:209,name:"data",type:{listType:"union",list:[{name:"number"},{name:"BufferSource"}]},tags:["optional"],comment:"The data to fill the buffer with, or the size (in bytes)",optional:!0},{id:210,name:"usage",type:{name:"number"},tags:["optional"],comment:"The usage hint for this buffer (`GL_STATIC_DRAW`, `GL_DYNAMIC_DRAW`, etc.)",optional:!0,defaultValue:"gl.STATIC_DRAW"},{id:211,name:"glbuffer",type:{name:"WebGLBuffer"},tags:["optional"],comment:"A WebGLBuffer to use instead of creating a new one",optional:!0}],typeParams:[]}],properties:[{id:213,name:"buffer",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/indexbuffer.ts#L17",comment:"The webgl buffer this IndexBuffer writes to",type:{name:"WebGLBuffer"},tags:["readonly"]},{id:217,name:"byteLength",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/indexbuffer.ts#L26",comment:"The length in bytes of the buffer",type:{name:"number"},tags:[]},{id:212,name:"gl",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/indexbuffer.ts#L15",comment:"The webgl context this IndexBuffer belongs to",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:["readonly"]},{id:215,name:"type",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/indexbuffer.ts#L22",comment:"The number type of the index data for this buffer",type:{name:"number"},tags:[]},{id:216,name:"typeSize",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/indexbuffer.ts#L24",comment:"The number of bytes for each index in this buffer",type:{name:"number"},tags:[]},{id:214,name:"usage",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/indexbuffer.ts#L20",comment:"The usage hint for this buffer",type:{name:"number"},tags:[]}],accessors:[],methods:[{id:218,name:"bind",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/indexbuffer.ts#L53",comment:"Bind the underlying webgl buffer.",tags:[],type:{name:"void"},typeParams:[]},{id:223,name:"data",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/indexbuffer.ts#L66",comment:"Fill the webgl buffer with the given data. You can also pass a number instead to allocate the buffer to a given size.",tags:[],type:{name:"void"},params:[{id:225,name:"array",type:{listType:"union",list:[{name:"number"},{name:"BufferSource"}]},tags:[],comment:"The data to use, or a size"}],typeParams:[]},{id:230,name:"dispose",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/indexbuffer.ts#L81",comment:"Delete all webgl objects related to this BaseBuffer.",tags:[],type:{name:"void"},typeParams:[]},{id:232,name:"draw",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/indexbuffer.ts#L91",comment:"Shortcut to `gl.drawArrays`.",tags:[],type:{name:"void"},params:[{id:234,name:"mode",type:{name:"number"},tags:[],comment:"The type of primitive to draw (`GL_TRIANGLE`, `GL_POINTS` etc)"},{id:235,name:"count",type:{name:"number"},tags:["optional"],comment:"The number of indices to draw (the full buffer is used if omited)",optional:!0},{id:236,name:"offset",type:{name:"number"},tags:["optional"],comment:"The position of the first index to draw",optional:!0,defaultValue:"0"}],typeParams:[]},{id:220,name:"setType",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/indexbuffer.ts#L61",comment:"Change the internal type of the index data of the IndexBuffer.",tags:[],type:{name:"void"},params:[{id:222,name:"type",type:{name:"number"},tags:[],comment:"the number type of the index data (`GL_UNSIGNED_BYTE`, `GL_UNSIGNED_INT`, etc)"}],typeParams:[]},{id:226,name:"subData",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/indexbuffer.ts#L74",comment:"Set part of the buffer with the given data, starting at an offset.",tags:[],type:{name:"void"},params:[{id:228,name:"array",type:{name:"BufferSource"},tags:[],comment:"The data to use"},{id:229,name:"offset",type:{name:"number"},tags:[],comment:"The offset (in bytes) where the data should start to be written"}],typeParams:[]}],extends:[{name:"BaseBuffer",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/basebuffer.ts#L4"}],implements:null},{id:266,name:"Program",originalName:"default",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15",comment:`This class provides provides shader compilation and webgl program linking functionality.
It also give you convenient access to active uniforms and attributes.`,tags:[],constructors:[{id:268,name:"Program",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L47",comment:"You can pass optional shader code to immediatly compile shaders or compile them later with [compile](/api/nanogl/classes/Program#item-286).",tags:[],type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},params:[{id:270,name:"gl",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[],comment:"The webgl context this Program belongs to"},{id:271,name:"vert",type:{name:"string"},tags:["optional"],comment:"The vertex shader code",optional:!0},{id:272,name:"frag",type:{name:"string"},tags:["optional"],comment:"The fragment shader code",optional:!0},{id:273,name:"defs",type:{name:"string"},tags:["optional"],comment:"A string to prepend to both fragment and vertex shader code",optional:!0}],typeParams:[]}],properties:[{id:281,name:"_cuid",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L36",comment:"Unique id for the program that updates every time it is compiled",type:{name:"number"},tags:[]},{id:280,name:"_uid",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L34",comment:"Unique id for the program",type:{name:"number"},tags:[]},{id:278,name:"dyns",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L29",comment:"The list of uniform & attribute names",type:{name:"string",isArray:!0},tags:["protected"]},{id:277,name:"fShader",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L26",comment:"The underlying webgl fragment shader",type:{name:"WebGLShader"},tags:["readonly"]},{id:274,name:"gl",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L19",comment:"The webgl context this Program belongs to",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:["readonly"]},{id:275,name:"program",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L22",comment:"The underlying webgl program",type:{name:"WebGLProgram"},tags:["readonly"]},{id:279,name:"ready",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L32",comment:"Whether the program is ready to use or not",type:{name:"boolean"},tags:[]},{id:276,name:"vShader",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L24",comment:"The underlying webgl vertex shader",type:{name:"WebGLShader"},tags:["readonly"]},{id:267,name:"debug",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L17",comment:"Can be set to true to check and log compilation and linking errors",defaultValue:"false",type:{name:"boolean"},tags:["static"]}],accessors:[],methods:[{id:293,name:"_grabParameters",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L148",comment:"List all uniforms and attributes and create a helper function for each on Program instance.",example:"For a uniform\n```glsl\nuniform vec3 uDirection;\n```\nit creates a method\n```js\nprogram.uDirection(1, 0, 0);\n```",tags:[],type:{name:"void"},typeParams:[]},{id:284,name:"bind",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L79",comment:"Alias for [use](/api/nanogl/classes/Program#item-282).",tags:[],type:{name:"void"},typeParams:[]},{id:286,name:"compile",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L90",comment:`Compile vertex and fragment shader, then link webgl program.
This method can be safely called several times.`,tags:[],type:{name:"boolean"},params:[{id:288,name:"vert",type:{name:"string"},tags:[],comment:"The vertex shader code"},{id:289,name:"frag",type:{name:"string"},tags:[],comment:"The fragment shader code"},{id:290,name:"prefix",type:{name:"string"},tags:["optional"],comment:"A string to prepend to both fragment and vertex shader code",optional:!0}],typeParams:[]},{id:291,name:"dispose",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L121",comment:"Delete all webgl objects related to this Program.",tags:[],type:{name:"void"},typeParams:[]},{id:282,name:"use",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L69",comment:"Bind the underlying webgl program.\nShortcut for `gl.useProgram()`.",tags:[],type:{name:"void"},typeParams:[]}],extends:null,implements:null},{id:298,name:"RenderBuffer",originalName:"default",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/renderbuffer.ts#L10",comment:"This class manages renderbuffers.",tags:[],constructors:[{id:299,name:"RenderBuffer",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/renderbuffer.ts#L35",tags:[],type:{name:"RenderBuffer",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/renderbuffer.ts#L10"},params:[{id:301,name:"gl",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[],comment:"The webgl context this RenderBuffer belongs to"},{id:302,name:"format",type:{name:"number"},tags:["optional"],comment:"The pixel internal format of the renderbuffer (`GL_RGB`, `GL_RGBA`, etc.), defaults to `GL_DEPTH_COMPONENT16`",optional:!0},{id:303,name:"samples",type:{name:"number"},tags:["optional"],comment:"The number of samples to be used for the renderbuffer storage (webgl2 only)",optional:!0,defaultValue:"0"}],typeParams:[]}],properties:[{id:310,name:"_uid",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/renderbuffer.ts#L26",comment:"Unique id for the RenderBuffer",type:{name:"number"},tags:["readonly"]},{id:311,name:"_valid",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/renderbuffer.ts#L28",comment:"Whether the RenderBuffer is valid or not",type:{name:"boolean"},tags:["private"]},{id:307,name:"format",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/renderbuffer.ts#L18",comment:"The pixel internal format of the renderbuffer",type:{name:"number"},tags:["readonly"]},{id:304,name:"gl",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/renderbuffer.ts#L12",comment:"The webgl context this RenderBuffer belongs to",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:["readonly"]},{id:309,name:"height",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/renderbuffer.ts#L23",comment:"The height of the renderbuffer",type:{name:"number"},tags:[]},{id:305,name:"id",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/renderbuffer.ts#L14",comment:"The underlying webgl renderbuffer",type:{name:"WebGLRenderbuffer"},tags:["readonly"]},{id:306,name:"samples",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/renderbuffer.ts#L16",comment:"The number of samples used for the renderbuffer storage (webgl2 only)",defaultValue:"0",type:{name:"number"},tags:["readonly"]},{id:308,name:"width",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/renderbuffer.ts#L21",comment:"The width of the renderbuffer",type:{name:"number"},tags:[]}],accessors:[],methods:[{id:322,name:"_storage",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/renderbuffer.ts#L98",comment:"Allocate webgl renderbuffer with current parameters.",tags:[],type:{name:"void"},typeParams:[]},{id:316,name:"allocate",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/renderbuffer.ts#L74",comment:`Check renderbuffer for validity and allocate it if invalid.
This method may leave RENDERBUFFER binding point empty.`,tags:[],type:{name:"void"},typeParams:[]},{id:318,name:"bind",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/renderbuffer.ts#L84",comment:"Bind the underlying webgl renderbuffer.",tags:[],type:{name:"void"},typeParams:[]},{id:320,name:"dispose",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/renderbuffer.ts#L91",comment:"Delete all webgl objects related to this RenderBuffer.",tags:[],type:{name:"void"},typeParams:[]},{id:312,name:"resize",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/renderbuffer.ts#L62",comment:"Resize the RenderBuffer.",tags:[],type:{name:"void"},params:[{id:314,name:"w",type:{name:"number"},tags:[],comment:"The new width"},{id:315,name:"h",type:{name:"number"},tags:[],comment:"The new height"}],typeParams:[]}],extends:null,implements:null},{id:325,name:"Sampler",originalName:"default",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/sampler.ts#L8",comment:"This class manages GLES3 Samplers.",tags:[],constructors:[{id:326,name:"Sampler",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/sampler.ts#L20",tags:[],type:{name:"Sampler",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/sampler.ts#L8"},params:[{id:328,name:"gl",type:{name:"WebGL2RenderingContext"},tags:[],comment:"The webgl2 context this Sampler belongs to"}],typeParams:[]}],properties:[{id:329,name:"_uid",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/sampler.ts#L10",comment:"Unique id for the Sampler",type:{name:"number"},tags:["readonly"]},{id:330,name:"gl",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/sampler.ts#L13",comment:"The webgl context this Sampler belongs to",type:{name:"WebGL2RenderingContext"},tags:[]},{id:331,name:"id",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/sampler.ts#L15",comment:"The underlying webgl sampler",type:{name:"WebGLSampler"},tags:[]}],accessors:[],methods:[{id:332,name:"bind",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/sampler.ts#L31",comment:"Bind the underlying webgl sampler.",tags:[],type:{name:"void"},params:[{id:334,name:"unit",type:{name:"number"},tags:["optional"],comment:"The texture unit to make active before binding",optional:!0}],typeParams:[]},{id:344,name:"clamp",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/sampler.ts#L66",comment:"Make sampler clamp :\nSet the `WRAP_S` and `WRAP_T` properties to `GL_CLAMP_TO_EDGE`.",tags:[],type:{name:"void"},typeParams:[]},{id:335,name:"dispose",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/sampler.ts#L38",comment:"Delete all webgl objects related to this Sampler.",tags:[],type:{name:"void"},typeParams:[]},{id:346,name:"mirror",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/sampler.ts#L74",comment:"Make sampler mirror :\nSet the `WRAP_S` and `WRAP_T` properties to `GL_MIRRORED_REPEAT`.",tags:[],type:{name:"void"},typeParams:[]},{id:342,name:"repeat",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/sampler.ts#L58",comment:"Make sampler repeat :\nSet the `WRAP_S` and `WRAP_T` properties to `GL_REPEAT`.",tags:[],type:{name:"void"},typeParams:[]},{id:337,name:"setFilter",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/sampler.ts#L48",comment:"Change the filtering parameters.",tags:[],type:{name:"void"},params:[{id:339,name:"smooth",type:{name:"boolean"},tags:["optional"],comment:"Use linear filtering or not",optional:!0,defaultValue:"false"},{id:340,name:"mipmap",type:{name:"boolean"},tags:["optional"],comment:"Enable mipmapping or not",optional:!0,defaultValue:"false"},{id:341,name:"miplinear",type:{name:"boolean"},tags:["optional"],comment:"Use linear mipmapping or not",optional:!0,defaultValue:"false"}],typeParams:[]},{id:348,name:"wrap",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/sampler.ts#L82",comment:"Set the `WRAP_S` and `WRAP_T` properties to the given value.",tags:[],type:{name:"void"},params:[{id:350,name:"wrap",type:{name:"number"},tags:[],comment:"The wrap value to use (`GL_REPEAT`, `GL_CLAMP_TO_EDGE`, etc.)"}],typeParams:[]}],extends:null,implements:null},{id:352,name:"Texture2D",originalName:"default",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-2d.ts#L9",comment:"This class manages TEXTURE_2D type textures.",tags:[],constructors:[{id:353,name:"Texture2D",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-2d.ts#L22",tags:[],type:{name:"Texture2D",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-2d.ts#L9"},params:[{id:355,name:"gl",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[],comment:"The webgl context this Texture belongs to"},{id:356,name:"format",type:{name:"number"},tags:["optional"],comment:"The pixel format of the texture (`GL_RGB`, `GL_RGBA`, etc.), defaults to `GL_RGB`",optional:!0},{id:357,name:"type",type:{name:"number"},tags:["optional"],comment:"The pixel data type of the texture (`GL_UNSIGNED_BYTE`, `GL_FLOAT`, etc.), defaults to `GL_UNSIGNED_BYTE`",optional:!0},{id:358,name:"internal",type:{name:"number"},tags:["optional"],comment:"The pixel internal format of the texture, defaults to the `format` parameter value",optional:!0}],typeParams:[]}],properties:[{id:360,name:"_target",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-2d.ts#L13",comment:"The binding point for this Texture",defaultValue:"GL_TEXTURE_2D",type:{name:"number"},tags:[]},{id:359,name:"textureType",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-2d.ts#L11",comment:"The type of webgl texture (`TEXTURE_2D`, `TEXTURE_CUBE`, etc)",defaultValue:"TextureType.TEXTURE_2D",type:{name:"TEXTURE_2D",lib:"nanogl",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-base.ts#L11",parent:{kind:"Enumeration",name:"TextureType"}},tags:["readonly"]}],accessors:[],methods:[{id:364,name:"fromData",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-2d.ts#L51",comment:`Set the texture data from a TypedArray.
You can also allocate an empty texture by providing only the size.`,tags:[],type:{name:"void"},params:[{id:366,name:"width",type:{name:"number"},tags:[],comment:"The width of the texture"},{id:367,name:"height",type:{name:"number"},tags:[],comment:"The height of the texture"},{id:368,name:"data",type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"ArrayBufferView"}]},tags:["optional"],comment:"The data to fill the texture with, or null to allocate an empty texture",optional:!0,defaultValue:"null"}],typeParams:[]},{id:361,name:"fromImage",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-2d.ts#L34",comment:"Set the texture data from an HTML source.",tags:[],type:{name:"void"},params:[{id:363,name:"img",type:{name:"TexImageSource"},tags:[],comment:"The HTML image, canvas or video element to use as source"}],typeParams:[]}],extends:[{name:"AbstractTexture",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-base.ts#L23"}],implements:null},{id:451,name:"TextureCube",originalName:"default",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-cube.ts#L9",comment:"This class manages TEXTURE_CUBE type textures.",tags:[],constructors:[{id:452,name:"TextureCube",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-cube.ts#L22",tags:[],type:{name:"TextureCube",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-cube.ts#L9"},params:[{id:454,name:"gl",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[],comment:"The webgl context this Texture belongs to"},{id:455,name:"format",type:{name:"number"},tags:["optional"],comment:"The pixel format of the texture (`GL_RGB`, `GL_RGBA`, etc.), defaults to `GL_RGB`",optional:!0},{id:456,name:"type",type:{name:"number"},tags:["optional"],comment:"The pixel data type of the texture (`GL_UNSIGNED_BYTE`, `GL_FLOAT`, etc.), defaults to `GL_UNSIGNED_BYTE`",optional:!0},{id:457,name:"internal",type:{name:"number"},tags:["optional"],comment:"The pixel internal format of the texture, defaults to the `format` parameter value",optional:!0}],typeParams:[]}],properties:[{id:459,name:"_target",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-cube.ts#L13",comment:"The binding point for this Texture",defaultValue:"GL_TEXTURE_CUBE",type:{name:"number"},tags:[]},{id:458,name:"textureType",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-cube.ts#L11",comment:"The type of webgl texture (`TEXTURE_2D`, `TEXTURE_CUBE`, etc)",defaultValue:"TextureType.TEXTURE_CUBE",type:{name:"TEXTURE_CUBE",lib:"nanogl",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-base.ts#L13",parent:{kind:"Enumeration",name:"TextureType"}},tags:["readonly"]}],accessors:[],methods:[{id:460,name:"fromImages",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-cube.ts#L34",comment:"Set the texture data from a list of HTML sources.",tags:[],type:{name:"void"},params:[{id:462,name:"imgs",type:{name:"TexImageSource",isArray:!0},tags:[],comment:"The list of HTML image, canvas or video elements to use as source"}],typeParams:[]}],extends:[{name:"AbstractTexture",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-base.ts#L23"}],implements:null}],functions:[{id:509,name:"getComponentSize",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/utils.ts#L34",comment:"Get the component size in bytes from a data type.",tags:[],type:{name:"ComponentSize",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/utils.ts#L28"},params:[{id:511,name:"type",type:{name:"number"},tags:[],comment:"The type of data (`GL_FLOAT`, `GL_SHORT`, etc.)"}],typeParams:[]},{id:504,name:"getTextureFiltering",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/utils.ts#L23",comment:"Compute texture filtering enum from parameters.\nWill return one of the following :\n- `NEAREST`\n- `LINEAR`\n- `NEAREST_MIPMAP_NEAREST`\n- `LINEAR_MIPMAP_NEAREST`\n- `NEAREST_MIPMAP_LINEAR`\n- `LINEAR_MIPMAP_LINEAR`",tags:[],type:{name:"GLenum"},params:[{id:506,name:"smooth",type:{name:"boolean"},tags:["optional"],comment:"Use linear filtering or not",optional:!0},{id:507,name:"mipmap",type:{name:"boolean"},tags:["optional"],comment:"Enable mipmapping or not",optional:!0},{id:508,name:"miplinear",type:{name:"boolean"},tags:["optional"],comment:"Use linear mipmapping or not",optional:!0}],typeParams:[]},{id:501,name:"isBufferSource",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/utils.ts#L6",comment:`Know whether the value is a buffer source or not.
You can use it for values that can be either a size or a buffer source.`,tags:[],type:{name:"val",data:{useAsserts:!1,targetType:{name:"BufferSource"}}},params:[{id:503,name:"val",type:{listType:"union",list:[{name:"number"},{name:"BufferSource"}]},tags:[],comment:"The value to test"}],typeParams:[]},{id:496,name:"isWebgl2",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L8",comment:"Know whether the webgl context is webgl2 or not.",tags:[],type:{name:"context",data:{useAsserts:!1,targetType:{name:"WebGL2RenderingContext"}}},params:[{id:498,name:"context",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[],comment:"The webgl context to test"}],typeParams:[]}],interfaces:[{id:2,name:"AttributeDef",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/arraybuffer.ts#L12",comment:"The definition for an attribute in a buffer.",tags:[],properties:[{id:3,name:"name",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/arraybuffer.ts#L14",comment:"The attribute name",type:{name:"string"},tags:[]},{id:7,name:"normalize",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/arraybuffer.ts#L22",comment:"Whethere the data must be normalized or not",type:{name:"boolean"},tags:[]},{id:6,name:"offset",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/arraybuffer.ts#L20",comment:"The offset in bytes of the attribute data in the buffer",type:{name:"number"},tags:[]},{id:5,name:"size",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/arraybuffer.ts#L18",comment:"The size of the attribute (`1` for a number, `2` for a vec2, etc.)",type:{name:"number"},tags:[]},{id:8,name:"stride",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/arraybuffer.ts#L27",comment:`The number of bytes for each vertex in the buffer.
If not set, the stride of the buffer is used.`,type:{name:"number"},tags:[]},{id:4,name:"type",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/arraybuffer.ts#L16",comment:"The type of data (`GL_FLOAT`, `GL_SHORT`, etc.)",type:{name:"number"},tags:[]}],accessors:[],methods:[],extends:null,implemented:null}],enumerations:[{id:402,name:"TextureType",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-base.ts#L9",tags:[],comment:"The types of webgl textures.",members:[{id:403,name:"NONE",tags:[],type:{name:"0",data:{literalType:"number"}}},{id:404,name:"TEXTURE_2D",tags:[],type:{name:"3553",data:{literalType:"number"}}},{id:405,name:"TEXTURE_2D_ARRAY",tags:[],type:{name:"35866",data:{literalType:"number"}}},{id:406,name:"TEXTURE_CUBE",tags:[],type:{name:"34067",data:{literalType:"number"}}},{id:407,name:"TEXTURE_3D",tags:[],type:{name:"32879",data:{literalType:"number"}}}]}],types:[{id:127,name:"AttachmentTarget",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L18",tags:[],type:{listType:"union",list:[{name:"Texture2D",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-2d.ts#L9"},{name:"RenderBuffer",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/renderbuffer.ts#L10"}]},comment:"A target for an Attachment.",params:[]},{id:512,name:"ComponentSize",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/utils.ts#L28",tags:[],type:{listType:"union",list:[{name:"1",data:{literalType:"number"}},{name:"2",data:{literalType:"number"}},{name:"4",data:{literalType:"number"}}]},comment:"The size in bytes if a component.",params:[]},{id:499,name:"GLContext",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2",tags:[],type:{listType:"union",list:[{name:"WebGLRenderingContext"},{name:"WebGL2RenderingContext"}]},comment:"A webgl rendering context.",params:[]},{id:408,name:"Texture",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-base.ts#L18",tags:[],type:{listType:"union",list:[{name:"TextureCube",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-cube.ts#L9"},{name:"Texture2D",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-2d.ts#L9"}]},comment:"A nanogl texture.",params:[]}]},{name:"nanogl-camera",description:"Cameras for nanogl",classes:[{id:9,name:"Camera",originalName:"default",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/index.ts#L18",comment:`This class provides functionalities for cameras.
You can choose which type of projection to use with the lens.`,tags:[],constructors:[{id:14,name:"Camera",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/index.ts#L37",tags:[],type:{name:"Camera",lib:"nanogl-camera",kind:"Class",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/index.ts#L18",data:{arguments:[{name:"TLens"}]}},params:[{id:17,name:"lens",type:{name:"TLens"},tags:[],comment:"The lens to use for this camera"}],typeParams:[{id:16,name:"TLens",type:{name:"ICameraLens",lib:"nanogl-camera",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ICameraLens.ts#L4"},tags:[],comment:"The type of lens this camera uses",default:{name:"ICameraLens",lib:"nanogl-camera",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ICameraLens.ts#L4"}}]}],properties:[{id:19,name:"_view",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/index.ts#L26",comment:"The view matrix for this camera",defaultValue:"Identity 4*4 matrix",type:{name:"mat4"},tags:["readonly"]},{id:20,name:"_viewProj",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/index.ts#L31",comment:"The view projection matrix for this camera",defaultValue:"Identity 4*4 matrix",type:{name:"mat4"},tags:["readonly"]},{id:18,name:"lens",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/index.ts#L20",comment:"The lens this camera uses",type:{name:"TLens"},tags:[]}],accessors:[],methods:[{id:40,name:"_computeWorldMatrix",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/index.ts#L115",comment:"Compute camera world matrix and update camera view matrix.",tags:[],type:{name:"void"},params:[{id:42,name:"skipParents",type:{name:"boolean"},tags:[],comment:"If true, the camera's parent's world matrix will not be computed"}],typeParams:[]},{id:29,name:"getMVP",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/index.ts#L82",comment:`Compute a model view projection matrix from a transform matrix using the camera view projection matrix, and return the result.

You can use this to convert a matrix from world space to clip space.

**Note :** This method returns a local matrix variable, so you should not store it for later use.`,tags:[],type:{name:"mat4"},params:[{id:31,name:"model",type:{name:"mat4"},tags:[],comment:"The transform matrix to use"}],typeParams:[]},{id:21,name:"modelViewMatrix",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/index.ts#L57",comment:`Compute a model view matrix from a transform matrix using the camera view matrix.

You can use this to convert a matrix from world space to camera space.`,tags:[],type:{name:"void"},params:[{id:23,name:"out",type:{name:"mat4"},tags:[],comment:"The matrix to write to"},{id:24,name:"model",type:{name:"mat4"},tags:[],comment:"The transform matrix to use"}],typeParams:[]},{id:25,name:"modelViewProjectionMatrix",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/index.ts#L69",comment:`Compute a model view projection matrix from a transform matrix using the camera view projection matrix.

You can use this to convert a matrix from world space to clip space.`,tags:[],type:{name:"void"},params:[{id:27,name:"out",type:{name:"mat4"},tags:[],comment:"The matrix to write to"},{id:28,name:"model",type:{name:"mat4"},tags:[],comment:"The transform matrix to use"}],typeParams:[]},{id:32,name:"unproject",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/index.ts#L95",comment:`Reverse project a point using the camera view projection matrix.

You can use this to transform a point from screen space to world space.`,tags:[],type:{name:"void"},params:[{id:34,name:"out",type:{name:"vec3"},tags:[],comment:"The matrix to write to"},{id:35,name:"v",type:{name:"vec3"},tags:[],comment:"The point's coordinates"}],typeParams:[]},{id:36,name:"updateViewProjectionMatrix",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/index.ts#L106",comment:"Update camera view projection matrix.",tags:[],type:{name:"void"},params:[{id:38,name:"w",type:{name:"number"},tags:[],comment:"The width of the canvas"},{id:39,name:"h",type:{name:"number"},tags:[],comment:"The height of the canvas"}],typeParams:[]},{id:12,name:"makeOrthoCamera",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/index.ts#L130",comment:"Create a camera with an orthographic lens.",tags:["static"],type:{name:"Camera",lib:"nanogl-camera",kind:"Class",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/index.ts#L18",data:{arguments:[{name:"OrthographicLens",lib:"nanogl-camera",kind:"Class",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ortho-lens.ts#L7"}]}},typeParams:[]},{id:10,name:"makePerspectiveCamera",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/index.ts#L123",comment:"Create a camera with a perspective lens.",tags:["static"],type:{name:"Camera",lib:"nanogl-camera",kind:"Class",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/index.ts#L18",data:{arguments:[{name:"PerspectiveLens",lib:"nanogl-camera",kind:"Class",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/perspective-lens.ts#L15"}]}},typeParams:[]}],extends:[{name:"Node",lib:"nanogl-node",kind:"Class",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L18"}],implements:null},{id:99,name:"OrthographicLens",originalName:"default",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ortho-lens.ts#L7",comment:"This class provides functionalities for orthographic projection.",tags:[],constructors:[{id:100,name:"OrthographicLens",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ortho-lens.ts#L59",tags:[],type:{name:"OrthographicLens",lib:"nanogl-camera",kind:"Class",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ortho-lens.ts#L7"},typeParams:[]}],properties:[{id:108,name:"_aspect",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ortho-lens.ts#L43",comment:"The aspect ratio",defaultValue:"1",type:{name:"number"},tags:[]},{id:103,name:"_far",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ortho-lens.ts#L18",comment:"The far plane distance",defaultValue:"10",type:{name:"number"},tags:[]},{id:102,name:"_near",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ortho-lens.ts#L13",comment:"The near plane distance",defaultValue:"0.01",type:{name:"number"},tags:[]},{id:109,name:"_proj",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ortho-lens.ts#L49",comment:"The projection matrix for this lens",defaultValue:"Identity 4*4 matrix",type:{name:"mat4"},tags:[]},{id:110,name:"_valid",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ortho-lens.ts#L55",comment:"Whether the projection matrix is valid or not",defaultValue:"false",type:{name:"boolean"},tags:[]},{id:105,name:"_xMax",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ortho-lens.ts#L28",comment:"The right bound",defaultValue:"1",type:{name:"number"},tags:[]},{id:104,name:"_xMin",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ortho-lens.ts#L23",comment:"The left bound",defaultValue:"-1",type:{name:"number"},tags:[]},{id:107,name:"_yMax",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ortho-lens.ts#L38",comment:"The top bound",defaultValue:"1",type:{name:"number"},tags:[]},{id:106,name:"_yMin",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ortho-lens.ts#L33",comment:"The bottom bound",defaultValue:"-1",type:{name:"number"},tags:[]}],accessors:[{id:127,name:"aspect",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ortho-lens.ts#L140",setter:{name:"set aspect",comment:"Set the aspect ratio of this lens.",tags:[],type:{name:"void"},params:[{id:130,name:"v",type:{name:"number"},tags:[],comment:"The value to set"}],typeParams:[]},getter:{name:"get aspect",comment:"Get the aspect ratio of this lens.",tags:[],type:{name:"number"},typeParams:[]}},{id:123,name:"far",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ortho-lens.ts#L124",setter:{name:"set far",comment:"Set the far plane distance of this lens.",tags:[],type:{name:"void"},params:[{id:126,name:"v",type:{name:"number"},tags:[],comment:"The value to set"}],typeParams:[]},getter:{name:"get far",comment:"Get the far plane distance of this lens.",tags:[],type:{name:"number"},typeParams:[]}},{id:119,name:"near",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ortho-lens.ts#L108",setter:{name:"set near",comment:"Set the near plane distance of this lens.",tags:[],type:{name:"void"},params:[{id:122,name:"v",type:{name:"number"},tags:[],comment:"The value to set"}],typeParams:[]},getter:{name:"get near",comment:"Get the near plane distance of this lens.",tags:[],type:{name:"number"},typeParams:[]}}],methods:[{id:133,name:"_invalidate",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ortho-lens.ts#L174",comment:"Invalidate lens projection matrix.",tags:[],type:{name:"void"},typeParams:[]},{id:131,name:"_updateProjection",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ortho-lens.ts#L156",comment:"Update lens projection matrix.",tags:[],type:{name:"void"},typeParams:[]},{id:111,name:"getProjection",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ortho-lens.ts#L82",comment:`Get the projection matrix for this lens.
The projection matrix is updated before (if it was declared invalid).`,tags:[],type:{name:"mat4"},typeParams:[]},{id:113,name:"setBound",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ortho-lens.ts#L96",comment:"Set the bounds of this lens.",tags:[],type:{name:"void"},params:[{id:115,name:"xMin",type:{name:"number"},tags:[],comment:"The left bound"},{id:116,name:"xMax",type:{name:"number"},tags:[],comment:"The right bound"},{id:117,name:"yMin",type:{name:"number"},tags:[],comment:"The bottom bound"},{id:118,name:"yMax",type:{name:"number"},tags:[],comment:"The top bound"}],typeParams:[]}],extends:null,implements:{name:"ICameraLens",lib:"nanogl-camera",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ICameraLens.ts#L4"}},{id:136,name:"PerspectiveLens",originalName:"default",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/perspective-lens.ts#L15",comment:"This class provides functionalities for perspective projection.",tags:[],constructors:[{id:137,name:"PerspectiveLens",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/perspective-lens.ts#L65",tags:[],type:{name:"PerspectiveLens",lib:"nanogl-camera",kind:"Class",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/perspective-lens.ts#L15"},typeParams:[]}],properties:[{id:144,name:"_aspect",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/perspective-lens.ts#L46",comment:"The aspect ratio",defaultValue:"1",type:{name:"number"},tags:[]},{id:140,name:"_far",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/perspective-lens.ts#L26",comment:"The far plane distance",defaultValue:"10",type:{name:"number"},tags:[]},{id:141,name:"_fov",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/perspective-lens.ts#L31",comment:"The field of view",defaultValue:"Math.PI/3",type:{name:"number"},tags:[]},{id:145,name:"_fovMode",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/perspective-lens.ts#L51",comment:"The mode of field of view (vertical, horizontal or auto)",defaultValue:"0",type:{name:"number"},tags:[]},{id:143,name:"_hfov",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/perspective-lens.ts#L41",comment:"The horizontal field of view",defaultValue:"0",type:{name:"number"},tags:[]},{id:139,name:"_near",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/perspective-lens.ts#L21",comment:"The near plane distance",defaultValue:"0.01",type:{name:"number"},tags:[]},{id:146,name:"_proj",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/perspective-lens.ts#L57",comment:"The projection matrix for this lens",defaultValue:"Identity 4*4 matrix",type:{name:"mat4"},tags:[]},{id:147,name:"_valid",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/perspective-lens.ts#L63",comment:"Whether the projection matrix is valid or not",defaultValue:"false",type:{name:"boolean"},tags:[]},{id:142,name:"_vfov",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/perspective-lens.ts#L36",comment:"The vertical field of view",defaultValue:"0",type:{name:"number"},tags:[]}],accessors:[{id:162,name:"aspect",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/perspective-lens.ts#L144",setter:{name:"set aspect",comment:"Set the aspect ratio of this lens.",tags:[],type:{name:"void"},params:[{id:165,name:"v",type:{name:"number"},tags:[],comment:"The value to set"}],typeParams:[]},getter:{name:"get aspect",comment:"Get the aspect ratio of this lens.",tags:[],type:{name:"number"},typeParams:[]}},{id:158,name:"far",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/perspective-lens.ts#L128",setter:{name:"set far",comment:"Set the far plane distance of this lens.",tags:[],type:{name:"void"},params:[{id:161,name:"v",type:{name:"number"},tags:[],comment:"The value to set"}],typeParams:[]},getter:{name:"get far",comment:"Get the far plane distance of this lens.",tags:[],type:{name:"number"},typeParams:[]}},{id:150,name:"fov",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/perspective-lens.ts#L98",setter:{name:"set fov",comment:"Shortcut to [setVerticalFov](/api/nanogl-camera/classes/PerspectiveLens#item-169).",tags:[],type:{name:"void"},params:[{id:153,name:"f",type:{name:"number"},tags:[],comment:"The value to set"}],typeParams:[]},getter:{name:"get fov",comment:`Get the field of view set for this lens.
It can be the vertical or horizontal fov depending on the fov mode.`,tags:[],type:{name:"number"},typeParams:[]}},{id:154,name:"near",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/perspective-lens.ts#L112",setter:{name:"set near",comment:"Set the near plane distance of this lens.",tags:[],type:{name:"void"},params:[{id:157,name:"v",type:{name:"number"},tags:[],comment:"The value to set"}],typeParams:[]},getter:{name:"get near",comment:"Get the near plane distance of this lens.",tags:[],type:{name:"number"},typeParams:[]}}],methods:[{id:181,name:"_invalidate",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/perspective-lens.ts#L238",comment:"Invalidate lens projection matrix.",tags:[],type:{name:"void"},typeParams:[]},{id:179,name:"_updateProjection",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/perspective-lens.ts#L210",comment:"Update lens projection matrix.",tags:[],type:{name:"void"},typeParams:[]},{id:172,name:"getHorizontalFov",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/perspective-lens.ts#L182",comment:"Get the computed horizontal field of view of this lens.",tags:[],type:{name:"number"},typeParams:[]},{id:148,name:"getProjection",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/perspective-lens.ts#L87",comment:`Get the projection matrix for this lens.
The projection matrix is updated before (if it was declared invalid).`,tags:[],type:{name:"mat4"},typeParams:[]},{id:174,name:"getVerticalFov",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/perspective-lens.ts#L190",comment:"Get the computed vertical field of view of this lens.",tags:[],type:{name:"number"},typeParams:[]},{id:176,name:"setAutoFov",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/perspective-lens.ts#L201",comment:`Set the field of view of this lens.
The value will be used for either the vertical or horizontal fov depending on the aspect ratio.
The fov mode will be changed to auto.`,tags:[],type:{name:"void"},params:[{id:178,name:"fov",type:{name:"number"},tags:[],comment:"The value to set"}],typeParams:[]},{id:166,name:"setHorizontalFov",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/perspective-lens.ts#L162",comment:`Set the horizontal field of view of this lens.
The fov mode will be changed to horizontal.`,tags:[],type:{name:"void"},params:[{id:168,name:"fov",type:{name:"number"},tags:[],comment:"The value to set"}],typeParams:[]},{id:169,name:"setVerticalFov",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/perspective-lens.ts#L173",comment:`Set the vertical field of view of this lens.
The fov mode will be changed to vertical.`,tags:[],type:{name:"void"},params:[{id:171,name:"fov",type:{name:"number"},tags:[],comment:"The value to set"}],typeParams:[]}],extends:null,implements:{name:"ICameraLens",lib:"nanogl-camera",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ICameraLens.ts#L4"}}],functions:[],interfaces:[{id:2,name:"ICameraLens",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ICameraLens.ts#L4",comment:"A lens for a camera, which handles the projection.",tags:[],properties:[{id:7,name:"aspect",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ICameraLens.ts#L14",comment:"The aspect ratio",type:{name:"number"},tags:[]},{id:6,name:"far",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ICameraLens.ts#L12",comment:"The far plane distance",type:{name:"number"},tags:[]},{id:5,name:"near",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ICameraLens.ts#L10",comment:"The near plane distance",type:{name:"number"},tags:[]}],accessors:[],methods:[{id:3,name:"getProjection",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ICameraLens.ts#L8",comment:"Get the projection matrix for this lens.",tags:[],type:{name:"mat4"},typeParams:[]}],extends:null,implemented:[{name:"OrthographicLens",lib:"nanogl-camera",kind:"Class",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ortho-lens.ts#L7"},{name:"PerspectiveLens",lib:"nanogl-camera",kind:"Class",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/perspective-lens.ts#L15"}]}],enumerations:[],types:[]},{name:"nanogl-gltf",description:"Handle .gltf files",classes:[{id:213,name:"Accessor",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L375",comment:"The Accessor element refers to a BufferView and describe the layout of data in it (type, length, max, min, ...).",tags:[],constructors:[],properties:[{id:218,name:"extras",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L379",comment:"Extras of this element (custom additional data that can be added to every gltf property)",type:{name:"any"},tags:[]},{id:216,name:"gltftype",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L377",comment:"Type of this element",defaultValue:"GltfTypes.ACCESSOR",type:{name:"ACCESSOR",lib:"nanogl-gltf",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/GltfTypes.ts#L7",parent:{kind:"Enumeration",name:"GltfTypes"}},tags:["readonly"]},{id:217,name:"name",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L378",comment:"Name of this element",type:{name:"string"},tags:[]}],accessors:[],methods:[{id:219,name:"parse",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L389",comment:`Parse the Accessor data, load the BufferView element and store only the part that is needed in _array attribute.
If the Accessor contains sparse data, load the Sparse element and store it in sparse attribute.

Is async as it needs to wait for the BufferView to be created, if needed.`,tags:[],type:{name:"Promise",data:{arguments:[{name:"any"}]}},params:[{id:221,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[],comment:"GLTFLoader to use"},{id:222,name:"data",type:{name:"IAccessor",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L41",parent:{kind:"Namespace",name:"Gltf2"}},tags:[],comment:"Data to parse"}],typeParams:[]}],extends:[{name:"BaseAccessor",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L114"}],implements:{name:"IElement",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L34"}},{id:283,name:"AccessorSparse",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparse.ts#L16",comment:`The AccessorSparse element contains the indices and new values of the vertices that are sparse.
A sparse vertex is a vertex that differs from the default value of the Accessor.`,tags:[],constructors:[{id:284,name:"AccessorSparse",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparse.ts#L16",tags:[],type:{name:"AccessorSparse",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparse.ts#L16"},typeParams:[]}],properties:[{id:289,name:"accessor",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparse.ts#L26",comment:"Accessor element, parent of this AccessorSparse",type:{name:"Accessor",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L375"},tags:[]},{id:288,name:"extras",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparse.ts#L20",comment:"Extras of this element (custom additional data that can be added to every gltf property)",type:{name:"any"},tags:[]},{id:286,name:"gltftype",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparse.ts#L18",comment:"Type of this element",defaultValue:"GltfTypes.ACCESSOR_SPARSE",type:{name:"ACCESSOR_SPARSE",lib:"nanogl-gltf",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/GltfTypes.ts#L8",parent:{kind:"Enumeration",name:"GltfTypes"}},tags:["readonly"]},{id:290,name:"indices",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparse.ts#L31",comment:"AccessorSparseIndices element, containing indices of the vertices that are sparse",type:{name:"AccessorSparseIndices",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparseIndices.ts#L12"},tags:[]},{id:293,name:"indicesMap",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparse.ts#L47",comment:"Map of indices of the vertices that are sparse, to the index of the vertex in the sparse data",type:{name:"Map",data:{arguments:[{name:"number"},{name:"number"}]}},tags:[]},{id:292,name:"indicesSet",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparse.ts#L42",comment:"Set of indices of the vertices that are sparse",type:{name:"Set",data:{arguments:[{name:"number"}]}},tags:[]},{id:287,name:"name",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparse.ts#L19",comment:"Name of this element",type:{name:"string"},tags:[]},{id:291,name:"values",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparse.ts#L36",comment:"AccessorSparseValues element, containing new values of the vertices that are sparse",type:{name:"AccessorSparseValues",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparseValues.ts#L12"},tags:[]}],accessors:[],methods:[{id:303,name:"getRawScalar",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparse.ts#L141",comment:"Get the raw scalar at the given index",tags:[],type:{name:"number"},params:[{id:305,name:"index",type:{name:"number"},tags:[],comment:"Index of the vertex to get"}],typeParams:[]},{id:299,name:"getRawValue",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparse.ts#L113",comment:"Get the element value at the given index and store it in the given TypedArray",tags:[],type:{name:"void"},params:[{id:301,name:"out",type:{name:"TypedArray",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/TypedArray.ts#L5"},tags:[],comment:"TypedArray to store the value in"},{id:302,name:"index",type:{name:"number"},tags:[],comment:"Index of the vertex to get"}],typeParams:[]},{id:294,name:"parse",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparse.ts#L59",comment:`Parse the AccessorSparse data, load the corresponding Accessor, AccessorSparseIndices and AccessorSparseValues elements.
Initialize the indicesSet and indicesMap.

Is async as it needs to wait for the Accessor, AccessorSparseIndices and AccessorSparseValues to be created.`,tags:[],type:{name:"Promise",data:{arguments:[{name:"any"}]}},params:[{id:296,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[],comment:"GLTFLoader to use"},{id:297,name:"data",type:{name:"IAccessorSparse",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L42",parent:{kind:"Namespace",name:"Gltf2"}},tags:[],comment:"Data to parse"},{id:298,name:"args",type:{name:"any"},tags:[],comment:"Additional arguments, unused here"}],typeParams:[]}],extends:null,implements:{name:"IElement",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L34"}},{id:307,name:"AccessorSparseIndices",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparseIndices.ts#L12",comment:"The AccessorSparseIndices element is an Accessor that contains the indices of the vertices that are sparse.",tags:[],constructors:[],properties:[{id:312,name:"extras",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparseIndices.ts#L16",comment:"Extras of this element (custom additional data that can be added to every gltf property)",type:{name:"any"},tags:[]},{id:310,name:"gltftype",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparseIndices.ts#L14",comment:"Type of this element",defaultValue:"GltfTypes.ACCESSOR_SPARSE_INDICES",type:{name:"ACCESSOR_SPARSE_INDICES",lib:"nanogl-gltf",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/GltfTypes.ts#L9",parent:{kind:"Enumeration",name:"GltfTypes"}},tags:["readonly"]},{id:311,name:"name",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparseIndices.ts#L15",comment:"Name of this element",type:{name:"string"},tags:[]}],accessors:[],methods:[{id:313,name:"parse",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparseIndices.ts#L25",comment:`Parse the AccessorSparseIndices data, load the BufferView element and store only the part that is needed in _array attribute.

Is async as it needs to wait for the BufferView to be created.`,tags:[],type:{name:"Promise",data:{arguments:[{name:"any"}]}},params:[{id:315,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[],comment:"GLTFLoader to use"},{id:316,name:"data",type:{name:"IAccessorSparseIndices",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L43",parent:{kind:"Namespace",name:"Gltf2"}},tags:[],comment:"Data to parse"}],typeParams:[]}],extends:[{name:"BaseAccessor",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L114"}],implements:{name:"IElement",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L34"}},{id:377,name:"AccessorSparseValues",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparseValues.ts#L12",comment:"The AccessorSparseValues element is an Accessor that contains the new values of the vertices that are sparse.",tags:[],constructors:[],properties:[{id:382,name:"extras",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparseValues.ts#L16",comment:"Extras of this element (custom additional data that can be added to every gltf property)",type:{name:"any"},tags:[]},{id:380,name:"gltftype",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparseValues.ts#L14",comment:"Type of this element",defaultValue:"GltfTypes.ACCESSOR_SPARSE_VALUES",type:{name:"ACCESSOR_SPARSE_VALUES",lib:"nanogl-gltf",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/GltfTypes.ts#L10",parent:{kind:"Enumeration",name:"GltfTypes"}},tags:["readonly"]},{id:381,name:"name",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparseValues.ts#L15",comment:"Name of this element",type:{name:"string"},tags:[]}],accessors:[],methods:[{id:383,name:"parse",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparseValues.ts#L26",comment:`Parse the AccessorSparseValues data, load the BufferView element and store only the part that is needed in _array attribute.

Is async as it needs to wait for the BufferView to be created.`,tags:[],type:{name:"Promise",data:{arguments:[{name:"any"}]}},params:[{id:385,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[],comment:"GLTFLoader to use"},{id:386,name:"data",type:{name:"IAccessorSparseValues",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L44",parent:{kind:"Namespace",name:"Gltf2"}},tags:[],comment:"Data to parse"}],typeParams:[]}],extends:[{name:"BaseAccessor",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L114"}],implements:{name:"IElement",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L34"}},{id:447,name:"Animation",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Animation.ts#L16",comment:"The Animation element contains the data to animate a node, linking with samplers and channels.",tags:[],constructors:[{id:448,name:"Animation",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Animation.ts#L16",tags:[],type:{name:"Animation",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Animation.ts#L16"},typeParams:[]}],properties:[{id:454,name:"channels",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Animation.ts#L30",comment:"Array of channels used to animate the nodes",type:{name:"AnimationChannel",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationChannel.ts#L58",isArray:!0},tags:[]},{id:455,name:"duration",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Animation.ts#L35",comment:"Duration of the animation",defaultValue:"0",type:{name:"number"},tags:[]},{id:452,name:"extras",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Animation.ts#L20",comment:"Extras of this element (custom additional data that can be added to every gltf property)",type:{name:"any"},tags:[]},{id:450,name:"gltftype",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Animation.ts#L18",comment:"Type of this element",defaultValue:"GltfTypes.ANIMATION",type:{name:"ANIMATION",lib:"nanogl-gltf",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/GltfTypes.ts#L11",parent:{kind:"Enumeration",name:"GltfTypes"}},tags:["readonly"]},{id:451,name:"name",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Animation.ts#L19",comment:"Name of this element",type:{name:"string"},tags:[]},{id:453,name:"samplers",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Animation.ts#L25",comment:"Array of samplers used to sample the animation values and keyframes",type:{name:"AnimationSampler",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationSampler.ts#L367",isArray:!0},tags:[]}],accessors:[],methods:[{id:460,name:"evaluate",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Animation.ts#L64",comment:`Evaluate the animation at a given time, updating the nodes properties.
It evaluates each channel, which in turn evaluates the sampler and apply the value to the node.`,tags:[],type:{name:"void"},params:[{id:462,name:"t",type:{name:"number"},tags:[],comment:"Time to evaluate the animation at"}],typeParams:[]},{id:463,name:"getChannel",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Animation.ts#L70",tags:[],type:{name:"AnimationChannel",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationChannel.ts#L58"},params:[{id:465,name:"i",type:{name:"number"},tags:[]}],typeParams:[]},{id:466,name:"getSampler",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Animation.ts#L74",tags:[],type:{name:"AnimationSampler",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationSampler.ts#L367"},params:[{id:468,name:"i",type:{name:"number"},tags:[]}],typeParams:[]},{id:456,name:"parse",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Animation.ts#L45",comment:`Parse the Animation data, creates the samplers and channels.

Is async as it needs to wait for all the samplers and channels to be created.`,tags:[],type:{name:"Promise",data:{arguments:[{name:"any"}]}},params:[{id:458,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[],comment:"GLTFLoader to use"},{id:459,name:"data",type:{name:"IAnimation",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L45",parent:{kind:"Namespace",name:"Gltf2"}},tags:[],comment:"Data to parse"}],typeParams:[]}],extends:null,implements:{name:"IElement",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L34"}},{id:470,name:"AnimationChannel",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationChannel.ts#L58",comment:"The AnimationChannel element contains the data to animate a node property.",tags:[],constructors:[{id:471,name:"AnimationChannel",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationChannel.ts#L58",tags:[],type:{name:"AnimationChannel",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationChannel.ts#L58"},typeParams:[]}],properties:[{id:476,name:"_active",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationChannel.ts#L67",comment:"Whether the channel is active or not",type:{name:"boolean"},tags:[]},{id:479,name:"applyFunction",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationChannel.ts#L83",comment:`Function to apply the animation value to the corresponding node property
(and manage node invalidation for translation, rotation and scale animation)`,type:{name:"applyFunc"},tags:[]},{id:482,name:"evaluator",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationChannel.ts#L98",comment:"SamplerEvaluator to use to evaluate the animation value at a given time",type:{name:"SamplerEvaluator",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationSampler.ts#L317"},tags:[]},{id:475,name:"extras",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationChannel.ts#L62",comment:"Extras of this element (custom additional data that can be added to every gltf property)",type:{name:"any"},tags:[]},{id:473,name:"gltftype",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationChannel.ts#L60",comment:"Type of this element",defaultValue:"GltfTypes.ANIMATION_CHANNEL",type:{name:"ANIMATION_CHANNEL",lib:"nanogl-gltf",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/GltfTypes.ts#L13",parent:{kind:"Enumeration",name:"GltfTypes"}},tags:["readonly"]},{id:474,name:"name",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationChannel.ts#L61",comment:"Name of this element",type:{name:"string"},tags:[]},{id:480,name:"node",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationChannel.ts#L88",comment:"Node to animate",type:{name:"Node",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Node.ts#L18"},tags:[]},{id:478,name:"path",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationChannel.ts#L77",comment:"Node's property to animate (TRASLATION, ROTATION, SCALE or WEIGHTS)",type:{name:"AnimationChannelTargetPath",lib:"nanogl-gltf",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L156",parent:{kind:"Namespace",name:"Gltf2"}},tags:[]},{id:477,name:"sampler",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationChannel.ts#L72",comment:"Linked AnimationSampler",type:{name:"AnimationSampler",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationSampler.ts#L367"},tags:[]},{id:481,name:"valueHolder",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationChannel.ts#L93",comment:"TypedArray to store the animation value at each re-evaluate",type:{name:"TypedArray",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/TypedArray.ts#L5"},tags:[]}],accessors:[],methods:[{id:487,name:"evaluate",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationChannel.ts#L140",comment:`Evaluate the animation at a given time, and apply the animation value to the corresponding node property,
with the corresponding interpolation function.`,tags:[],type:{name:"void"},params:[{id:489,name:"t",type:{name:"number"},tags:[],comment:"Time to evaluate the animation at"}],typeParams:[]},{id:483,name:"parse",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationChannel.ts#L108",comment:`Parse the AnimationChannel data, create the SamplerEvaluator and the valueHolder.

Is async as it needs to wait for the target Node to be created.`,tags:[],type:{name:"Promise",data:{arguments:[{name:"any"}]}},params:[{id:485,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[],comment:"GLTFLoader to use"},{id:486,name:"data",type:{name:"IAnimationChannel",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L47",parent:{kind:"Namespace",name:"Gltf2"}},tags:[],comment:"Data to parse"}],typeParams:[]}],extends:null,implements:{name:"IElement",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L34"}},{id:506,name:"AnimationSampler",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationSampler.ts#L367",comment:"The AnimationSampler element is used to define the interpolation between keyframes of an AnimationChannel.",tags:[],constructors:[{id:507,name:"AnimationSampler",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationSampler.ts#L367",tags:[],type:{name:"AnimationSampler",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationSampler.ts#L367"},typeParams:[]}],properties:[{id:511,name:"extras",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationSampler.ts#L371",comment:"Extras of this element (custom additional data that can be added to every gltf property)",type:{name:"any"},tags:[]},{id:509,name:"gltftype",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationSampler.ts#L369",comment:"Type of this element",defaultValue:"GltfTypes.ANIMATION_SAMPLER",type:{name:"ANIMATION_SAMPLER",lib:"nanogl-gltf",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/GltfTypes.ts#L12",parent:{kind:"Enumeration",name:"GltfTypes"}},tags:["readonly"]},{id:513,name:"input",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationSampler.ts#L382",comment:"Input Accessor, containing the time values of the keyframes",type:{name:"Accessor",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L375"},tags:[]},{id:512,name:"interpolation",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationSampler.ts#L377",comment:"Interpolation type to use between keyframes. Default to LINEAR",type:{name:"AnimationSamplerInterpolation",lib:"nanogl-gltf",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L177",parent:{kind:"Namespace",name:"Gltf2"}},tags:[]},{id:516,name:"maxTime",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationSampler.ts#L397",comment:"End time of the Animation",defaultValue:"0",type:{name:"number"},tags:[]},{id:515,name:"minTime",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationSampler.ts#L392",comment:"Start time of the Animation",defaultValue:"0",type:{name:"number"},tags:[]},{id:510,name:"name",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationSampler.ts#L370",comment:"Name of this element",type:{name:"string"},tags:[]},{id:514,name:"output",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationSampler.ts#L387",comment:"Output Accessor, containing the values of the keyframes",type:{name:"Accessor",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L375"},tags:[]}],accessors:[],methods:[{id:521,name:"createEvaluator",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationSampler.ts#L423",comment:"Create a SamplerEvaluator for this AnimationSampler, with the given path and number of elements.",tags:[],type:{name:"SamplerEvaluator",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationSampler.ts#L317"},params:[{id:523,name:"path",type:{name:"AnimationChannelTargetPath",lib:"nanogl-gltf",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L156",parent:{kind:"Namespace",name:"Gltf2"}},tags:[],comment:"Node's property to animate"},{id:524,name:"numElements",type:{name:"number"},tags:[],comment:"Number of element to animate (1 for translation, rotation and scale ; number of morph targets for weights)"}],typeParams:[]},{id:517,name:"parse",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationSampler.ts#L407",comment:`Parse the AnimationSampler data, load the input and output Accessors, and set the minTime and maxTime with the length of input Accessor.

Is async as it needs to wait for the input and output Accessors to be created.`,tags:[],type:{name:"Promise",data:{arguments:[{name:"any"}]}},params:[{id:519,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[],comment:"GLTFLoader to use"},{id:520,name:"data",type:{name:"IAnimationSampler",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L46",parent:{kind:"Namespace",name:"Gltf2"}},tags:[],comment:"Data to parse"}],typeParams:[]}],extends:null,implements:{name:"IElement",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L34"}},{id:526,name:"Asset",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Asset.ts#L11",comment:"The Asset element is the simpler, it only contains metadata about the glTF asset.",tags:[],constructors:[{id:527,name:"Asset",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Asset.ts#L11",tags:[],type:{name:"Asset",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Asset.ts#L11"},typeParams:[]}],properties:[{id:533,name:"copyright",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Asset.ts#L27",comment:"A copyright message suitable for display to credit the content creator",type:{name:"string"},tags:["optional"]},{id:531,name:"extras",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Asset.ts#L15",comment:"Extras of this element (custom additional data that can be added to every gltf property)",type:{name:"any"},tags:[]},{id:534,name:"generator",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Asset.ts#L32",comment:"Tool that generated this glTF model. Useful for debugging",type:{name:"string"},tags:["optional"]},{id:529,name:"gltftype",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Asset.ts#L13",comment:"Type of this element",defaultValue:"GltfTypes.ASSET",type:{name:"ASSET",lib:"nanogl-gltf",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/GltfTypes.ts#L14",parent:{kind:"Enumeration",name:"GltfTypes"}},tags:["readonly"]},{id:535,name:"minVersion",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Asset.ts#L37",comment:"Minimum glTF version support needed to load this asset",type:{name:"string"},tags:["optional"]},{id:530,name:"name",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Asset.ts#L14",comment:"Name of this element",type:{name:"string"},tags:[]},{id:532,name:"version",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Asset.ts#L22",comment:`glTF version targeted by this asset

Most of the time 1.0 or 2.0. Knowing that 1.0 could be problematic as it don't support PBR (Physically-Based Rendering), it is recommended to use 2.0.`,type:{name:"string"},tags:[]}],accessors:[],methods:[{id:536,name:"parse",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Asset.ts#L45",comment:"Parse the Asset data, only getting metadata from the glTF data and storing it in this object.",tags:[],type:{name:"Promise",data:{arguments:[{name:"any"}]}},params:[{id:538,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[],comment:"GLTFLoader to use, unused here"},{id:539,name:"data",type:{name:"IAsset",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L48",parent:{kind:"Namespace",name:"Gltf2"}},tags:[],comment:"Data to parse"}],typeParams:[]}],extends:null,implements:{name:"IElement",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L34"}},{id:896,name:"Attribute",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L20",comment:"A helper class to manage a Primitive's attribute (linking an attribute name to its Accessor)",tags:[],constructors:[{id:897,name:"Attribute",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L41",tags:[],type:{name:"Attribute",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L20"},params:[{id:899,name:"semantic",type:{name:"string"},tags:[],comment:"Attribute's semantic"},{id:900,name:"accessor",type:{name:"Accessor",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L375"},tags:[],comment:"Attribute's Accessor"}],typeParams:[]}],properties:[{id:902,name:"accessor",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L30",comment:"The accessor providing data for this attribute",type:{name:"Accessor",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L375"},tags:[]},{id:903,name:"glslname",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L35",comment:"The glsl attribute name",type:{name:"string"},tags:[]},{id:901,name:"semantic",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L25",comment:"The standard Semantic for this attribute (POSITION, NORMAL, TEXCOORDS_0, ...)",type:{name:"string"},tags:[]}],accessors:[],methods:[],extends:null,implements:null},{id:913,name:"AttributesSet",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L80",comment:"A helper class to manage an array of Attributes",tags:[],constructors:[{id:914,name:"AttributesSet",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L87",tags:[],type:{name:"AttributesSet",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L80"},typeParams:[]}],properties:[{id:916,name:"_attributes",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L85",comment:"The list of attributes",type:{name:"Attribute",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L20",isArray:!0},tags:[]}],accessors:[{id:919,name:"attributes",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L95",getter:{name:"get attributes",tags:[],type:{name:"Attribute",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L20",isArray:!0},typeParams:[]}},{id:917,name:"length",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L91",getter:{name:"get length",tags:[],type:{name:"number"},typeParams:[]}}],methods:[{id:921,name:"add",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L103",comment:"Add an attribute to the set",tags:[],type:{name:"void"},params:[{id:923,name:"attribute",type:{name:"Attribute",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L20"},tags:[],comment:"Attribute to add"}],typeParams:[]},{id:927,name:"getBuffersViewSets",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L121",tags:[],type:{name:"BufferInfos",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L53",isArray:!0},typeParams:[]},{id:924,name:"getSemantic",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L111",comment:"Get an Attribute by its semantic (POSITION, NORMAL, TEXCOORD_0, ...)",tags:[],type:{name:"Attribute",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L20"},params:[{id:926,name:"semantic",type:{name:"string"},tags:[],comment:"Semantic of the attribute to get"}],typeParams:[]}],extends:null,implements:null},{id:151,name:"BaseAccessor",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L114",comment:"Base class for Accessor, AccessorSparseIndices and AccessorSparseValues, as they share a lot of attributes and methods and only differ in the way they are parsed.",tags:[],constructors:[{id:152,name:"BaseAccessor",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L114",tags:[],type:{name:"BaseAccessor",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L114"},typeParams:[]}],properties:[{id:165,name:"_array",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L175",comment:"TypedArray containing the data, the slice of BufferView that is needed",type:{name:"TypedArray",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/TypedArray.ts#L5"},tags:[]},{id:166,name:"_normalizeFunc",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L180",comment:"Function to normalize the data, based on the componentType",type:{name:"normalizeFunc"},tags:[]},{id:157,name:"_stride",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L134",comment:"Stride in bytes between values, if different values are interleaved in the BufferView",defaultValue:"0",type:{name:"number"},tags:[]},{id:158,name:"_strideElem",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L139",comment:"Stride in elements count between values, if different values are interleaved in the BufferView",defaultValue:"0",type:{name:"number"},tags:[]},{id:164,name:"_valueHolder",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L170",comment:"Empty TypedArray used to store the value of a normalized element when calling getValue()",type:{name:"TypedArray",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/TypedArray.ts#L5"},tags:[]},{id:163,name:"bufferView",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L165",comment:"BufferView element containing the data",type:{name:"BufferView",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/BufferView.ts#L25"},tags:[]},{id:155,name:"byteOffset",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L124",comment:"Bytes offset in the BufferView",defaultValue:"0",type:{name:"number"},tags:[]},{id:159,name:"componentType",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L145",comment:"Type of each value in this Accessor's BufferView (UNSIGNED_BYTE, FLOAT, ...)",type:{name:"AccessorComponentType",lib:"nanogl-gltf",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L94",parent:{kind:"Namespace",name:"Gltf2"}},tags:[]},{id:156,name:"count",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L129",comment:"Number of elements in the BufferView",defaultValue:"0",type:{name:"number"},tags:[]},{id:161,name:"max",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L155",comment:"Maximum value of each element in this Accessor",type:{name:"number",isArray:!0},tags:["optional"]},{id:162,name:"min",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L160",comment:"Minimum value of each element in this Accessor",type:{name:"number",isArray:!0},tags:["optional"]},{id:154,name:"normalized",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L119",comment:"Whether the Element to hold is normalized or not",defaultValue:"false",type:{name:"boolean"},tags:[]},{id:167,name:"sparse",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L185",comment:"Sparse element containing the sparse data, if any",type:{name:"AccessorSparse",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparse.ts#L16"},tags:[]},{id:160,name:"type",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L150",comment:"Type of each element in this Accessor (SCALAR, VEC3, ...)",type:{name:"AccessorType",lib:"nanogl-gltf",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L123",parent:{kind:"Namespace",name:"Gltf2"}},tags:[]}],accessors:[{id:170,name:"bytesPerElem",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L199",getter:{name:"get bytesPerElem",comment:"Number of bytes for each element in this accessor, based on the componentType.",tags:[],type:{name:"number"},typeParams:[]}},{id:172,name:"glslType",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L206",getter:{name:"get glslType",comment:"GLSL type for this accessor, based on the accessor type.",tags:[],type:{name:"AccessorGlslType",lib:"nanogl-gltf",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L20"},typeParams:[]}},{id:168,name:"numComps",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L192",getter:{name:"get numComps",comment:"Number of components for this accessor type (1 for SCALAR, 3 for VEC3, 16 for MAT4, ...).",tags:[],type:{listType:"union",list:[{name:"1",data:{literalType:"number"}},{name:"2",data:{literalType:"number"}},{name:"3",data:{literalType:"number"}},{name:"4",data:{literalType:"number"}},{name:"9",data:{literalType:"number"}},{name:"16",data:{literalType:"number"}}]},typeParams:[]}}],methods:[{id:211,name:"[iterator]",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L212",tags:[],type:{name:"Generator",data:{arguments:[{name:"TypedArray",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/TypedArray.ts#L5"},{name:"void"},{name:"unknown"}]}},typeParams:[]},{id:207,name:"_normalize",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L361",comment:"Normalize the given raw value and store it in out",tags:[],type:{name:"void"},params:[{id:209,name:"out",type:{name:"TypedArray",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/TypedArray.ts#L5"},tags:[],comment:"TypedArray to store the value in"},{id:210,name:"raw",type:{name:"TypedArray",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/TypedArray.ts#L5"},tags:[],comment:"TypedArray to normalize"}],typeParams:[]},{id:174,name:"createElementHolder",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L226",comment:`Create an empty TypedArray for this accessor, to hold 1 element. Will be a Float32Array if normalized.
Useful when we need to create an array but we don't have the data yet.`,tags:[],type:{name:"TypedArray",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/TypedArray.ts#L5"},params:[{id:176,name:"normalized",type:{name:"boolean"},tags:[],comment:"Whether the Element to hold is normalized or not. Default to this.normalized."}],typeParams:[]},{id:177,name:"createElementHolderArray",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L239",comment:`Create an empty TypedArray of a certain size for this accessor, to hold multiple elements. Will be a Float32Array if normalized.
Useful when we need to create an array but we don't have the data yet.`,tags:[],type:{name:"TypedArray",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/TypedArray.ts#L5"},params:[{id:179,name:"size",type:{name:"number"},tags:[],comment:"Size of the array to create"},{id:180,name:"normalized",type:{name:"boolean"},tags:[],comment:"Whether the Element to hold is normalized or not. Default to this.normalized."}],typeParams:[]},{id:185,name:"getRawScalar",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L274",comment:"Copy accessor value at the given index to output array. Skip sparse resolve",tags:[],type:{name:"number"},params:[{id:187,name:"index",type:{name:"number"},tags:[],comment:"Index of the value to copy"}],typeParams:[]},{id:198,name:"getRawValue",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L330",comment:"Copy accessor value of a whole element at the given index to output array (for example, if it's a VEC3, copy 3 values). Skip sparse resolve",tags:[],type:{name:"void"},params:[{id:200,name:"out",type:{name:"TypedArray",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/TypedArray.ts#L5"},tags:[],comment:"TypedArray to store the value in"},{id:201,name:"index",type:{name:"number"},tags:[],comment:"Index of the value to get"}],typeParams:[]},{id:202,name:"getRawValues",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L344",comment:"Copy multiple elements of the accessor to the output array. Skip sparse resolve",tags:[],type:{name:"void"},params:[{id:204,name:"out",type:{name:"TypedArray",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/TypedArray.ts#L5"},tags:[],comment:"TypedArray to store the values in"},{id:205,name:"index",type:{name:"number"},tags:[],comment:"Index of the first value to get"},{id:206,name:"size",type:{name:"number"},tags:[],comment:"Number of values to get"}],typeParams:[]},{id:181,name:"getScalar",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L252",comment:"Copy accessor value at the given index to output array",tags:[],type:{name:"number"},params:[{id:183,name:"index",type:{name:"number"},tags:[],comment:"Index of the value to copy"},{id:184,name:"normalized",type:{name:"boolean"},tags:[],comment:"Whether the value should be normalized or not before returning it"}],typeParams:[]},{id:188,name:"getValue",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L287",comment:"Copy accessor value of a whole element at the given index to output array (for example, if it's a VEC3, copy 3 values)",tags:[],type:{name:"void"},params:[{id:190,name:"out",type:{name:"TypedArray",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/TypedArray.ts#L5"},tags:[],comment:"TypedArray to store the value in"},{id:191,name:"index",type:{name:"number"},tags:[],comment:"Index of the value to get"},{id:192,name:"normalized",type:{name:"boolean"},tags:[],comment:"Whether the value should be normalized or not before returning it"}],typeParams:[]},{id:193,name:"getValues",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L309",comment:"Copy multiple elements of the accessor to the output array",tags:[],type:{name:"void"},params:[{id:195,name:"out",type:{name:"TypedArray",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/TypedArray.ts#L5"},tags:[],comment:"TypedArray to store the values in"},{id:196,name:"index",type:{name:"number"},tags:[],comment:"Index of the first value to get"},{id:197,name:"size",type:{name:"number"},tags:[],comment:"Number of values to get"}],typeParams:[]}],extends:null,implements:null},{id:1064,name:"BaseTextureInfo",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/TextureInfo.ts#L40",comment:`The BaseTextureInfo element contains the base properties and methods for TextureInfo, NormalTextureInfo and OcclusionTextureInfo.
It contains the texture and the texCoord to use to sample the texture, and a createSampler() method to create a nanogl-pbr Sampler object.`,tags:["abstract"],constructors:[{id:1065,name:"BaseTextureInfo",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/TextureInfo.ts#L40",tags:[],type:{name:"BaseTextureInfo",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/TextureInfo.ts#L40"},typeParams:[]}],properties:[{id:1071,name:"_sampler",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/TextureInfo.ts#L58",comment:"nanogl-pbr Sampler object, used to sample the texture.",defaultValue:"null",type:{name:"Sampler",lib:"nanogl-pbr",kind:"Property",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L667",parent:{kind:"Class",name:"Input"}},tags:[]},{id:1068,name:"extras",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/TextureInfo.ts#L43",type:{name:"any"},tags:[]},{id:1067,name:"name",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/TextureInfo.ts#L42",type:{name:"string"},tags:[]},{id:1070,name:"texCoord",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/TextureInfo.ts#L53",comment:"Index of the texture's TEXCOORD attribute to use. Default to 0",type:{name:"number"},tags:[]},{id:1069,name:"texture",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/TextureInfo.ts#L48",comment:"Texture element used as the texture data",type:{name:"Texture",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Texture.ts#L20"},tags:[]}],accessors:[],methods:[{id:1072,name:"createSampler",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/TextureInfo.ts#L65",comment:"Create a nanogl-pbr Sampler object, used to sample the texture.",tags:[],type:{name:"Sampler",lib:"nanogl-pbr",kind:"Property",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L667",parent:{kind:"Class",name:"Input"}},params:[{id:1074,name:"id",type:{name:"string"},tags:[],comment:"ID or name to use for the sampler, to differentiate multiple samplers on the same Program"}],typeParams:[]},{id:1075,name:"parse",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/TextureInfo.ts#L81",comment:`Parse the BaseTextureInfo data, fill the texture and texCoord properties.

Is async as it needs to wait for the texture to be created.`,tags:[],type:{name:"Promise",data:{arguments:[{name:"any"}]}},params:[{id:1077,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[],comment:"GLTFLoader to use"},{id:1078,name:"data",type:{name:"any"},tags:[],comment:"Data to parse"}],typeParams:[]}],extends:null,implements:{name:"ITextureInfo",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/TextureInfo.ts#L16"}},{id:541,name:"Buffer",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Buffer.ts#L15",comment:`The Buffer element contains raw binary data, used to store data about geometry, animations, skins or textures.
Comes from an external file or is stored in the GLTF file as a base64 string.`,tags:[],constructors:[{id:542,name:"Buffer",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Buffer.ts#L15",tags:[],type:{name:"Buffer",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Buffer.ts#L15"},typeParams:[]}],properties:[{id:550,name:"_byteOffset",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Buffer.ts#L39",comment:"Offset in bytes in the buffer to the data",type:{name:"number"},tags:[]},{id:549,name:"_bytes",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Buffer.ts#L34",comment:"ArrayBuffer containing the raw buffer data",type:{name:"ArrayBuffer"},tags:[]},{id:547,name:"byteLength",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Buffer.ts#L24",comment:"Length of the buffer data in bytes",type:{name:"number"},tags:[]},{id:546,name:"extras",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Buffer.ts#L19",comment:"Extras of this element (custom additional data that can be added to every gltf property)",type:{name:"any"},tags:[]},{id:544,name:"gltftype",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Buffer.ts#L17",comment:"Type of this element",defaultValue:"GltfTypes.BUFFER",type:{name:"BUFFER",lib:"nanogl-gltf",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/GltfTypes.ts#L15",parent:{kind:"Enumeration",name:"GltfTypes"}},tags:["readonly"]},{id:545,name:"name",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Buffer.ts#L18",comment:"Name of this element",type:{name:"string"},tags:[]},{id:548,name:"uri",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Buffer.ts#L29",comment:"URI to the buffer data",type:{name:"string"},tags:[]}],accessors:[],methods:[{id:551,name:"parse",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Buffer.ts#L49",comment:`Parse the Buffer data, load the buffer data from the uri and store them in _bytes attribute.

Is async as it needs to wait for the buffer data to be loaded.`,tags:[],type:{name:"Promise",data:{arguments:[{name:"any"}]}},params:[{id:553,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[],comment:"GLTFLoader to use"},{id:554,name:"data",type:{name:"IBuffer",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L49",parent:{kind:"Namespace",name:"Gltf2"}},tags:[],comment:"Data to parse"}],typeParams:[]}],extends:null,implements:{name:"IElement",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L34"}},{id:904,name:"BufferInfos",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L53",comment:"A helper class to manage a set of Attributes sharing the same BufferView",tags:[],constructors:[{id:905,name:"BufferInfos",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L65",tags:[],type:{name:"BufferInfos",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L53"},params:[{id:907,name:"accessor",type:{name:"Accessor",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L375"},tags:[]}],typeParams:[]}],properties:[{id:909,name:"accessor",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L63",comment:"The BufferView",type:{name:"Accessor",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L375"},tags:[]},{id:908,name:"attributes",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L58",comment:"The Attributes sharing the same BufferView",type:{name:"Attribute",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L20",isArray:!0},tags:[]}],accessors:[],methods:[{id:910,name:"addAttribute",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L70",tags:[],type:{name:"void"},params:[{id:912,name:"attribute",type:{name:"Attribute",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L20"},tags:[]}],typeParams:[]}],extends:null,implements:null},{id:557,name:"BufferView",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/BufferView.ts#L25",comment:`The BufferView element is a view into a Buffer, representing a slice of it,
as a Buffer is often used to contain large quantities of different datas not related to each other.
A BufferView allows to access only a part of a Buffer and to simplify its access.`,tags:[],constructors:[{id:558,name:"BufferView",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/BufferView.ts#L25",tags:[],type:{name:"BufferView",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/BufferView.ts#L25"},typeParams:[]}],properties:[{id:567,name:"buffer",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/BufferView.ts#L55",comment:"Associated Buffer element",type:{name:"Buffer",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Buffer.ts#L15"},tags:[]},{id:564,name:"byteLength",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/BufferView.ts#L39",comment:"Length of this BufferView in the associated Buffer, in bytes",defaultValue:"0",type:{name:"number"},tags:[]},{id:563,name:"byteOffset",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/BufferView.ts#L34",comment:"Offset of this BufferView in the associated Buffer, in bytes",defaultValue:"0",type:{name:"number"},tags:[]},{id:565,name:"byteStride",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/BufferView.ts#L44",comment:"Stride of this BufferView in the associated Buffer, in bytes",defaultValue:"0",type:{name:"number"},tags:[]},{id:562,name:"extras",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/BufferView.ts#L29",comment:"Extras of this element (custom additional data that can be added to every gltf property)",type:{name:"any"},tags:[]},{id:568,name:"glBuffer",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/BufferView.ts#L60",comment:"WebGLBuffer created from the associated BufferView data, used when calling getWebGLBuffer()",defaultValue:"null",type:{name:"WebGLBuffer"},tags:["private"]},{id:569,name:"glBufferTarget",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/BufferView.ts#L65",comment:"WebGLBufferTarget stored when calling getWebGLBuffer()",defaultValue:"0",type:{name:"number"},tags:["private"]},{id:560,name:"gltftype",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/BufferView.ts#L27",comment:"Type of this element",defaultValue:"GltfTypes.BUFFERVIEW",type:{name:"BUFFERVIEW",lib:"nanogl-gltf",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/GltfTypes.ts#L16",parent:{kind:"Enumeration",name:"GltfTypes"}},tags:["readonly"]},{id:561,name:"name",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/BufferView.ts#L28",comment:"Name of this element",type:{name:"string"},tags:[]},{id:566,name:"target",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/BufferView.ts#L50",comment:`Target of this BufferView, may be used to infer the type of the data,
either 34962 (used for vertex attributes) or 34963 (used for vertex indices).`,defaultValue:"0",type:{name:"number"},tags:[]}],accessors:[],methods:[{id:574,name:"getByteOffset",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/BufferView.ts#L97",comment:`Get the offset of this BufferView in the associated Buffer, in bytes.
Adds the byteOffset of the Buffer if any.`,tags:[],type:{name:"number"},typeParams:[]},{id:576,name:"getWebGLBuffer",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/BufferView.ts#L106",comment:"Create a WebGLBuffer from the associated BufferView data.",tags:[],type:{name:"WebGLBuffer"},params:[{id:578,name:"gl",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[],comment:"GL context to create the WebGLBuffer"},{id:579,name:"inferedTarget",type:{name:"ArrayBufferTarget",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/BufferView.ts#L18"},tags:[],comment:"Target to use for the WebGLBuffer"}],typeParams:[]},{id:570,name:"parse",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/BufferView.ts#L75",comment:`Parse the BufferView data, load the associated Buffer element and sets the byteOffset, byteLength, byteStride and target attributes.

Is async as it needs to wait for the buffer data to be loaded.`,tags:[],type:{name:"Promise",data:{arguments:[{name:"any"}]}},params:[{id:572,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[],comment:"GLTFLoader to use"},{id:573,name:"data",type:{name:"IBufferView",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L50",parent:{kind:"Namespace",name:"Gltf2"}},tags:[],comment:"Data to parse"}],typeParams:[]}],extends:null,implements:{name:"IElement",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L34"}},{id:582,name:"Camera",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Camera.ts#L23",comment:"The Camera element only contains a perspective or orthographic lens object, used to render the scene.",tags:[],constructors:[{id:583,name:"Camera",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Camera.ts#L23",tags:[],type:{name:"Camera",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Camera.ts#L23"},typeParams:[]}],properties:[{id:587,name:"extras",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Camera.ts#L27",comment:"Extras of this element (custom additional data that can be added to every gltf property)",type:{name:"any"},tags:[]},{id:585,name:"gltftype",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Camera.ts#L25",comment:"Type of this element",defaultValue:"GltfTypes.CAMERA",type:{name:"CAMERA",lib:"nanogl-gltf",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/GltfTypes.ts#L17",parent:{kind:"Enumeration",name:"GltfTypes"}},tags:["readonly"]},{id:590,name:"lens",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Camera.ts#L42",comment:"nanogl-camera lens object, either a PerspectiveLens or OrthographicLens",type:{name:"ICameraLens",lib:"nanogl-camera",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ICameraLens.ts#L4"},tags:[]},{id:586,name:"name",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Camera.ts#L26",comment:"Name of this element",type:{name:"string"},tags:[]},{id:589,name:"projectionData",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Camera.ts#L37",comment:"Either a Perspective or Orthographic projection data",type:{name:"ProjectionData",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Camera.ts#L17"},tags:[]},{id:588,name:"type",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Camera.ts#L32",comment:"Type of the camera, either perspective or orthographic",type:{name:"CameraType",lib:"nanogl-gltf",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L194",parent:{kind:"Namespace",name:"Gltf2"}},tags:[]}],accessors:[],methods:[{id:598,name:"createOrtho",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Camera.ts#L91",comment:"Create an OrthographicLens from the glTF data",tags:[],type:{name:"OrthographicLens",lib:"nanogl-camera",kind:"Class",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ortho-lens.ts#L7"},params:[{id:600,name:"data",type:{name:"ICameraOrthographic",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L568",parent:{kind:"Namespace",name:"Gltf2"}},tags:[],comment:"Data coming from the glTF file, containing the orthographic data"}],typeParams:[]},{id:595,name:"createPerpective",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Camera.ts#L78",comment:"Create a PerspectiveLens from the glTF data",tags:[],type:{name:"ICameraLens",lib:"nanogl-camera",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ICameraLens.ts#L4"},params:[{id:597,name:"data",type:{name:"ICameraPerspective",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L589",parent:{kind:"Namespace",name:"Gltf2"}},tags:[],comment:"Data coming from the glTF file, containing the perspective data"}],typeParams:[]},{id:591,name:"parse",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Camera.ts#L49",comment:"Parse the Camera data, create the nanogl-camera lens object",tags:[],type:{name:"Promise",data:{arguments:[{name:"any"}]}},params:[{id:593,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[],comment:"GLTFLoader to use, unused here"},{id:594,name:"data",type:{name:"ICamera",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L51",parent:{kind:"Namespace",name:"Gltf2"}},tags:[],comment:"Data to parse"}],typeParams:[]}],extends:null,implements:{name:"IElement",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L34"}},{id:1430,name:"CompressedImage",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/CompressedImage.ts#L8",comment:`The Image element represents a basic image, contains the image data, used to store textures.
Provides a method to setup a Texture2D with the image data, to be used in a WebGL context.`,tags:[],constructors:[],properties:[{id:1433,name:"texDataSource",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/CompressedImage.ts#L10",type:{name:"TextureDefinition",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/KTXParser.ts#L12"},tags:[]}],accessors:[],methods:[{id:1434,name:"parseCompressed",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/CompressedImage.ts#L12",tags:[],type:{name:"Promise",data:{arguments:[{name:"any"}]}},params:[{id:1436,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[]},{id:1437,name:"data",type:{name:"IImage",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L52",parent:{kind:"Namespace",name:"Gltf2"}},tags:[]},{id:1438,name:"texLoader",type:{name:"TextureLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/TextureLoader.ts#L65"},tags:[]}],typeParams:[]},{id:1439,name:"setupTexture",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/CompressedImage.ts#L26",comment:`Setup the provided Texture2D with the image data, with provided wrap and filter modes, by binding it to the GPU.
Called by the Texture element during allocation.

Is async as it can need to wait for the image to be resized to a POT (Power Of Two) texture.`,tags:[],type:{name:"Promise",data:{arguments:[{name:"void"}]}},params:[{id:1441,name:"texture",type:{name:"Texture2D",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-2d.ts#L9"},tags:[],comment:"Texture to setup"},{id:1442,name:"wrapS",type:{name:"number"},tags:[],comment:"Horizontal texture wrap"},{id:1443,name:"wrapT",type:{name:"number"},tags:[],comment:"Vertical texture wrap"},{id:1444,name:"minFilter",type:{name:"number"},tags:[],comment:"Minification filter"},{id:1445,name:"magFilter",type:{name:"number"},tags:[],comment:"Magnification filter"}],typeParams:[]}],extends:[{name:"Image",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Image.ts#L55"}],implements:null},{id:128,name:"DefaultSemantics",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Semantics.ts#L37",comment:`The default implementation of ISemantics.

It uses the following convention: POSITION = aPosition, NORMAL = aNormal, TANGENT = aTangent, TEXCOORD = aTexCoord, COLOR = aColor, JOINTS = aSkinJoints, WEIGHTS = aSkinWeights`,tags:[],constructors:[{id:129,name:"DefaultSemantics",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Semantics.ts#L37",tags:[],type:{name:"DefaultSemantics",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Semantics.ts#L37"},typeParams:[]}],properties:[],accessors:[],methods:[{id:135,name:"getAttributeName",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Semantics.ts#L54",comment:`Get the GLSL attribute name for an attribute with a given semantic.
If the semantic is indexed, it will be suffixed with the set index (e.g. TEXCOORD_0 -> aTexCoord0)`,tags:[],type:{name:"string"},params:[{id:137,name:"semantic",type:{name:"string"},tags:[],comment:"Attribute semantic"}],typeParams:[]},{id:131,name:"getMorphedAttributeName",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Semantics.ts#L45",comment:`Get the GLSL attribute name for a morphed attribute with a given semantic and index.
Typically the same as getAttributeName but with a suffix _mt{index}`,tags:[],type:{name:"string"},params:[{id:133,name:"semantic",type:{name:"string"},tags:[],comment:"Attribute semantic"},{id:134,name:"index",type:{name:"number"},tags:[],comment:"Index of the morph target"}],typeParams:[]}],extends:null,implements:{name:"ISemantics",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Semantics.ts#L15"}},{id:1765,name:"Deferred",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/lib/Deferred.ts#L5",comment:"Implementation of a deferred promise, that can be resolved or rejected from outside, at anytime.",tags:[],constructors:[{id:1766,name:"Deferred",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/lib/Deferred.ts#L22",tags:[],type:{name:"Deferred",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/lib/Deferred.ts#L5",data:{arguments:[{name:"T"}]}},typeParams:[{id:1768,name:"T",tags:[],default:{name:"unknown"}}]}],properties:[{id:1769,name:"promise",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/lib/Deferred.ts#L10",comment:"Created promise that can be resolved or rejected from outside",type:{name:"Promise",data:{arguments:[{name:"T"}]}},tags:["readonly"]}],accessors:[],methods:[{id:1774,name:"_reject",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/lib/Deferred.ts#L20",comment:"Reject function",tags:[],type:{name:"void"},params:[{id:1777,name:"reason",type:{name:"any"},tags:["optional"],optional:!0}],typeParams:[]},{id:1770,name:"_resolve",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/lib/Deferred.ts#L15",comment:"Resolve function",tags:[],type:{name:"void"},params:[{id:1773,name:"value",type:{listType:"union",list:[{name:"T"},{name:"PromiseLike",data:{arguments:[{name:"T"}]}}]},tags:["optional"],optional:!0}],typeParams:[]},{id:1781,name:"reject",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/lib/Deferred.ts#L41",comment:"Reject the promise with a reason",tags:[],type:{name:"void"},params:[{id:1783,name:"reason",type:{name:"any"},tags:["optional"],comment:"Reason to reject the promise with",optional:!0}],typeParams:[]},{id:1778,name:"resolve",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/lib/Deferred.ts#L33",comment:"Resolve the promise with a value",tags:[],type:{name:"void"},params:[{id:1780,name:"value",type:{listType:"union",list:[{name:"T"},{name:"PromiseLike",data:{arguments:[{name:"T"}]}}]},tags:["optional"],comment:"Value to resolve the promise with, will be returned by the promise",optional:!0}],typeParams:[]}],extends:null,implements:null},{id:1149,name:"DracoPrimitive",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_draco_mesh_compression/DracoPrimitive.ts#L12",comment:`The Primitive element is a set of attributes defining a geometry to render with a given material and in a given mode.
It may be indexed, and may have morph targets.

It's the most basic renderable element, as a Scene is made of Meshes, and a Mesh is made of Primitives.`,tags:[],constructors:[],properties:[{id:1152,name:"geometry",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_draco_mesh_compression/DracoPrimitive.ts#L14",type:{name:"IDracoGeometry",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_draco_mesh_compression/DecoderAPI.ts#L19"},tags:[]}],accessors:[],methods:[{id:1156,name:"allocateGl",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_draco_mesh_compression/DracoPrimitive.ts#L57",comment:`Create the GLArrayBuffers for Primitive's attributes (basic & morph target) and GLIndexBuffer for Primitive's indices.
After that, the Primitive is ready to be rendered.`,tags:[],type:{name:"void"},params:[{id:1158,name:"gl",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[],comment:"GL context to use"}],typeParams:[]},{id:1159,name:"render",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_draco_mesh_compression/DracoPrimitive.ts#L91",comment:`Draw the Primitive, using its indices if it is indexed, or its vertices' order if it is not.
Called by the MeshRenderer.`,tags:[],type:{name:"void"},typeParams:[]},{id:1153,name:"setDatas",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_draco_mesh_compression/DracoPrimitive.ts#L17",tags:[],type:{name:"void"},params:[{id:1155,name:"geometry",type:{name:"IDracoGeometry",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_draco_mesh_compression/DecoderAPI.ts#L19"},tags:[]}],typeParams:[]}],extends:[{name:"Primitive",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L149"}],implements:null},{id:2,name:"ElementCollection",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L37",comment:"Collection of elements of a given type",tags:[],constructors:[{id:3,name:"ElementCollection",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L37",tags:[],type:{name:"ElementCollection",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L37",data:{arguments:[{name:"T"}]}},typeParams:[{id:5,name:"T",type:{name:"AnyElement",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L65"},tags:[],default:{name:"AnyElement",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L65"}}]}],properties:[{id:6,name:"indexed",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L44",comment:"Array of elements order by specified index",defaultValue:"[]",type:{name:"T",isArray:!0},tags:[]},{id:7,name:"list",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L49",comment:"Array of elements ordered by push order",defaultValue:"[]",type:{name:"T",isArray:!0},tags:[]}],accessors:[],methods:[{id:8,name:"addElement",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L56",comment:"Add an element to the collection",tags:[],type:{name:"void"},params:[{id:10,name:"element",type:{name:"T"},tags:[],comment:"Element to add"},{id:11,name:"index",type:{name:"number"},tags:[],comment:"Index of the element, if -1 or not specified, will not be pushed to indexed array",defaultValue:"-1"}],typeParams:[]}],extends:null,implements:null},{id:1539,name:"ExtensionList",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/Registry.ts#L11",comment:"This class provides functionalities for managing a list of extensions",tags:[],constructors:[{id:1540,name:"ExtensionList",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/Registry.ts#L11",tags:[],type:{name:"ExtensionList",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/Registry.ts#L11"},typeParams:[]}],properties:[{id:1543,name:"_list",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/Registry.ts#L21",comment:"Array of extensions",defaultValue:"[]",type:{name:"IExtensionInstance",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/IExtension.ts#L29",isArray:!0},tags:[]},{id:1542,name:"_map",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/Registry.ts#L16",comment:"Map of extensions by name",defaultValue:"{}",type:{name:"Record",data:{arguments:[{name:"string"},{name:"IExtensionInstance",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/IExtension.ts#L29"}]}},tags:[]}],accessors:[],methods:[{id:1544,name:"addExtension",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/Registry.ts#L27",comment:"Add an extension to the list, will throw if extension already exists",tags:[],type:{name:"void"},params:[{id:1546,name:"ext",type:{name:"IExtensionInstance",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/IExtension.ts#L29"},tags:[],comment:"Extension to add"}],typeParams:[]},{id:1547,name:"sort",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/Registry.ts#L38",comment:"Sort extensions _list by priority",tags:[],type:{name:"void"},typeParams:[]},{id:1549,name:"validate",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/Registry.ts#L47",comment:"Check if this list contains a list of given extensions",tags:[],type:{name:"void"},params:[{id:1551,name:"used",type:{name:"string",isArray:!0},tags:[],comment:"List of used but not necessary extensions, will only warn if missing",defaultValue:"[]"},{id:1552,name:"required",type:{name:"string",isArray:!0},tags:[],comment:"List of necessary extensions, will throw if missing",defaultValue:"[]"}],typeParams:[]}],extends:null,implements:null},{id:1553,name:"ExtensionsRegistry",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/Registry.ts#L63",comment:"This class manages all the extensions activated for Gltf processing (like KHR_texture_transform, EXT_texture_webp, ...)",tags:[],constructors:[{id:1554,name:"ExtensionsRegistry",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/Registry.ts#L70",tags:[],type:{name:"ExtensionsRegistry",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/Registry.ts#L63"},typeParams:[]}],properties:[{id:1556,name:"_extensionFactories",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/Registry.ts#L68",comment:"Map of extensions factories by name",type:{name:"Record",data:{arguments:[{name:"string"},{name:"IExtensionFactory",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/IExtension.ts#L45"}]}},tags:[]}],accessors:[],methods:[{id:1557,name:"addExtension",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/Registry.ts#L78",comment:"Add an extension factory to the registry",tags:[],type:{name:"void"},params:[{id:1559,name:"ext",type:{name:"IExtensionFactory",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/IExtension.ts#L45"},tags:[],comment:"Extension factory to add to the registry"}],typeParams:[]},{id:1560,name:"setupExtensions",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/Registry.ts#L89",comment:"Setup extensions for a given loader, will create extension instances from extension factories",tags:[],type:{name:"void"},params:[{id:1562,name:"loader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[],comment:"Loader to setup extensions for"},{id:1563,name:"additionalExtensions",type:{name:"IExtensionFactory",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/IExtension.ts#L45",isArray:!0},tags:[],comment:"Additional extensions not yet added in the registry",defaultValue:"[]"}],typeParams:[]}],extends:null,implements:null},{id:19,name:"Gltf",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L76",comment:"Gltf file representation",tags:[],constructors:[{id:35,name:"Gltf",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L162",tags:[],type:{name:"Gltf",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L76"},typeParams:[]}],properties:[{id:38,name:"_collections",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L142",comment:"Map of all elements of this Gltf, ordered in typed collections",type:{name:"Map",data:{arguments:[{name:"GltfTypes",lib:"nanogl-gltf",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/GltfTypes.ts#L5"},{name:"ElementCollection",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L37"}]}},tags:["private"]},{id:37,name:"_elements",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L137",comment:"Array of all elements of this Gltf, unordered",type:{name:"AnyElement",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L65",isArray:!0},tags:["private"]},{id:42,name:"cameraInstances",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L154",type:{name:"Camera",lib:"nanogl-camera",kind:"Class",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/index.ts#L18",data:{arguments:[{name:"ICameraLens",lib:"nanogl-camera",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ICameraLens.ts#L4"}]},isArray:!0},tags:[]},{id:43,name:"depthPass",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L155",type:{name:"DepthPass",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/DepthPass.ts#L25"},tags:[]},{id:44,name:"extras",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L160",comment:"Extras property of this Gltf (custom additional data that can be added to every gltf property)",defaultValue:"{}",type:{name:"GltfExtras",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L67"},tags:[]},{id:40,name:"gl",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L152",comment:"GL context of this Gltf",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[]},{id:41,name:"renderables",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L153",type:{name:"MeshRenderer",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/renderer/MeshRenderer.ts#L31",isArray:!0},tags:[]},{id:39,name:"root",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L147",comment:"Root node of this Gltf",type:{name:"Node",lib:"nanogl-node",kind:"Class",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L18"},tags:["readonly"]},{id:20,name:"_extensionsRegistry",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L81",comment:"Static registry of activated extensions for all Gltf instances",type:{name:"ExtensionsRegistry",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/Registry.ts#L63"},tags:["private","static"]},{id:22,name:"_renderConfig",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L91",comment:"Static render config for all Gltf instances",type:{name:"IRenderConfig",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/IRenderConfig.ts#L6"},tags:["private","static"]},{id:21,name:"_semantics",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L86",comment:"Static GLSL semantics' resolver for all Gltf instances",type:{name:"ISemantics",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Semantics.ts#L15"},tags:["private","static"]}],accessors:[{id:55,name:"accessors",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L251",getter:{name:"get accessors",tags:[],type:{name:"Accessor",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L375",isArray:!0},typeParams:[]}},{id:57,name:"animations",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L252",getter:{name:"get animations",tags:[],type:{name:"Animation",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Animation.ts#L16",isArray:!0},typeParams:[]}},{id:53,name:"bufferViews",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L250",getter:{name:"get bufferViews",tags:[],type:{name:"BufferView",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/BufferView.ts#L25",isArray:!0},typeParams:[]}},{id:51,name:"buffers",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L249",getter:{name:"get buffers",tags:[],type:{name:"Buffer",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Buffer.ts#L15",isArray:!0},typeParams:[]}},{id:65,name:"cameras",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L256",getter:{name:"get cameras",tags:[],type:{name:"Camera",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Camera.ts#L23",isArray:!0},typeParams:[]}},{id:63,name:"materials",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L255",getter:{name:"get materials",tags:[],type:{name:"IMaterial",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L46",isArray:!0},typeParams:[]}},{id:59,name:"meshes",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L253",getter:{name:"get meshes",tags:[],type:{name:"Mesh",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Mesh.ts#L14",isArray:!0},typeParams:[]}},{id:61,name:"nodes",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L254",getter:{name:"get nodes",tags:[],type:{name:"Node",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Node.ts#L18",isArray:!0},typeParams:[]}},{id:69,name:"primitives",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L258",getter:{name:"get primitives",tags:[],type:{name:"Primitive",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L149",isArray:!0},typeParams:[]}},{id:67,name:"skins",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L257",getter:{name:"get skins",tags:[],type:{name:"Skin",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Skin.ts#L18",isArray:!0},typeParams:[]}},{id:71,name:"textures",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L259",getter:{name:"get textures",tags:[],type:{name:"Texture",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Texture.ts#L20",isArray:!0},typeParams:[]}}],methods:[{id:102,name:"_getCollection",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L313",comment:"Get full collection of a specific type",tags:["private"],type:{name:"ElementCollection",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L37",data:{arguments:[{listType:"union",list:[{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"}]}]}},params:[{id:105,name:"type",type:{name:"T"},tags:[],comment:"Type of targeted collection"}],typeParams:[{id:104,name:"T",type:{name:"GltfTypes",lib:"nanogl-gltf",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/GltfTypes.ts#L5"},tags:[]}]},{id:106,name:"addElement",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L322",comment:"Add an element to the Gltf",tags:[],type:{name:"void"},params:[{id:108,name:"element",type:{name:"AnyElement",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L65"},tags:[],comment:"Element to add"},{id:109,name:"index",type:{name:"number"},tags:[],comment:"Index of the element, if -1 or not specified, will not be pushed to indexed array (only the unordered one)",defaultValue:"-1"}],typeParams:[]},{id:45,name:"allocate",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L203",comment:`Get the Gltf ready to be used in a WebGL context.
Generally the first method called after loading the Gltf.
This will allocate all the needed textures to the GPU, create the renderables, cameras, and initialize buffers for primitives.`,tags:[],type:{name:"Promise",data:{arguments:[{name:"void"}]}},params:[{id:47,name:"gl",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[],comment:"GL context"},{id:48,name:"abortSignal",type:{name:"AbortSignal"},tags:[],comment:"Abort signal if you want to be able to cancel the request at any time",defaultValue:"AbortSignal.none"}],typeParams:[]},{id:49,name:"createCameras",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L236",tags:[],type:{name:"void"},typeParams:[]},{id:73,name:"getAllElements",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L264",comment:"Get all elements of this Gltf, unordered and unfiltered",tags:[],type:{name:"AnyElement",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L65",isArray:!0},typeParams:[]},{id:99,name:"getAnimation",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L307",tags:[],type:{name:"Animation",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Animation.ts#L16"},params:[{id:101,name:"name",type:{name:"string"},tags:[]}],typeParams:[]},{id:75,name:"getElement",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L273",comment:"Get element by his type and index",tags:[],type:{listType:"union",list:[{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"Accessor",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L375"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"AccessorSparse",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparse.ts#L16"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"AccessorSparseIndices",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparseIndices.ts#L12"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"AccessorSparseValues",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparseValues.ts#L12"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"Animation",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Animation.ts#L16"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"AnimationChannel",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationChannel.ts#L58"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"AnimationSampler",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationSampler.ts#L367"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"Asset",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Asset.ts#L11"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"Buffer",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Buffer.ts#L15"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"BufferView",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/BufferView.ts#L25"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"Camera",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Camera.ts#L23"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"Image",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Image.ts#L55"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"IMaterial",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L46"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"Mesh",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Mesh.ts#L14"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"Node",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Node.ts#L18"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"NormalTextureInfo",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/NormalTextureInfo.ts#L12"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"OcclusionTextureInfo",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/OcclusionTextureInfo.ts#L14"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"Primitive",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L149"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"Sampler",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Sampler.ts#L16"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"Scene",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Scene.ts#L12"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"Skin",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Skin.ts#L18"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"Texture",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Texture.ts#L20"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"TextureInfo",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/TextureInfo.ts#L92"}]}}]},params:[{id:78,name:"type",type:{name:"T"},tags:[],comment:"Element's type"},{id:79,name:"index",type:{name:"number"},tags:[],comment:"Element's index"}],typeParams:[{id:77,name:"T",type:{name:"GltfTypes",lib:"nanogl-gltf",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/GltfTypes.ts#L5"},tags:[]}]},{id:80,name:"getElementByName",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L282",comment:"Get element by his type and name",tags:[],type:{listType:"union",list:[{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"Accessor",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L375"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"AccessorSparse",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparse.ts#L16"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"AccessorSparseIndices",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparseIndices.ts#L12"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"AccessorSparseValues",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparseValues.ts#L12"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"Animation",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Animation.ts#L16"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"AnimationChannel",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationChannel.ts#L58"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"AnimationSampler",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationSampler.ts#L367"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"Asset",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Asset.ts#L11"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"Buffer",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Buffer.ts#L15"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"BufferView",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/BufferView.ts#L25"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"Camera",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Camera.ts#L23"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"Image",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Image.ts#L55"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"IMaterial",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L46"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"Mesh",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Mesh.ts#L14"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"Node",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Node.ts#L18"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"NormalTextureInfo",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/NormalTextureInfo.ts#L12"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"OcclusionTextureInfo",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/OcclusionTextureInfo.ts#L14"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"Primitive",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L149"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"Sampler",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Sampler.ts#L16"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"Scene",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Scene.ts#L12"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"Skin",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Skin.ts#L18"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"Texture",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Texture.ts#L20"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"TextureInfo",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/TextureInfo.ts#L92"}]}}]},params:[{id:83,name:"type",type:{name:"T"},tags:[],comment:"Element's type"},{id:84,name:"name",type:{name:"string"},tags:[],comment:"Element's name"}],typeParams:[{id:82,name:"T",type:{name:"GltfTypes",lib:"nanogl-gltf",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/GltfTypes.ts#L5"},tags:[]}]},{id:85,name:"getElementsByName",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L295",comment:"Get all elements of a specific type with a specific name",tags:[],type:{listType:"union",list:[{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"Accessor",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L375"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"AccessorSparse",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparse.ts#L16"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"AccessorSparseIndices",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparseIndices.ts#L12"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"AccessorSparseValues",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparseValues.ts#L12"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"Animation",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Animation.ts#L16"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"AnimationChannel",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationChannel.ts#L58"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"AnimationSampler",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationSampler.ts#L367"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"Asset",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Asset.ts#L11"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"Buffer",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Buffer.ts#L15"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"BufferView",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/BufferView.ts#L25"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"Camera",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Camera.ts#L23"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"Image",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Image.ts#L55"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"IMaterial",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L46"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"Mesh",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Mesh.ts#L14"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"Node",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Node.ts#L18"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"NormalTextureInfo",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/NormalTextureInfo.ts#L12"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"OcclusionTextureInfo",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/OcclusionTextureInfo.ts#L14"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"Primitive",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L149"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"Sampler",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Sampler.ts#L16"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"Scene",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Scene.ts#L12"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"Skin",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Skin.ts#L18"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"Texture",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Texture.ts#L20"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"T"},{name:"TextureInfo",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/TextureInfo.ts#L92"}]}}],isArray:!0},params:[{id:88,name:"type",type:{name:"T"},tags:[],comment:"Elements' type"},{id:89,name:"name",type:{name:"string"},tags:[],comment:"Elements' name"}],typeParams:[{id:87,name:"T",type:{name:"GltfTypes",lib:"nanogl-gltf",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/GltfTypes.ts#L5"},tags:[]}]},{id:96,name:"getMaterial",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L306",tags:[],type:{name:"IMaterial",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L46"},params:[{id:98,name:"name",type:{name:"string"},tags:[]}],typeParams:[]},{id:93,name:"getMesh",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L305",tags:[],type:{name:"Mesh",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Mesh.ts#L14"},params:[{id:95,name:"name",type:{name:"string"},tags:[]}],typeParams:[]},{id:90,name:"getNode",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L304",tags:[],type:{name:"Node",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Node.ts#L18"},params:[{id:92,name:"name",type:{name:"string"},tags:[]}],typeParams:[]},{id:23,name:"addExtension",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L100",comment:"Add an extension to the static Gltf's extensions registry",tags:["static"],type:{name:"void"},params:[{id:25,name:"ext",type:{name:"IExtensionFactory",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/IExtension.ts#L45"},tags:[],comment:"Extension to add"}],typeParams:[]},{id:33,name:"getExtensionsRegistry",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L129",comment:"Get the static Gltf's extensions registry",tags:["static"],type:{name:"ExtensionsRegistry",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/Registry.ts#L63"},typeParams:[]},{id:31,name:"getRenderConfig",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L122",comment:"Set the static Gltf's render config",tags:["static"],type:{name:"IRenderConfig",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/IRenderConfig.ts#L6"},typeParams:[]},{id:26,name:"getSemantics",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L107",comment:"Get the static Gltf's semantics resolver",tags:["static"],type:{name:"ISemantics",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Semantics.ts#L15"},typeParams:[]},{id:28,name:"setSemantics",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L115",comment:"Set a custom static Gltf's semantics resolver",tags:["static"],type:{name:"void"},params:[{id:30,name:"semantics",type:{name:"ISemantics",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Semantics.ts#L15"},tags:[],comment:"Custom semantics resolver"}],typeParams:[]}],extends:null,implements:null},{id:666,name:"GltfBaseMaterial",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L63",comment:"The GltfBaseMaterial element contains the base properties and methods for all Material classes coming from a glTF file",tags:["abstract"],constructors:[{id:667,name:"GltfBaseMaterial",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L63",tags:[],type:{name:"GltfBaseMaterial",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L63",data:{arguments:[{name:"TPass"}]}},typeParams:[{id:671,name:"TPass",type:{listType:"intersection",list:[{name:"MaterialPass",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MaterialPass.ts#L14"},{name:"object",data:{properties:[{name:"version",type:{name:"ShaderVersion",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ShaderVersion.ts#L15"}}]}}]},tags:[]}]}],properties:[{id:684,name:"_materialPass",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L118",comment:"Pass used to render the material, created in setupMaterials()",type:{name:"TPass"},tags:["protected"]},{id:681,name:"alphaCutoff",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L102",comment:"Alpha cutoff value used when alphaMode is MASK. Default to 0.5",type:{name:"number"},tags:[]},{id:680,name:"alphaMode",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L97",comment:"Alpha rendering mode (OPAQUE, MASK or BLEND). Default to OPAQUE",type:{name:"MaterialAlphaMode",lib:"nanogl-gltf",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L220",parent:{kind:"Namespace",name:"Gltf2"}},tags:[]},{id:682,name:"doubleSided",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L107",comment:"Whether the material will be rendered on double sides. Default to false",type:{name:"boolean"},tags:[]},{id:679,name:"emissiveFactor",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L92",comment:"Emissive factor, defining the strength applied on emissiveTexture. Default to [0,0,0]",type:{name:"vec3"},tags:[]},{id:678,name:"emissiveTexture",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L87",comment:"Emissive texture",type:{name:"TextureInfo",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/TextureInfo.ts#L92"},tags:["optional"]},{id:674,name:"extras",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L67",comment:"Extras of this element (custom additional data that can be added to every gltf property)",type:{name:"any"},tags:[]},{id:672,name:"gltftype",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L65",comment:"Type of this element",defaultValue:"GltfTypes.MATERIAL",type:{name:"MATERIAL",lib:"nanogl-gltf",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/GltfTypes.ts#L19",parent:{kind:"Enumeration",name:"GltfTypes"}},tags:["readonly"]},{id:673,name:"name",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L66",comment:"Name of this element",type:{name:"string"},tags:[]},{id:676,name:"normalTexture",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L77",comment:"Normal texture",type:{name:"NormalTextureInfo",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/NormalTextureInfo.ts#L12"},tags:["optional"]},{id:677,name:"occlusionTexture",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L82",comment:"Occlusion texture",type:{name:"OcclusionTextureInfo",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/OcclusionTextureInfo.ts#L14"},tags:["optional"]},{id:683,name:"pbrInputsData",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L112",comment:"Copy of pbrMetallicRoughness, used to setup the StandardPass",type:{name:"IPbrInputsData",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L38"},tags:[]},{id:675,name:"pbrMetallicRoughness",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L72",comment:"PbrMetallicRoughness element, containing the base color, metallic, roughness and metallicRoughnessTexture properties.",type:{name:"PbrMetallicRoughness",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/PbrMetallicRoughness.ts#L18"},tags:["optional"]}],accessors:[{id:685,name:"materialPass",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L120",getter:{name:"get materialPass",tags:[],type:{name:"TPass"},typeParams:[]}}],methods:[{id:703,name:"configureAlpha",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L225",comment:`Configure alpha rendering mode for a given Pass with this Material's options
(depth mask, blend, blendFunc, mask, alphaMode and alphaCutoff uniform)`,tags:[],type:{name:"void"},params:[{id:705,name:"pass",type:{listType:"union",list:[{name:"StandardPass",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L32",data:{arguments:[{name:"PbrSurface",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L14"}]}},{name:"UnlitPass",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/UnlitPass.ts#L31"}]},tags:[],comment:"Pass to configure"}],typeParams:[]},{id:700,name:"configurePbrSurface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L212",comment:`Configure PBR Surface for a given Pass with this Material's options.
If this.pbrInputsData is defined, call its setupPass() method, otherwise set a MetalnessSurface.`,tags:[],type:{name:"void"},params:[{id:702,name:"pass",type:{name:"StandardPass",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L32",data:{arguments:[{name:"PbrSurface",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L14"}]}},tags:[],comment:"Pass to configure"}],typeParams:[]},{id:687,name:"createMaterialForPrimitive",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L131",comment:"Create a nanogl-pbr Material object for a given Primitive, using the Pass created in setupMaterials().",tags:[],type:{name:"Material",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Material.ts#L73"},params:[{id:689,name:"gltf",type:{name:"Gltf",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L76"},tags:[],comment:"GLTF where the Primitive comes from"},{id:690,name:"node",type:{name:"Node",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Node.ts#L18"},tags:[],comment:"Parent Node of the Primitive, unused here"},{id:691,name:"primitive",type:{name:"Primitive",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L149"},tags:[],comment:"Primitive to create the Material for"}],typeParams:[]},{id:692,name:"parse",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L168",comment:`Parse the Material data, fill the emissiveFactor, alphaMode, alphaCutoff and doubleSided properties,
create the PbrMetallicRoughness, NormalTexture, OcclusionTexture and EmissiveTexture elements if needed,
and call the setupMaterials() method.

Is async as it may need to wait for PbrMetallicRoughness, NormalTexture, OcclusionTexture and EmissiveTexture elements to be created.`,tags:[],type:{name:"Promise",data:{arguments:[{name:"any"}]}},params:[{id:694,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[],comment:"GLTFLoader to use"},{id:695,name:"data",type:{name:"IMaterial",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L53",parent:{kind:"Namespace",name:"Gltf2"}},tags:[],comment:"Data to parse"}],typeParams:[]},{id:696,name:"parsePbrInputsData",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L200",comment:"Parse the PbrMetallicRoughness data, filling the pbrMetallicRoughness property with a new PbrMetallicRoughness element.",tags:[],type:{name:"Promise",data:{arguments:[{name:"any"}]}},params:[{id:698,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[],comment:"GLTFLoader to use"},{id:699,name:"data",type:{name:"IMaterial",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L53",parent:{kind:"Namespace",name:"Gltf2"}},tags:[],comment:"Data to parse"}],typeParams:[]},{id:706,name:"setupMaterials",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L245",comment:"Abstract class to setup the nanogl-pbr MaterialPass (enable depth test, cullface, alphaMode, attach textures samplers and factors, ...)",tags:["abstract"],type:{name:"void"},typeParams:[]}],extends:null,implements:{name:"IMaterial",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L46"}},{id:1701,name:"GltfIO",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/index.ts#L10",comment:"This class provides functionalities for loading gltf files and serves as a wrapper for IOInterface",tags:[],constructors:[{id:1702,name:"GltfIO",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/index.ts#L20",tags:[],type:{name:"GltfIO",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/index.ts#L10"},params:[{id:1704,name:"io",type:{name:"IOInterface",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/IOInterface.ts#L7"},tags:[],comment:"IOInterface implementation"}],typeParams:[]}],properties:[{id:1705,name:"_ioImpl",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/index.ts#L15",comment:"IOInterface implementation",type:{name:"IOInterface",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/IOInterface.ts#L7"},tags:[]}],accessors:[],methods:[{id:1706,name:"loadGltf",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/index.ts#L29",comment:"Load a Gltf file",tags:[],type:{name:"Promise",data:{arguments:[{name:"Gltf",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L76"}]}},params:[{id:1708,name:"path",type:{name:"string"},tags:[],comment:"Gltf file path"},{id:1709,name:"options",type:{name:"Partial",data:{arguments:[{name:"Options",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoaderOptions.ts#L8"}]}},tags:[],comment:"Options for the loader",defaultValue:"{}"}],typeParams:[]}],extends:null,implements:null},{id:1565,name:"GltfLoader",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59",comment:"This class is used to load a Gltf file and its resources, including extensions processing.",tags:[],constructors:[{id:1566,name:"GltfLoader",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L133",tags:[],type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},params:[{id:1568,name:"gltfIO",type:{name:"IOInterface",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/IOInterface.ts#L7"},tags:[],comment:"Implementation of IOInterface made for GLTFs"},{id:1569,name:"url",type:{name:"string"},tags:[],comment:"Gltf file path"},{id:1570,name:"options",type:{name:"Partial",data:{arguments:[{name:"Options",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoaderOptions.ts#L8"}]}},tags:[],comment:"Options for Gltf loader",defaultValue:"{}"}],typeParams:[]}],properties:[{id:1573,name:"_baseUrl",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L74",comment:"Resolved base directory of the Gltf file",type:{name:"string"},tags:[]},{id:1580,name:"_byType",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L110",comment:"Map of all elements of the Gltf data file, ordered by type",type:{name:"Map",data:{arguments:[{name:"GltfTypes",lib:"nanogl-gltf",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/GltfTypes.ts#L5"},{name:"Promise",isArray:!0}]}},tags:[]},{id:1575,name:"_data",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L84",comment:"Gltf data file content, parsed as JSON from the GLTF/GLB file",type:{name:"IGLTF",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L898",parent:{kind:"Namespace",name:"Gltf2"}},tags:[]},{id:1578,name:"_elements",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L100",comment:"Map of all created elements from the Gltf data file, by uuid",type:{name:"Map",data:{arguments:[{name:"string"},{name:"Promise"}]}},tags:[]},{id:1577,name:"_extensions",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L95",comment:"List of extensions activated on this loader",type:{name:"ExtensionList",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/Registry.ts#L11"},tags:[]},{id:1576,name:"_glbData",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L90",comment:`If the loaded file is a GLB file (binary GLTF), data such as images or shaders can be stored as base64-encoded binary data directly in the GLB file.
This buffer contains the decoded data.`,type:{name:"ArrayBuffer"},tags:["optional"]},{id:1579,name:"_pendingElements",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L105",comment:"List of elements that are being created, waiting to be resolved and added to the Gltf object",defaultValue:"[]",type:{name:"PendingElement",isArray:!0},tags:[]},{id:1581,name:"_propertyMaps",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L115",comment:"Map of all properties of the Gltf data file, ordered by type",type:{name:"Map",data:{arguments:[{name:"GltfTypes",lib:"nanogl-gltf",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/GltfTypes.ts#L5"},{name:"Property",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L66",parent:{kind:"Namespace",name:"Gltf2"},isArray:!0}]}},tags:[]},{id:1572,name:"_url",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L69",comment:"Gltf file path",type:{name:"string"},tags:[]},{id:1582,name:"abortSignal",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L120",comment:"Abort signal if you want to be able to cancel the request at any time",type:{name:"AbortSignal"},tags:["readonly"]},{id:1583,name:"defaultTextureFilter",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L126",comment:"Texture's minFilter to use when there is no specified one in this loader's options or in textures' samplers",type:{name:"number"},tags:["readonly"]},{id:1571,name:"gltf",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L64",comment:"Gltf object which will be filled with the data from the Gltf file",type:{name:"Gltf",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L76"},tags:[]},{id:1574,name:"gltfIO",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L79",comment:"Implementation of IOInterface made for GLTFs",type:{name:"IOInterface",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/IOInterface.ts#L7"},tags:[]}],accessors:[],methods:[{id:1603,name:"_createElement",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L244",comment:"Create a Gltf element from its raw data, with extension handling if needed.",tags:[],type:{name:"PromiseElementForProperty",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L133",data:{arguments:[{name:"P"}]}},params:[{id:1606,name:"data",type:{name:"P"},tags:[],comment:"Element data coming from the .gltf file"}],typeParams:[{id:1605,name:"P",type:{name:"Property",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L66",parent:{kind:"Namespace",name:"Gltf2"}},tags:[]}]},{id:1607,name:"_createElementInstance",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L255",comment:`Create a Gltf element from its raw data, passing it through all the loader's extensions.
If no extension handles this specific element, a basic corresponding element will be created.`,tags:[],type:{name:"PromiseElementForProperty",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L133",data:{arguments:[{name:"P"}]}},params:[{id:1610,name:"data",type:{name:"P"},tags:[],comment:"Element data coming from the .gltf file"}],typeParams:[{id:1609,name:"P",type:{name:"Property",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L66",parent:{kind:"Namespace",name:"Gltf2"}},tags:[]}]},{id:1611,name:"_extensionsAccept",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L271",comment:"Some extensions may want to modify the element after it has been created, this method will call all the extensions that want to do so.",tags:[],type:{name:"PromiseElementForProperty",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L133",data:{arguments:[{name:"P"}]}},params:[{id:1614,name:"data",type:{name:"P"},tags:[],comment:"Element data coming from the .gltf file"},{id:1615,name:"element",type:{listType:"union",list:[{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"Accessor",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L375"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"AccessorSparse",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparse.ts#L16"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"AccessorSparseIndices",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparseIndices.ts#L12"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"AccessorSparseValues",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparseValues.ts#L12"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"Animation",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Animation.ts#L16"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"AnimationChannel",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationChannel.ts#L58"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"AnimationSampler",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationSampler.ts#L367"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"Asset",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Asset.ts#L11"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"Buffer",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Buffer.ts#L15"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"BufferView",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/BufferView.ts#L25"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"Camera",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Camera.ts#L23"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"Image",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Image.ts#L55"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"IMaterial",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L46"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"Mesh",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Mesh.ts#L14"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"Node",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Node.ts#L18"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"NormalTextureInfo",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/NormalTextureInfo.ts#L12"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"OcclusionTextureInfo",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/OcclusionTextureInfo.ts#L14"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"Primitive",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L149"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"Sampler",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Sampler.ts#L16"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"Scene",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Scene.ts#L12"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"Skin",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Skin.ts#L18"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"Texture",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Texture.ts#L20"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"TextureInfo",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/TextureInfo.ts#L92"}]}}]},tags:[],comment:"Corresponding element already created"}],typeParams:[{id:1613,name:"P",type:{name:"Property",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L66",parent:{kind:"Namespace",name:"Gltf2"}},tags:[]}]},{id:1622,name:"_getElementHolder",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L310",comment:"Get the array of elements of a given type. If the array doesn't exist, it will be created.",tags:["private"],type:{name:"Promise",data:{arguments:[{listType:"union",list:[{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"}]}]},isArray:!0},params:[{id:1625,name:"type",type:{name:"T"},tags:[],comment:"Type of elements to get"}],typeParams:[{id:1624,name:"T",type:{name:"GltfTypes",lib:"nanogl-gltf",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/GltfTypes.ts#L5"},tags:[]}]},{id:1616,name:"_loadElement",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L288",comment:"Load an element from its data, if the element is already loaded it will be returned directly.",tags:[],type:{name:"PromiseElementForProperty",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L133",data:{arguments:[{name:"P"}]}},params:[{id:1619,name:"data",type:{name:"P"},tags:[],comment:"Data to load"}],typeParams:[{id:1618,name:"P",type:{name:"Property",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L66",parent:{kind:"Namespace",name:"Gltf2"}},tags:[]}]},{id:1633,name:"_loadElements",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L355",comment:"Load multiple elements from their data",tags:["private"],type:{name:"Promise",data:{arguments:[{name:"void"}]}},params:[{id:1636,name:"dataList",type:{name:"T",isArray:!0},tags:["optional"],comment:"Array of elements to load",optional:!0}],typeParams:[{id:1635,name:"T",type:{name:"Property",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L66",parent:{kind:"Namespace",name:"Gltf2"}},tags:[]}]},{id:1626,name:"getElement",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L324",comment:"Get an element of a given type and index. If the element doesn't exist, it will be created by retrieving its data from the Gltf data file.",tags:[],type:{name:"Promise",data:{arguments:[{listType:"union",list:[{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"}]}]}},params:[{id:1629,name:"type",type:{name:"T"},tags:[],comment:"Element's type"},{id:1630,name:"index",type:{name:"number"},tags:[],comment:"Element's index"}],typeParams:[{id:1628,name:"T",type:{name:"GltfTypes",lib:"nanogl-gltf",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/GltfTypes.ts#L5"},tags:[]}]},{id:1584,name:"load",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L157",comment:"Load and return the gltf file",tags:[],type:{name:"Promise",data:{arguments:[{name:"Gltf",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L76"}]}},typeParams:[]},{id:1595,name:"loadBufferUri",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L218",comment:"Load a buffer from an URI, if no URI is provided the _glbData buffer will be returned",tags:[],type:{name:"Promise",data:{arguments:[{name:"ArrayBuffer"}]}},params:[{id:1597,name:"uri",type:{name:"string"},tags:["optional"],comment:"URI to load",optional:!0}],typeParams:[]},{id:1620,name:"loadDefaultMaterial",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L302",comment:"Provide a default material if needed. Used for Primitives that don't have a material.",tags:[],type:{name:"Promise",data:{arguments:[{name:"IMaterial",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L46"}]}},typeParams:[]},{id:1631,name:"parseAll",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L336",comment:"Parse all prepared elements of the Gltf data file, create them and add them to the Gltf object",tags:[],type:{name:"Promise",data:{arguments:[{name:"void"}]}},typeParams:[]},{id:1598,name:"parseCommonGltfProperty",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L231",comment:"If element has no name or extras, give it the ones from the data",tags:[],type:{name:"void"},params:[{id:1601,name:"data",type:{name:"P"},tags:[],comment:"Data to add"},{id:1602,name:"element",type:{listType:"union",list:[{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"Accessor",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L375"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"AccessorSparse",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparse.ts#L16"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"AccessorSparseIndices",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparseIndices.ts#L12"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"AccessorSparseValues",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparseValues.ts#L12"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"Animation",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Animation.ts#L16"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"AnimationChannel",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationChannel.ts#L58"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"AnimationSampler",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationSampler.ts#L367"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"Asset",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Asset.ts#L11"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"Buffer",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Buffer.ts#L15"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"BufferView",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/BufferView.ts#L25"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"Camera",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Camera.ts#L23"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"Image",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Image.ts#L55"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"IMaterial",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L46"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"Mesh",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Mesh.ts#L14"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"Node",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Node.ts#L18"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"NormalTextureInfo",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/NormalTextureInfo.ts#L12"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"OcclusionTextureInfo",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/OcclusionTextureInfo.ts#L14"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"Primitive",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L149"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"Sampler",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Sampler.ts#L16"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"Scene",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Scene.ts#L12"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"Skin",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Skin.ts#L18"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"Texture",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Texture.ts#L20"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"TextureInfo",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/TextureInfo.ts#L92"}]}}]},tags:[],comment:"Element to add data on"}],typeParams:[{id:1600,name:"P",type:{name:"Property",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L66",parent:{kind:"Namespace",name:"Gltf2"}},tags:[]}]},{id:1639,name:"prepareGltfDatas",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L384",comment:"Parse the Gltf data and prepare it for loading",tags:[],type:{name:"void"},params:[{id:1641,name:"gltfData",type:{name:"IGLTF",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L898",parent:{kind:"Namespace",name:"Gltf2"}},tags:[],comment:"Gltf data to parse"}],typeParams:[]},{id:1642,name:"prepareGltfProperties",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L447",comment:"Prepare multiple Gltf properties for loading, having the same type and parent",tags:[],type:{name:"void"},params:[{id:1644,name:"elementsData",type:{name:"Property",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L66",parent:{kind:"Namespace",name:"Gltf2"},isArray:!0},tags:[],comment:"Elements to prepare"},{id:1645,name:"type",type:{name:"GltfTypes",lib:"nanogl-gltf",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/GltfTypes.ts#L5"},tags:[],comment:"Elements' type"},{id:1646,name:"parent",type:{name:"Property",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L66",parent:{kind:"Namespace",name:"Gltf2"}},tags:[],comment:"Elements' parent"}],typeParams:[]},{id:1652,name:"prepareGltfProperty",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L479",comment:"Prepare Gltf property for loading by adding him a uuid, a type, an index and a parent",tags:[],type:{name:"void"},params:[{id:1654,name:"element",type:{name:"Property",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L66",parent:{kind:"Namespace",name:"Gltf2"}},tags:[],comment:"Element to prepare"},{id:1655,name:"type",type:{name:"GltfTypes",lib:"nanogl-gltf",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/GltfTypes.ts#L5"},tags:[],comment:"Element's type"},{id:1656,name:"index",type:{name:"number"},tags:[],comment:"Element's index"},{id:1657,name:"parent",type:{name:"Property",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L66",parent:{kind:"Namespace",name:"Gltf2"}},tags:[],comment:"Element's parent"}],typeParams:[]},{id:1647,name:"prepareGltfRootProperties",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L462",comment:`Prepare multiple Gltf root properties for loading, having the same type and parent.
A root property is a property that doesn't have a parent in the Gltf data.`,tags:[],type:{name:"void"},params:[{id:1649,name:"elementsData",type:{name:"Property",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L66",parent:{kind:"Namespace",name:"Gltf2"},isArray:!0},tags:[],comment:"Elements to prepare"},{id:1650,name:"type",type:{name:"GltfTypes",lib:"nanogl-gltf",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/GltfTypes.ts#L5"},tags:[],comment:"Elements' type"},{id:1651,name:"parent",type:{name:"Property",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L66",parent:{kind:"Namespace",name:"Gltf2"}},tags:[],comment:"Elements' parent"}],typeParams:[]},{id:1637,name:"resolveElements",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L365",comment:"Wait for all pending elements creation to complete and register them in Gltf object",tags:[],type:{name:"Promise",data:{arguments:[{name:"void"}]}},typeParams:[]},{id:1592,name:"resolveUri",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L208",comment:"Resolve an absolute file path relative to this loader base directory",tags:[],type:{name:"string"},params:[{id:1594,name:"uri",type:{name:"string"},tags:[],comment:"URI to resolve"}],typeParams:[]},{id:1586,name:"unpack",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L170",comment:`Parse the buffer then prepare it for loading by adding uuids, types and indexes
If the buffer represents a GLTF file (plain JSON), il will be parsed directly.
If the buffer represents a GLB file (binary), it will be first decoded, then parsed.`,tags:[],type:{name:"void"},params:[{id:1588,name:"buffer",type:{name:"ArrayBuffer"},tags:[],comment:"Buffer to unpack"}],typeParams:[]},{id:1589,name:"unpackGlb",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L186",comment:"Decode a buffer representing a binary GLB file, then parse it and prepare it for loading",tags:[],type:{name:"void"},params:[{id:1591,name:"buffer",type:{name:"ArrayBuffer"},tags:[],comment:"Buffer to unpack"}],typeParams:[]}],extends:null,implements:null},{id:611,name:"Image",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Image.ts#L55",comment:`The Image element represents a basic image, contains the image data, used to store textures.
Provides a method to setup a Texture2D with the image data, to be used in a WebGL context.`,tags:[],constructors:[{id:612,name:"Image",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Image.ts#L55",tags:[],type:{name:"Image",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Image.ts#L55"},typeParams:[]}],properties:[{id:620,name:"bufferView",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Image.ts#L80",comment:"Associated BufferView element containing the image data, if provided",type:{name:"BufferView",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/BufferView.ts#L25"},tags:["optional"]},{id:616,name:"extras",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Image.ts#L59",comment:"Extras of this element (custom additional data that can be added to every gltf property)",type:{name:"any"},tags:[]},{id:614,name:"gltftype",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Image.ts#L57",comment:"Type of this element",defaultValue:"GltfTypes.IMAGE",type:{name:"IMAGE",lib:"nanogl-gltf",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/GltfTypes.ts#L18",parent:{kind:"Enumeration",name:"GltfTypes"}},tags:["readonly"]},{id:619,name:"mimeType",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Image.ts#L75",comment:"Image's mimeType (PNG or JPEG)",type:{name:"ImageMimeType",lib:"nanogl-gltf",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L207",parent:{kind:"Namespace",name:"Gltf2"}},tags:["optional"]},{id:615,name:"name",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Image.ts#L58",comment:"Name of this element",type:{name:"string"},tags:[]},{id:618,name:"resolvedUri",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Image.ts#L70",comment:"Absolute path to the image data, used for file fetching",type:{name:"string"},tags:["optional"]},{id:621,name:"texImageSource",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Image.ts#L86",comment:"Image data, ready to be used by a Texture",type:{name:"TexImageSource"},tags:[]},{id:617,name:"uri",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Image.ts#L65",comment:"URI to the image data, or base64-encoded data URI",type:{name:"string"},tags:["optional"]}],accessors:[{id:622,name:"hasAlpha",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Image.ts#L92",getter:{name:"get hasAlpha",comment:"Check if the mimeType is not JPEG, used for texture allocation",tags:[],type:{name:"boolean"},typeParams:[]}}],methods:[{id:628,name:"loadImage",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Image.ts#L136",comment:`Load the image data and stores it in the texImageSource attribute.

Is async as it needs to wait for the image to be loaded by the GLTFLoader.`,tags:["protected"],type:{name:"Promise",data:{arguments:[{name:"void"}]}},params:[{id:630,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[],comment:"GLTFLoader to use for loading"}],typeParams:[]},{id:631,name:"loadImageBlob",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Image.ts#L149",comment:`Load the image data from the uri (external image path or base64-encoded data) or from the provided BufferView,
and return it as a Blob.

Is async as it needs to wait for the image to be fetched (in case it don't use a BufferView).`,tags:["protected"],type:{name:"Promise",data:{arguments:[{name:"Blob"}]}},params:[{id:633,name:"abortSignal",type:{name:"AbortSignalLike"},tags:[],comment:"Abort signal for cancellation"}],typeParams:[]},{id:624,name:"parse",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Image.ts#L105",comment:`Parse the Image data, and load the image, storing it in the texImageSource attribute.
If a BufferView is provided, the image data is loaded from it, otherwise it is loaded from the uri.

Is async as it needs to wait for the image to be loaded by the GLTFLoader.`,tags:[],type:{name:"Promise",data:{arguments:[{name:"any"}]}},params:[{id:626,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[],comment:"GLTFLoader to use"},{id:627,name:"data",type:{name:"IImage",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L52",parent:{kind:"Namespace",name:"Gltf2"}},tags:[],comment:"Data to parse"}],typeParams:[]},{id:641,name:"resizeToPOT",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Image.ts#L211",comment:`Resize the provided image to the nearest Power Of Two size.

Is async as it can need to wait for createImageBitmap.`,tags:[],type:{name:"Promise",data:{arguments:[{name:"TexImageSource"}]}},params:[{id:643,name:"source",type:{name:"TexImageSource"},tags:[],comment:"Image to resize"},{id:644,name:"gl",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[],comment:"GL context, unused here"}],typeParams:[]},{id:634,name:"setupTexture",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Image.ts#L180",comment:`Setup the provided Texture2D with the image data, with provided wrap and filter modes, by binding it to the GPU.
Called by the Texture element during allocation.

Is async as it can need to wait for the image to be resized to a POT (Power Of Two) texture.`,tags:[],type:{name:"Promise",data:{arguments:[{name:"void"}]}},params:[{id:636,name:"texture",type:{name:"Texture2D",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-2d.ts#L9"},tags:[],comment:"Texture to setup"},{id:637,name:"wrapS",type:{name:"number"},tags:[],comment:"Horizontal texture wrap"},{id:638,name:"wrapT",type:{name:"number"},tags:[],comment:"Vertical texture wrap"},{id:639,name:"minFilter",type:{name:"number"},tags:[],comment:"Minification filter"},{id:640,name:"magFilter",type:{name:"number"},tags:[],comment:"Magnification filter"}],typeParams:[]}],extends:null,implements:{name:"IElement",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L34"}},{id:1214,name:"KHR_draco_mesh_compression",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_draco_mesh_compression/index.ts#L74",comment:`The implementation of an extension factory.
Passing by factories instead of direct instances allow to pass additional parameters to the extension and keep the extension instance simple.`,tags:[],constructors:[{id:1216,name:"KHR_draco_mesh_compression",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_draco_mesh_compression/index.ts#L74",tags:[],type:{name:"KHR_draco_mesh_compression",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_draco_mesh_compression/index.ts#L74"},typeParams:[]}],properties:[{id:1218,name:"name",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_draco_mesh_compression/index.ts#L75",defaultValue:"EXT_ID",type:{name:"string"},tags:["readonly"]},{id:1215,name:"dracoDecoder",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_draco_mesh_compression/index.ts#L77",type:{name:"any"},tags:["static"]}],accessors:[],methods:[{id:1219,name:"createInstance",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_draco_mesh_compression/index.ts#L82",tags:[],type:{name:"IExtensionInstance",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/IExtension.ts#L29"},params:[{id:1221,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[]}],typeParams:[]}],extends:null,implements:{name:"IExtensionFactory",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/IExtension.ts#L45"}},{id:1309,name:"KHR_materials_pbrSpecularGlossiness",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_materials_pbrSpecularGlossiness/index.ts#L45",comment:`The implementation of an extension factory.
Passing by factories instead of direct instances allow to pass additional parameters to the extension and keep the extension instance simple.`,tags:[],constructors:[{id:1310,name:"KHR_materials_pbrSpecularGlossiness",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_materials_pbrSpecularGlossiness/index.ts#L45",tags:[],type:{name:"KHR_materials_pbrSpecularGlossiness",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_materials_pbrSpecularGlossiness/index.ts#L45"},typeParams:[]}],properties:[{id:1312,name:"name",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_materials_pbrSpecularGlossiness/index.ts#L46",defaultValue:"EXT_ID",type:{name:"string"},tags:["readonly"]}],accessors:[],methods:[{id:1313,name:"createInstance",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_materials_pbrSpecularGlossiness/index.ts#L47",tags:[],type:{name:"IExtensionInstance",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/IExtension.ts#L29"},params:[{id:1315,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[]}],typeParams:[]}],extends:null,implements:{name:"IExtensionFactory",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/IExtension.ts#L45"}},{id:1412,name:"KHR_texture_basisu",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/index.ts#L167",comment:`The implementation of an extension factory.
Passing by factories instead of direct instances allow to pass additional parameters to the extension and keep the extension instance simple.`,tags:[],constructors:[{id:1413,name:"KHR_texture_basisu",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/index.ts#L170",tags:[],type:{name:"KHR_texture_basisu",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/index.ts#L167"},params:[{id:1415,name:"decoder",type:{name:"IBasisDecoder",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/basis.types.ts#L45"},tags:[]}],typeParams:[]}],properties:[{id:1417,name:"decoder",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/index.ts#L170",type:{name:"IBasisDecoder",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/basis.types.ts#L45"},tags:["readonly"]},{id:1416,name:"name",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/index.ts#L168",defaultValue:"EXT_ID",type:{name:"string"},tags:["readonly"]}],accessors:[],methods:[{id:1418,name:"createInstance",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/index.ts#L173",tags:[],type:{name:"IExtensionInstance",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/IExtension.ts#L29"},params:[{id:1420,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[]}],typeParams:[]}],extends:null,implements:{name:"IExtensionFactory",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/IExtension.ts#L45"}},{id:1097,name:"KHR_texture_transform",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/EXT_texture_webp/index.ts#L50",comment:`The implementation of an extension factory.
Passing by factories instead of direct instances allow to pass additional parameters to the extension and keep the extension instance simple.`,tags:[],constructors:[{id:1098,name:"KHR_texture_transform",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/EXT_texture_webp/index.ts#L50",tags:[],type:{name:"KHR_texture_transform",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/EXT_texture_webp/index.ts#L50"},typeParams:[]}],properties:[{id:1100,name:"name",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/EXT_texture_webp/index.ts#L51",defaultValue:"EXT_ID",type:{name:"string"},tags:["readonly"]}],accessors:[],methods:[{id:1101,name:"createInstance",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/EXT_texture_webp/index.ts#L52",tags:[],type:{name:"IExtensionInstance",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/IExtension.ts#L29"},params:[{id:1103,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[]}],typeParams:[]}],extends:null,implements:{name:"IExtensionFactory",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/IExtension.ts#L45"}},{id:1238,name:"KHR_texture_transform",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_lights_punctual/index.ts#L209",comment:`The implementation of an extension factory.
Passing by factories instead of direct instances allow to pass additional parameters to the extension and keep the extension instance simple.`,tags:[],constructors:[{id:1239,name:"KHR_texture_transform",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_lights_punctual/index.ts#L209",tags:[],type:{name:"KHR_texture_transform",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_lights_punctual/index.ts#L209"},typeParams:[]}],properties:[{id:1241,name:"name",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_lights_punctual/index.ts#L210",defaultValue:"EXT_ID",type:{name:"string"},tags:["readonly"]}],accessors:[],methods:[{id:1242,name:"createInstance",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_lights_punctual/index.ts#L211",tags:[],type:{name:"IExtensionInstance",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/IExtension.ts#L29"},params:[{id:1244,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[]}],typeParams:[]}],extends:null,implements:{name:"IExtensionFactory",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/IExtension.ts#L45"}},{id:1357,name:"KHR_texture_transform",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_materials_unlit/index.ts#L46",comment:`The implementation of an extension factory.
Passing by factories instead of direct instances allow to pass additional parameters to the extension and keep the extension instance simple.`,tags:[],constructors:[{id:1358,name:"KHR_texture_transform",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_materials_unlit/index.ts#L46",tags:[],type:{name:"KHR_texture_transform",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_materials_unlit/index.ts#L46"},typeParams:[]}],properties:[{id:1360,name:"name",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_materials_unlit/index.ts#L47",defaultValue:"EXT_ID",type:{name:"string"},tags:["readonly"]}],accessors:[],methods:[{id:1361,name:"createInstance",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_materials_unlit/index.ts#L48",tags:[],type:{name:"IExtensionInstance",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/IExtension.ts#L29"},params:[{id:1363,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[]}],typeParams:[]}],extends:null,implements:{name:"IExtensionFactory",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/IExtension.ts#L45"}},{id:1365,name:"KHR_texture_transform",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_mesh_quantization/index.ts#L27",comment:`The implementation of an extension factory.
Passing by factories instead of direct instances allow to pass additional parameters to the extension and keep the extension instance simple.`,tags:[],constructors:[{id:1366,name:"KHR_texture_transform",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_mesh_quantization/index.ts#L27",tags:[],type:{name:"KHR_texture_transform",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_mesh_quantization/index.ts#L27"},typeParams:[]}],properties:[{id:1368,name:"name",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_mesh_quantization/index.ts#L28",defaultValue:"EXT_ID",type:{name:"string"},tags:["readonly"]}],accessors:[],methods:[{id:1369,name:"createInstance",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_mesh_quantization/index.ts#L29",tags:[],type:{name:"IExtensionInstance",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/IExtension.ts#L29"},params:[{id:1371,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[]}],typeParams:[]}],extends:null,implements:{name:"IExtensionFactory",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/IExtension.ts#L45"}},{id:1422,name:"KHR_texture_transform",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_transform/index.ts#L118",comment:`The implementation of an extension factory.
Passing by factories instead of direct instances allow to pass additional parameters to the extension and keep the extension instance simple.`,tags:[],constructors:[{id:1423,name:"KHR_texture_transform",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_transform/index.ts#L118",tags:[],type:{name:"KHR_texture_transform",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_transform/index.ts#L118"},typeParams:[]}],properties:[{id:1425,name:"name",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_transform/index.ts#L119",defaultValue:"EXT_ID",type:{name:"string"},tags:["readonly"]}],accessors:[],methods:[{id:1426,name:"createInstance",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_transform/index.ts#L120",tags:[],type:{name:"IExtensionInstance",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/IExtension.ts#L29"},params:[{id:1428,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[]}],typeParams:[]}],extends:null,implements:{name:"IExtensionFactory",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/IExtension.ts#L45"}},{id:1223,name:"LightCollection",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_lights_punctual/index.ts#L75",tags:[],constructors:[{id:1224,name:"LightCollection",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_lights_punctual/index.ts#L81",tags:[],type:{name:"LightCollection",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_lights_punctual/index.ts#L75"},typeParams:[]}],properties:[{id:1227,name:"_items",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_lights_punctual/index.ts#L79",type:{name:"LightItemCollection",isArray:!0},tags:[]},{id:1226,name:"list",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_lights_punctual/index.ts#L77",type:{name:"Light",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L15",isArray:!0},tags:[]}],accessors:[],methods:[{id:1228,name:"addLight",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_lights_punctual/index.ts#L86",tags:[],type:{name:"void"},params:[{id:1230,name:"light",type:{name:"Light",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L15"},tags:[]},{id:1231,name:"name",type:{name:"string"},tags:[],defaultValue:"undefined"}],typeParams:[]},{id:1232,name:"getLightByName",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_lights_punctual/index.ts#L93",tags:[],type:{name:"Light",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L15"},params:[{id:1234,name:"name",type:{name:"string"},tags:[]}],typeParams:[]},{id:1235,name:"getLightsByName",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_lights_punctual/index.ts#L104",tags:[],type:{name:"Light",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L15",isArray:!0},params:[{id:1237,name:"name",type:{name:"string"},tags:[]}],typeParams:[]}],extends:null,implements:null},{id:1510,name:"MMP_compressed_texture",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/index.ts#L56",comment:`The implementation of an extension factory.
Passing by factories instead of direct instances allow to pass additional parameters to the extension and keep the extension instance simple.`,tags:[],constructors:[{id:1511,name:"MMP_compressed_texture",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/index.ts#L56",tags:[],type:{name:"MMP_compressed_texture",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/index.ts#L56"},typeParams:[]}],properties:[{id:1513,name:"name",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/index.ts#L57",defaultValue:"EXT_ID",type:{name:"string"},tags:["readonly"]}],accessors:[],methods:[{id:1514,name:"createInstance",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/index.ts#L58",tags:[],type:{name:"IExtensionInstance",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/IExtension.ts#L29"},params:[{id:1516,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[]}],typeParams:[]}],extends:null,implements:{name:"IExtensionFactory",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/IExtension.ts#L45"}},{id:709,name:"Material",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L253",comment:"Basic PBR implementation of GltfBaseMaterial using a nanogl-pbr StandardPass",tags:[],constructors:[],properties:[],accessors:[],methods:[{id:712,name:"setupMaterials",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L259",comment:`Creates a StandardPass and attach emissive, normal and occlusion textures with samplers and their strength factors.
Also configure alpha rendering mode and PBR surface.`,tags:[],type:{name:"void"},typeParams:[]}],extends:[{name:"GltfBaseMaterial",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L63"}],implements:null},{id:1518,name:"MaterialOverrideExtension",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MaterialOverrideExtension.ts#L147",comment:`The implementation of an extension factory.
Passing by factories instead of direct instances allow to pass additional parameters to the extension and keep the extension instance simple.`,tags:[],constructors:[{id:1519,name:"MaterialOverrideExtension",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MaterialOverrideExtension.ts#L147",tags:[],type:{name:"MaterialOverrideExtension",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MaterialOverrideExtension.ts#L147"},typeParams:[]}],properties:[{id:1522,name:"materials",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MaterialOverrideExtension.ts#L152",type:{name:"Map",data:{arguments:[{name:"string"},{name:"MaterialOverrideFactory"}]}},tags:["readonly"]},{id:1521,name:"name",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MaterialOverrideExtension.ts#L150",defaultValue:"'material_override'",type:{name:"string"},tags:["readonly"]},{id:1523,name:"passes",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MaterialOverrideExtension.ts#L153",type:{name:"Map",data:{arguments:[{name:"string"},{name:"PassOverrideFactory"}]}},tags:["readonly"]}],accessors:[],methods:[{id:1532,name:"assertNotExist",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MaterialOverrideExtension.ts#L177",tags:["private"],type:{name:"void"},params:[{id:1534,name:"name",type:{name:"string"},tags:[]}],typeParams:[]},{id:1535,name:"createInstance",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MaterialOverrideExtension.ts#L182",tags:[],type:{name:"IExtensionInstance",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/IExtension.ts#L29"},params:[{id:1537,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[]}],typeParams:[]},{id:1524,name:"overrideMaterial",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MaterialOverrideExtension.ts#L161",comment:`Add Material Override
gltf material with the given name will be replaced by the one craete by th given factory`,tags:[],type:{name:"void"},params:[{id:1526,name:"name",type:{name:"string"},tags:[],comment:"the name of the gltf material to override, if empty string the given material will be used as default override"},{id:1527,name:"m",type:{name:"MaterialOverrideFactory"},tags:[]}],typeParams:[]},{id:1528,name:"overridePass",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MaterialOverrideExtension.ts#L172",comment:`Add Pass Override
the Color pass of the overideen material will be replaced by the given pass`,tags:[],type:{name:"void"},params:[{id:1530,name:"name",type:{name:"string"},tags:[],comment:"the name of the material to override, if empty string is given, the pass will be applied to all materials"},{id:1531,name:"p",type:{name:"PassOverrideFactory"},tags:[]}],typeParams:[]}],extends:null,implements:{name:"IExtensionFactory",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/IExtension.ts#L45"}},{id:749,name:"Mesh",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Mesh.ts#L14",comment:`The Mesh element represents an object to render, containing an array of Primitive elements,
each one is a geometry to render with a given material.`,tags:[],constructors:[{id:750,name:"Mesh",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Mesh.ts#L14",tags:[],type:{name:"Mesh",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Mesh.ts#L14"},typeParams:[]}],properties:[{id:754,name:"extras",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Mesh.ts#L18",comment:"Extras of this element (custom additional data that can be added to every gltf property)",type:{name:"any"},tags:[]},{id:752,name:"gltftype",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Mesh.ts#L16",comment:"Type of this element",defaultValue:"GltfTypes.MESH",type:{name:"MESH",lib:"nanogl-gltf",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/GltfTypes.ts#L20",parent:{kind:"Enumeration",name:"GltfTypes"}},tags:["readonly"]},{id:753,name:"name",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Mesh.ts#L17",comment:"Name of this element",type:{name:"string"},tags:[]},{id:755,name:"primitives",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Mesh.ts#L23",comment:"Array of Primitive elements, each one is a geometry to render",type:{name:"Primitive",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L149",isArray:!0},tags:[]},{id:756,name:"weights",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Mesh.ts#L28",comment:"Array of weights for morph targets, if this mesh has morph targets",type:{name:"Float32Array"},tags:["optional"]}],accessors:[],methods:[{id:757,name:"parse",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Mesh.ts#L38",comment:`Parse the Mesh data, fill the primitives array with the Primitives elements created by the GLTFLoader, and the weights array if this Mesh has morph targets.

Is async as it needs to wait for all the Primitives to be created.`,tags:[],type:{name:"Promise",data:{arguments:[{name:"any"}]}},params:[{id:759,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[],comment:"GLTFLoader to use"},{id:760,name:"data",type:{name:"IMesh",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L54",parent:{kind:"Namespace",name:"Gltf2"}},tags:[],comment:"Data to parse"}],typeParams:[]}],extends:null,implements:{name:"IElement",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L34"}},{id:1828,name:"MeshRenderer",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/renderer/MeshRenderer.ts#L31",tags:[],constructors:[{id:1829,name:"MeshRenderer",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/renderer/MeshRenderer.ts#L48",tags:[],type:{name:"MeshRenderer",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/renderer/MeshRenderer.ts#L31"},params:[{id:1831,name:"gtlf",type:{name:"Gltf",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L76"},tags:[]},{id:1832,name:"node",type:{name:"Node",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Node.ts#L18"},tags:[]}],typeParams:[]}],properties:[{id:1836,name:"_morphDeformers",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/renderer/MeshRenderer.ts#L38",type:{name:"Map",data:{arguments:[{name:"Primitive",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L149"},{name:"MorphDeformer",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MorphDeformer.ts#L30"}]}},tags:["private"]},{id:1835,name:"_skinDeformers",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/renderer/MeshRenderer.ts#L37",type:{name:"Map",data:{arguments:[{name:"Primitive",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L149"},{name:"SkinDeformer",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/SkinDeformer.ts#L36"}]}},tags:["private"]},{id:1839,name:"bounds",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/renderer/MeshRenderer.ts#L44",type:{name:"Bounds",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Bounds.ts#L46"},tags:["readonly"]},{id:1838,name:"glconfig",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/renderer/MeshRenderer.ts#L42",type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},tags:["optional"]},{id:1837,name:"materials",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/renderer/MeshRenderer.ts#L40",defaultValue:"[]",type:{name:"Material",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Material.ts#L73",isArray:!0},tags:[]},{id:1834,name:"mesh",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/renderer/MeshRenderer.ts#L35",type:{name:"Mesh",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Mesh.ts#L14"},tags:["readonly"]},{id:1833,name:"node",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/renderer/MeshRenderer.ts#L34",type:{name:"Node",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Node.ts#L18"},tags:["readonly"]}],accessors:[],methods:[{id:1858,name:"computeBounds",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/renderer/MeshRenderer.ts#L167",tags:[],type:{name:"void"},typeParams:[]},{id:1843,name:"configureDeformers",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/renderer/MeshRenderer.ts#L71",tags:[],type:{name:"void"},params:[{id:1845,name:"material",type:{name:"Material",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Material.ts#L73"},tags:[]},{id:1846,name:"primitive",type:{name:"Primitive",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L149"},tags:[]}],typeParams:[]},{id:1847,name:"configureMorph",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/renderer/MeshRenderer.ts#L76",tags:[],type:{name:"void"},params:[{id:1849,name:"material",type:{name:"Material",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Material.ts#L73"},tags:[]},{id:1850,name:"primitive",type:{name:"Primitive",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L149"},tags:[]}],typeParams:[]},{id:1854,name:"configureSkin",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/renderer/MeshRenderer.ts#L121",tags:[],type:{name:"void"},params:[{id:1856,name:"material",type:{name:"Material",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Material.ts#L73"},tags:[]},{id:1857,name:"primitive",type:{name:"Primitive",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L149"},tags:[]}],typeParams:[]},{id:1867,name:"drawCall",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/renderer/MeshRenderer.ts#L234",tags:[],type:{name:"void"},params:[{id:1869,name:"camera",type:{name:"Camera",lib:"nanogl-camera",kind:"Class",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/index.ts#L18",data:{arguments:[{name:"ICameraLens",lib:"nanogl-camera",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ICameraLens.ts#L4"}]}},tags:[]},{id:1870,name:"prg",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[]},{id:1871,name:"sub",type:{name:"Primitive",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L149"},tags:[]}],typeParams:[]},{id:1860,name:"render",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/renderer/MeshRenderer.ts#L176",tags:[],type:{name:"void"},params:[{id:1862,name:"gl",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[]},{id:1863,name:"camera",type:{name:"Camera",lib:"nanogl-camera",kind:"Class",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/index.ts#L18",data:{arguments:[{name:"ICameraLens",lib:"nanogl-camera",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ICameraLens.ts#L4"}]}},tags:[]},{id:1864,name:"mask",type:{name:"number"},tags:[]},{id:1865,name:"passId",type:{name:"string"},tags:[]},{id:1866,name:"glconfig",type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},tags:["optional"],optional:!0}],typeParams:[]},{id:1840,name:"setupMaterials",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/renderer/MeshRenderer.ts#L62",comment:`for each primitives, create a material based on primitive's material pass
if skin or morph target are present, deformers are set on the created material
TODO: if no deformer, a single material instance can be shared between renderers`,tags:[],type:{name:"void"},params:[{id:1842,name:"gtlf",type:{name:"Gltf",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L76"},tags:[]}],typeParams:[]},{id:1851,name:"setupMorphWeights",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/renderer/MeshRenderer.ts#L113",tags:[],type:{name:"void"},params:[{id:1853,name:"morph",type:{name:"MorphDeformer",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MorphDeformer.ts#L30"},tags:[]}],typeParams:[]}],extends:null,implements:null},{id:762,name:"Node",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Node.ts#L18",comment:"The Node element is a node in the scene graph, it contains a transformation matrix or a translation/scale vectors & scale quaternion, and can be used to control a camera, a skin, a mesh, or children nodes.",tags:[],constructors:[],properties:[{id:768,name:"camera",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Node.ts#L27",comment:"If the node is used to control a camera, this is the Camera element",type:{name:"Camera",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Camera.ts#L23"},tags:["optional"]},{id:767,name:"extras",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Node.ts#L22",comment:"Extras of this element (custom additional data that can be added to every gltf property)",type:{name:"any"},tags:[]},{id:765,name:"gltftype",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Node.ts#L20",comment:"Type of this element",defaultValue:"GltfTypes.NODE",type:{name:"NODE",lib:"nanogl-gltf",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/GltfTypes.ts#L21",parent:{kind:"Enumeration",name:"GltfTypes"}},tags:["readonly"]},{id:770,name:"mesh",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Node.ts#L37",comment:"If the node is used to control a mesh, this is the Mesh element",type:{name:"Mesh",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Mesh.ts#L14"},tags:["optional"]},{id:766,name:"name",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Node.ts#L21",comment:"Name of this element",type:{name:"string"},tags:[]},{id:772,name:"renderable",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Node.ts#L47",comment:"If the node is used to control a mesh, this is the MeshRenderer element, used to render the mesh",type:{name:"MeshRenderer",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/renderer/MeshRenderer.ts#L31"},tags:["optional"]},{id:769,name:"skin",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Node.ts#L32",comment:"If the node is used to control a skin, this is the Skin element",type:{name:"Skin",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Skin.ts#L18"},tags:["optional"]},{id:771,name:"weights",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Node.ts#L42",comment:"If the node is used to control a mesh with morph targets, this is the weights array",defaultValue:"null",type:{name:"Float32Array"},tags:["optional"]}],accessors:[],methods:[{id:783,name:"allocateGl",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Node.ts#L154",comment:"If the Node has a Mesh, creates a MeshRenderer and stores it to the renderable attribute, getting the Node ready to be rendered.",tags:[],type:{name:"void"},params:[{id:785,name:"gltf",type:{name:"Gltf",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L76"},tags:[],comment:"The Gltf object which this Node belongs to"}],typeParams:[]},{id:777,name:"findChild",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Node.ts#L124",comment:`Find a child Node by name.

It will search only at the first level of children, not recursively. If you want to search recursively, use findDescendant.`,tags:[],type:{name:"Node",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Node.ts#L18"},params:[{id:779,name:"name",type:{name:"string"},tags:[],comment:"Name of the child Node to find"}],typeParams:[]},{id:780,name:"findDescendant",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Node.ts#L138",comment:`Find a descendant Node by name.

It will search recursively in all levels of the children nodes.`,tags:[],type:{name:"Node",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Node.ts#L18"},params:[{id:782,name:"name",type:{name:"string"},tags:[],comment:"Name of the descendant Node to find"}],typeParams:[]},{id:773,name:"parse",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Node.ts#L58",comment:`Parse the Node data, apply the transformation matrix or the translation/scale vectors & scale quaternion,
link the camera, skin and mesh elements and weights array if needed, and add children nodes to this node.

Is async as it needs to wait for all possible Camera, Skin, Mesh and children Nodes elements to be created.`,tags:[],type:{name:"Promise",data:{arguments:[{name:"void"}]}},params:[{id:775,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[],comment:"GLTFLoader to use"},{id:776,name:"data",type:{name:"INode",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L55",parent:{kind:"Namespace",name:"Gltf2"}},tags:[],comment:"Data to parse"}],typeParams:[]}],extends:[{name:"Node",lib:"nanogl-node",kind:"Class",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L18"}],implements:{name:"IElement",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L34"}},{id:844,name:"NormalTextureInfo",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/NormalTextureInfo.ts#L12",comment:"The NormalTextureInfo element is a BaseTextureInfo but with scale attribute to manage the normal vectors scale.",tags:[],constructors:[],properties:[{id:847,name:"gltftype",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/NormalTextureInfo.ts#L14",comment:"Type of this element",defaultValue:"GltfTypes.NORMAL_TEXTURE_INFO",type:{name:"NORMAL_TEXTURE_INFO",lib:"nanogl-gltf",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/GltfTypes.ts#L22",parent:{kind:"Enumeration",name:"GltfTypes"}},tags:["readonly"]},{id:848,name:"scale",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/NormalTextureInfo.ts#L19",comment:"Scalar multiplier applied to each normal vector of the texture. Default to 1",type:{name:"number"},tags:[]}],accessors:[],methods:[{id:849,name:"parse",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/NormalTextureInfo.ts#L21",comment:`Method called by the loader just after initialization to parse the data coming from the .gltf file and setup the element accordingly.

For example, if it's a Buffer it will load the buffer data from the given uri and store it, if it's a Camera it will create the corresponding lens.`,tags:[],type:{name:"Promise",data:{arguments:[{name:"any"}]}},params:[{id:851,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[],comment:"Element's loader, it can be used to load other elements (for example a Mesh could load its Primitives, a Material could load its textures)."},{id:852,name:"data",type:{name:"IMaterialNormalTextureInfo",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L56",parent:{kind:"Namespace",name:"Gltf2"}},tags:[],comment:"Data coming from the .gltf file"}],typeParams:[]}],extends:[{name:"BaseTextureInfo",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/TextureInfo.ts#L40"}],implements:{name:"IElement",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L34"}},{id:862,name:"OcclusionTextureInfo",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/OcclusionTextureInfo.ts#L14",comment:"The OcclusionTextureInfo element is a BaseTextureInfo but with strength attribute to manage the occlusion effect.",tags:[],constructors:[],properties:[{id:865,name:"gltftype",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/OcclusionTextureInfo.ts#L16",comment:"Type of this element",defaultValue:"GltfTypes.OCCLUSION_TEXTURE_INFO",type:{name:"OCCLUSION_TEXTURE_INFO",lib:"nanogl-gltf",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/GltfTypes.ts#L23",parent:{kind:"Enumeration",name:"GltfTypes"}},tags:["readonly"]},{id:866,name:"strength",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/OcclusionTextureInfo.ts#L21",comment:"Strength of the occlusion effect between 0 (no occlusion) and 1 (full occlusion). Default to 1",type:{name:"number"},tags:[]}],accessors:[],methods:[{id:867,name:"parse",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/OcclusionTextureInfo.ts#L23",comment:`Method called by the loader just after initialization to parse the data coming from the .gltf file and setup the element accordingly.

For example, if it's a Buffer it will load the buffer data from the given uri and store it, if it's a Camera it will create the corresponding lens.`,tags:[],type:{name:"Promise",data:{arguments:[{name:"any"}]}},params:[{id:869,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[],comment:"Element's loader, it can be used to load other elements (for example a Mesh could load its Primitives, a Material could load its textures)."},{id:870,name:"data",type:{name:"IMaterialOcclusionTextureInfo",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L57",parent:{kind:"Namespace",name:"Gltf2"}},tags:[],comment:"Data coming from the .gltf file"}],typeParams:[]}],extends:[{name:"BaseTextureInfo",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/TextureInfo.ts#L40"}],implements:{name:"IElement",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L34"}},{id:880,name:"PbrMetallicRoughness",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/PbrMetallicRoughness.ts#L18",comment:"The PbrMetallicRoughness element contains the base properties for a PBR material, using the metallic-roughness workflow.",tags:[],constructors:[{id:881,name:"PbrMetallicRoughness",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/PbrMetallicRoughness.ts#L18",tags:[],type:{name:"PbrMetallicRoughness",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/PbrMetallicRoughness.ts#L18"},typeParams:[]}],properties:[{id:883,name:"baseColorFactor",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/PbrMetallicRoughness.ts#L23",comment:"Factors applied to each color channel of the baseColorTexture. Default to [1, 1, 1, 1]",type:{name:"vec4"},tags:[]},{id:886,name:"baseColorTexture",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/PbrMetallicRoughness.ts#L38",comment:"Base color texture for the material",type:{name:"TextureInfo",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/TextureInfo.ts#L92"},tags:["optional"]},{id:884,name:"metallicFactor",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/PbrMetallicRoughness.ts#L28",comment:"Factor for the metalness of the material. Default to 1",type:{name:"number"},tags:[]},{id:887,name:"metallicRoughnessTexture",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/PbrMetallicRoughness.ts#L44",comment:`Metallic-roughness texture for the material. Metallic will be sampled from the B channel, roughness from the G channel.
If R or A channels are present, they will be ignored.`,type:{name:"TextureInfo",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/TextureInfo.ts#L92"},tags:["optional"]},{id:885,name:"roughnessFactor",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/PbrMetallicRoughness.ts#L33",comment:"Factor for the roughness of the material. Default to 1",type:{name:"number"},tags:[]}],accessors:[],methods:[{id:888,name:"parse",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/PbrMetallicRoughness.ts#L54",comment:`Parse the PbrMetallicRoughness data, filling the class properties.

Is async as it may need to wait for baseColorTexture and metallicRoughnessTexture to be loaded.`,tags:[],type:{name:"Promise",data:{arguments:[{name:"any"}]}},params:[{id:890,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[],comment:"GLTFLoader to use"},{id:891,name:"data",type:{name:"IMaterialPbrMetallicRoughness",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L680",parent:{kind:"Namespace",name:"Gltf2"}},tags:[],comment:"Data to parse"}],typeParams:[]},{id:892,name:"setupPass",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/PbrMetallicRoughness.ts#L76",comment:`Setup the PbrMetallicRoughness data on a nanogl-pbr StandardPass by attaching baseColor
and metallicRoughness textures with samplers and their strength factors.`,tags:[],type:{name:"void"},params:[{id:894,name:"pass",type:{name:"StandardPass",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L32",data:{arguments:[{name:"PbrSurface",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L14"}]}},tags:[],comment:"Pass to setup"}],typeParams:[]}],extends:null,implements:null},{id:1252,name:"PbrSpecularGlossiness",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_materials_pbrSpecularGlossiness/PbrSpecularGlossiness.ts#L42",tags:[],constructors:[{id:1253,name:"PbrSpecularGlossiness",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_materials_pbrSpecularGlossiness/PbrSpecularGlossiness.ts#L42",tags:[],type:{name:"PbrSpecularGlossiness",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_materials_pbrSpecularGlossiness/PbrSpecularGlossiness.ts#L42"},typeParams:[]}],properties:[{id:1255,name:"diffuseFactor",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_materials_pbrSpecularGlossiness/PbrSpecularGlossiness.ts#L45",type:{name:"vec4"},tags:[]},{id:1258,name:"diffuseTexture",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_materials_pbrSpecularGlossiness/PbrSpecularGlossiness.ts#L48",type:{name:"TextureInfo",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/TextureInfo.ts#L92"},tags:["optional"]},{id:1257,name:"glossinessFactor",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_materials_pbrSpecularGlossiness/PbrSpecularGlossiness.ts#L47",type:{name:"number"},tags:[]},{id:1256,name:"specularFactor",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_materials_pbrSpecularGlossiness/PbrSpecularGlossiness.ts#L46",type:{name:"vec3"},tags:[]},{id:1259,name:"specularGlossinessTexture",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_materials_pbrSpecularGlossiness/PbrSpecularGlossiness.ts#L49",type:{name:"TextureInfo",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/TextureInfo.ts#L92"},tags:["optional"]}],accessors:[],methods:[{id:1260,name:"parse",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_materials_pbrSpecularGlossiness/PbrSpecularGlossiness.ts#L53",tags:[],type:{name:"Promise",data:{arguments:[{name:"any"}]}},params:[{id:1262,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[]},{id:1263,name:"data",type:{name:"IMaterialPbrSpecularGlossiness",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_materials_pbrSpecularGlossiness/PbrSpecularGlossiness.ts#L18"},tags:[]}],typeParams:[]},{id:1264,name:"setupPass",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_materials_pbrSpecularGlossiness/PbrSpecularGlossiness.ts#L71",tags:[],type:{name:"void"},params:[{id:1266,name:"pass",type:{name:"StandardPass",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L32",data:{arguments:[{name:"PbrSurface",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L14"}]}},tags:[]}],typeParams:[]}],extends:null,implements:null},{id:1268,name:"PbrSpecularGlossinessMaterial",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_materials_pbrSpecularGlossiness/PbrSpecularGlossinessMaterial.ts#L7",comment:"Basic PBR implementation of GltfBaseMaterial using a nanogl-pbr StandardPass",tags:[],constructors:[],properties:[{id:1271,name:"pbrSpecularGlossiness",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_materials_pbrSpecularGlossiness/PbrSpecularGlossinessMaterial.ts#L9",type:{name:"PbrSpecularGlossiness",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_materials_pbrSpecularGlossiness/PbrSpecularGlossiness.ts#L42"},tags:[]}],accessors:[],methods:[{id:1272,name:"parsePbrInputsData",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_materials_pbrSpecularGlossiness/PbrSpecularGlossinessMaterial.ts#L11",comment:"Parse the PbrMetallicRoughness data, filling the pbrMetallicRoughness property with a new PbrMetallicRoughness element.",tags:[],type:{name:"Promise",data:{arguments:[{name:"any"}]}},params:[{id:1274,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[],comment:"GLTFLoader to use"},{id:1275,name:"data",type:{name:"IMaterial",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L53",parent:{kind:"Namespace",name:"Gltf2"}},tags:[],comment:"Data to parse"}],typeParams:[]}],extends:[{name:"Material",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L253"},{name:"GltfBaseMaterial",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L63"}],implements:null},{id:929,name:"Primitive",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L149",comment:`The Primitive element is a set of attributes defining a geometry to render with a given material and in a given mode.
It may be indexed, and may have morph targets.

It's the most basic renderable element, as a Scene is made of Meshes, and a Mesh is made of Primitives.`,tags:[],constructors:[{id:930,name:"Primitive",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L149",tags:[],type:{name:"Primitive",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L149"},typeParams:[]}],properties:[{id:941,name:"_currentVao",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L198",comment:"The current VAOs for this Primitive, used for rendering.",type:{name:"Vao",lib:"nanogl-vao",kind:"Class",source:"https://github.com/evanmartiin/nanogl-vao/blob/eea09d5/src/vao.ts#L48"},tags:[]},{id:940,name:"_vaoMap",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L193",comment:`The VAOs for this Primitive, one per Program used.
A VAO is a WebGLVertexArrayObject, containing the Primitive's attributes and indices, useful to bind/unbind them all at once.`,type:{name:"Map",data:{arguments:[{name:"string"},{name:"Vao",lib:"nanogl-vao",kind:"Class",source:"https://github.com/evanmartiin/nanogl-vao/blob/eea09d5/src/vao.ts#L48"}]}},tags:[]},{id:935,name:"attributes",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L161",comment:"The set of attributes for this Primitive (POSITION, NORMAL, TEXCOORD_0, ...)",type:{name:"AttributesSet",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L80"},tags:[]},{id:944,name:"bounds",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L214",comment:"The bounding box of this Primitive",type:{name:"Bounds",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Bounds.ts#L46"},tags:["readonly"]},{id:942,name:"buffers",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L203",comment:"The GLArrayBuffers for this Primitive's attributes (basic & morph target)",type:{name:"ArrayBuffer",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/arraybuffer.ts#L34",isArray:!0},tags:[]},{id:934,name:"extras",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L153",comment:"Extras of this element (custom additional data that can be added to every gltf property)",type:{name:"any"},tags:[]},{id:932,name:"gltftype",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L151",comment:"Type of this element",defaultValue:"GltfTypes.PRIMITIVE",type:{name:"PRIMITIVE",lib:"nanogl-gltf",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/GltfTypes.ts#L24",parent:{kind:"Enumeration",name:"GltfTypes"}},tags:["readonly"]},{id:943,name:"indexBuffer",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L208",comment:"The GLIndexBuffer for this Primitive's indices, if it is indexed.",type:{name:"IndexBuffer",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/indexbuffer.ts#L13"},tags:[]},{id:938,name:"indices",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L179",comment:`The indices to use to render this Primitive, if it is indexed.
If not indexed, the Primitive is rendered in vertices' order.`,defaultValue:"null",type:{name:"Accessor",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L375"},tags:[]},{id:937,name:"material",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L173",comment:`The Material to use for this Primitive.
If not defined, a default material with no effect will be used.`,defaultValue:"null",type:{name:"IMaterial",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L46"},tags:[]},{id:936,name:"mode",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L167",comment:`The rendering mode to use for this Primitive (TRIANGLES, LINES, POINTS, ...).
If not defined, the default mode is TRIANGLES.`,type:{name:"MeshPrimitiveMode",lib:"nanogl-gltf",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L237",parent:{kind:"Namespace",name:"Gltf2"}},tags:[]},{id:933,name:"name",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L152",comment:"Name of this element",type:{name:"string"},tags:[]},{id:939,name:"targets",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L184",comment:"The Morph Targets to use to render this Primitive, if it is morphed.",defaultValue:"null",type:{name:"AttributesSet",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L80",isArray:!0},tags:[]}],accessors:[],methods:[{id:945,name:"_calculaterBounds",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L220",comment:"Calculate the bounding box of this Primitive, based on its POSITION attribute.",tags:[],type:{name:"void"},typeParams:[]},{id:962,name:"allocateGl",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L310",comment:`Create the GLArrayBuffers for Primitive's attributes (basic & morph target) and GLIndexBuffer for Primitive's indices.
After that, the Primitive is ready to be rendered.`,tags:[],type:{name:"void"},params:[{id:964,name:"gl",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[],comment:"GL context to use"}],typeParams:[]},{id:982,name:"bindVao",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L401",comment:`Bind the VAO containing the Primitive's attributes and indices, ready to be drawn.
Called by the MeshRenderer just before rendering the Primitive.`,tags:[],type:{name:"void"},params:[{id:984,name:"prg",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[]}],typeParams:[]},{id:965,name:"createArrayBuffer",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L344",comment:"Create a GLArrayBuffer from an attribute (or a set of attributes sharing the same BufferView)",tags:[],type:{name:"ArrayBuffer",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/arraybuffer.ts#L34"},params:[{id:967,name:"gl",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[],comment:"GL context to use"},{id:968,name:"set",type:{name:"BufferInfos",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L53"},tags:[],comment:"Set of attributes to create the array buffer from"}],typeParams:[]},{id:969,name:"createAttributeDefinition",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L368",comment:"Create an attribute definition from an Attribute, to be used in a GLArrayBuffer",tags:[],type:{name:"object",data:{properties:[{name:"name",type:{name:"string"}},{name:"normalize",type:{name:"boolean"}},{name:"offset",type:{name:"number"}},{name:"size",type:{name:"number"}},{name:"stride",type:{name:"number"}},{name:"type",type:{name:"AccessorComponentType",lib:"nanogl-gltf",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L94",parent:{kind:"Namespace",name:"Gltf2"}}}]}},params:[{id:971,name:"attribute",type:{name:"Attribute",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L20"},tags:[],comment:"Attribute to create the definition from"}],typeParams:[]},{id:979,name:"getVao",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L384",comment:"Get the Primitive's VAO linked to a specific Program. If it doesn't exist yet, create it.",tags:[],type:{name:"Vao",lib:"nanogl-vao",kind:"Class",source:"https://github.com/evanmartiin/nanogl-vao/blob/eea09d5/src/vao.ts#L48"},params:[{id:981,name:"prg",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[]}],typeParams:[]},{id:947,name:"parse",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L234",comment:`Parse the Primitive data, load the attributes, indices, material and morph targets, and calculate the bounding box.

Is async as it needs to wait for the Accessors, and possible Material, to be created.`,tags:[],type:{name:"Promise",data:{arguments:[{name:"any"}]}},params:[{id:949,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[],comment:"GLTFLoader to use"},{id:950,name:"data",type:{name:"IMeshPrimitive",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L58",parent:{kind:"Namespace",name:"Gltf2"}},tags:[],comment:"Data to parse"}],typeParams:[]},{id:951,name:"parseAttributeSet",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L276",comment:`Parse the attributes of a Primitive and store it in an AttributesSet.

Is async as it needs to wait for the Attribute's Accessors to be loaded, or created if not yet loaded.`,tags:[],type:{name:"Promise",data:{arguments:[{name:"void"}]}},params:[{id:953,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[],comment:"GLTFLoader to use to load the Accessors"},{id:954,name:"aset",type:{name:"AttributesSet",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L80"},tags:[],comment:"AttributesSet to fill"},{id:955,name:"data",type:{name:"any"},tags:[],comment:"Data to parse"}],typeParams:[]},{id:956,name:"parseMorphAttributeSet",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L294",comment:`Parse the attributes of a Primitive's Morph Target and store it in an AttributesSet.

Is async as it needs to wait for the Attribute's Accessors to be loaded, or created if not yet loaded.`,tags:[],type:{name:"Promise",data:{arguments:[{name:"void"}]}},params:[{id:958,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[],comment:"GLTFLoader to use to load the Accessors"},{id:959,name:"aset",type:{name:"AttributesSet",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L80"},tags:[],comment:"AttributesSet to fill"},{id:960,name:"data",type:{name:"any"},tags:[],comment:"Data to parse"},{id:961,name:"morphIndex",type:{name:"number"},tags:[],comment:"Index of the Morph Target"}],typeParams:[]},{id:985,name:"render",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L410",comment:`Draw the Primitive, using its indices if it is indexed, or its vertices' order if it is not.
Called by the MeshRenderer.`,tags:[],type:{name:"void"},typeParams:[]},{id:987,name:"unbindVao",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L422",comment:`Unbind the Primitive's VAO. 
Called by the MeshRenderer just after rendering the Primitive.`,tags:[],type:{name:"void"},typeParams:[]}],extends:null,implements:{name:"IElement",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L34"}},{id:990,name:"Sampler",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Sampler.ts#L16",comment:"The Sampler element contains the texture filtering and wrapping properties, determining how a texture should be sampled.",tags:[],constructors:[{id:991,name:"Sampler",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Sampler.ts#L16",tags:[],type:{name:"Sampler",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Sampler.ts#L16"},typeParams:[]}],properties:[{id:995,name:"extras",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Sampler.ts#L20",comment:"Extras of this element (custom additional data that can be added to every gltf property)",type:{name:"any"},tags:[]},{id:993,name:"gltftype",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Sampler.ts#L18",comment:"Type of this element",defaultValue:"GltfTypes.SAMPLER",type:{name:"SAMPLER",lib:"nanogl-gltf",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/GltfTypes.ts#L25",parent:{kind:"Enumeration",name:"GltfTypes"}},tags:["readonly"]},{id:996,name:"magFilter",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Sampler.ts#L26",comment:"Texture magnification filter, how to interpolate texels when magnifying the texture (when zooming in)",type:{name:"number"},tags:["optional"]},{id:997,name:"minFilter",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Sampler.ts#L31",comment:"Texture minification filter, how to interpolate texels when minifying the texture (when zooming out)",type:{name:"number"},tags:["optional"]},{id:994,name:"name",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Sampler.ts#L19",comment:"Name of this element",type:{name:"string"},tags:[]},{id:998,name:"wrapS",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Sampler.ts#L36",comment:"Texture wrapping function for S coordinates (U in UV mapping, X in XY plane). Default to GL_REPEAT",type:{name:"number"},tags:[]},{id:999,name:"wrapT",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Sampler.ts#L41",comment:"Texture wrapping function for T coordinates (V in UV mapping, Y in XY plane). Default to GL_REPEAT",type:{name:"number"},tags:[]}],accessors:[],methods:[{id:1e3,name:"parse",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Sampler.ts#L49",comment:"Parse the Sampler data, fill the magFilter, minFilter, wrapS and wrapT properties.",tags:[],type:{name:"Promise",data:{arguments:[{name:"any"}]}},params:[{id:1002,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[],comment:"GLTFLoader to use, unused here"},{id:1003,name:"data",type:{name:"ISampler",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L59",parent:{kind:"Namespace",name:"Gltf2"}},tags:[],comment:"Data to parse"}],typeParams:[]}],extends:null,implements:{name:"IElement",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L34"}},{id:491,name:"SamplerEvaluator",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationSampler.ts#L317",comment:"A class providing a method to evaluate an AnimationSampler at a given time, using the proper interpolation algorithm.",tags:[],constructors:[{id:492,name:"SamplerEvaluator",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationSampler.ts#L339",tags:[],type:{name:"SamplerEvaluator",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationSampler.ts#L317"},params:[{id:494,name:"sampler",type:{name:"AnimationSampler",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationSampler.ts#L367"},tags:[],comment:"AnimationSampler to evaluate"},{id:495,name:"path",type:{name:"AnimationChannelTargetPath",lib:"nanogl-gltf",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L156",parent:{kind:"Namespace",name:"Gltf2"}},tags:[],comment:"Node's property to animate"},{id:496,name:"numElements",type:{name:"number"},tags:[],comment:"Number of element to animate (1 for translation, rotation and scale ; number of morph targets for weights)"}],typeParams:[]}],properties:[{id:499,name:"interpolator",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationSampler.ts#L332",comment:"Interpolator to use to evaluate the AnimationSampler, with an interpolation algorithm depending on the AnimationSampler interpolation property",type:{name:"Interpolator"},tags:[]},{id:498,name:"numElements",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationSampler.ts#L327",comment:"Number of element to animate (1 for translation, rotation and scale ; number of morph targets for weights)",type:{name:"number"},tags:[]},{id:497,name:"sampler",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationSampler.ts#L322",comment:"AnimationSampler to evaluate",type:{name:"AnimationSampler",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationSampler.ts#L367"},tags:[]}],accessors:[],methods:[{id:504,name:"createElementHolder",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationSampler.ts#L357",comment:"Create a TypedArray to store the result of the AnimationSampler output Accessor",tags:[],type:{name:"TypedArray",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/TypedArray.ts#L5"},typeParams:[]},{id:500,name:"evaluate",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationSampler.ts#L350",comment:"Evaluate the proper value at a given time depending on the interpolation algorithm, and store the result in the out TypedArray",tags:[],type:{name:"void"},params:[{id:502,name:"out",type:{name:"TypedArray",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/TypedArray.ts#L5"},tags:[],comment:"TypedArray to store the result"},{id:503,name:"t",type:{name:"number"},tags:[],comment:"Time to evaluate"}],typeParams:[]}],extends:null,implements:null},{id:1005,name:"Scene",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Scene.ts#L12",comment:"The Scene element is the root of the scene graph, it contains all the root nodes of the scene, which in turn contains all the children nodes and cover the whole scene to render.",tags:[],constructors:[{id:1006,name:"Scene",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Scene.ts#L12",tags:[],type:{name:"Scene",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Scene.ts#L12"},typeParams:[]}],properties:[{id:1010,name:"extras",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Scene.ts#L16",comment:"Extras of this element (custom additional data that can be added to every gltf property)",type:{name:"any"},tags:[]},{id:1008,name:"gltftype",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Scene.ts#L14",comment:"Type of this element",defaultValue:"GltfTypes.SCENE",type:{name:"SCENE",lib:"nanogl-gltf",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/GltfTypes.ts#L26",parent:{kind:"Enumeration",name:"GltfTypes"}},tags:["readonly"]},{id:1009,name:"name",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Scene.ts#L15",comment:"Name of this element",type:{name:"string"},tags:[]},{id:1011,name:"nodes",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Scene.ts#L21",comment:"Node element of each root nodes in the scene",type:{name:"Node",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Node.ts#L18",isArray:!0},tags:[]}],accessors:[],methods:[{id:1012,name:"parse",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Scene.ts#L31",comment:`Parse the Scene data, fill the nodes array with the Nodes elements created by the GLTFLoader.

Is async as it needs to wait for all the Nodes to be created.`,tags:[],type:{name:"Promise",data:{arguments:[{name:"void"}]}},params:[{id:1014,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[],comment:"GLTFLoader to use"},{id:1015,name:"data",type:{name:"IScene",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L60",parent:{kind:"Namespace",name:"Gltf2"}},tags:[],comment:"Data to parse"}],typeParams:[]},{id:1016,name:"updateNodes",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Scene.ts#L45",tags:[],type:{name:"void"},typeParams:[]}],extends:null,implements:{name:"IElement",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L34"}},{id:1019,name:"Skin",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Skin.ts#L18",comment:"The Skin element contains the joints nodes and inverse bind matrices used to animate a mesh.",tags:[],constructors:[{id:1020,name:"Skin",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Skin.ts#L18",tags:[],type:{name:"Skin",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Skin.ts#L18"},typeParams:[]}],properties:[{id:1024,name:"extras",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Skin.ts#L22",comment:"Extras of this element (custom additional data that can be added to every gltf property)",type:{name:"any"},tags:[]},{id:1022,name:"gltftype",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Skin.ts#L20",comment:"Type of this element",defaultValue:"GltfTypes.SKIN",type:{name:"SKIN",lib:"nanogl-gltf",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/GltfTypes.ts#L27",parent:{kind:"Enumeration",name:"GltfTypes"}},tags:["readonly"]},{id:1025,name:"inverseBindMatrices",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Skin.ts#L28",comment:"Array of inverse bind matrices, one for each joint",type:{name:"mat4",isArray:!0},tags:[]},{id:1027,name:"joints",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Skin.ts#L38",comment:"Array of all joints nodes",type:{name:"Node",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Node.ts#L18",isArray:!0},tags:[]},{id:1023,name:"name",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Skin.ts#L21",comment:"Name of this element",type:{name:"string"},tags:[]},{id:1026,name:"skeletonRoot",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Skin.ts#L33",comment:"Root node of the skeleton",type:{name:"Node",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Node.ts#L18"},tags:[]}],accessors:[],methods:[{id:1032,name:"computeJoints",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Skin.ts#L72",comment:"Compute the joints matrices, used to animate the skin.",tags:[],type:{name:"void"},params:[{id:1034,name:"skinnedNode",type:{name:"Node",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Node.ts#L18"},tags:[],comment:"Skinned node to compute the joints matrices for"},{id:1035,name:"jointMatrices",type:{name:"mat4",isArray:!0},tags:[],comment:"Joints matrices to compute"}],typeParams:[]},{id:1028,name:"parse",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Skin.ts#L49",comment:`Parse the Skin data.

Is async as it needs to wait for all the skeleton root and joints Nodes,
and the possible inverseBindMatrices Accessor to be created.`,tags:[],type:{name:"Promise",data:{arguments:[{name:"void"}]}},params:[{id:1030,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[],comment:"GLTFLoader to use"},{id:1031,name:"data",type:{name:"ISkin",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L61",parent:{kind:"Namespace",name:"Gltf2"}},tags:[],comment:"Data to parse"}],typeParams:[]}],extends:null,implements:{name:"IElement",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L34"}},{id:1037,name:"Texture",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Texture.ts#L20",comment:`The Texture element contains the image data and sampler used to sample the texture.
It also contains the nanogl Texture2D object, used to render the texture in a WebGL context.`,tags:[],constructors:[{id:1038,name:"Texture",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Texture.ts#L20",tags:[],type:{name:"Texture",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Texture.ts#L20"},typeParams:[]}],properties:[{id:1047,name:"_defaultTextureFilter",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Texture.ts#L51",comment:"Texture's minFilter to use when the sampler doesn't specify one",type:{name:"number"},tags:["private"]},{id:1046,name:"_glTextureDeferred",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Texture.ts#L46",comment:"Deferred object used to wait for the glTexture to be created",type:{name:"Deferred",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/lib/Deferred.ts#L5",data:{arguments:[{name:"Texture2D",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-2d.ts#L9"}]}},tags:["private"]},{id:1042,name:"extras",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Texture.ts#L24",comment:"Extras of this element (custom additional data that can be added to every gltf property)",type:{name:"any"},tags:[]},{id:1045,name:"glTexture",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Texture.ts#L40",comment:"nanogl Texture2D object, used to render the texture in a WebGL context, create by allocateGl()",type:{name:"Texture2D",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-2d.ts#L9"},tags:[]},{id:1040,name:"gltftype",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Texture.ts#L22",comment:"Type of this element",defaultValue:"GltfTypes.TEXTURE",type:{name:"TEXTURE",lib:"nanogl-gltf",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/GltfTypes.ts#L28",parent:{kind:"Enumeration",name:"GltfTypes"}},tags:["readonly"]},{id:1041,name:"name",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Texture.ts#L23",comment:"Name of this element",type:{name:"string"},tags:[]},{id:1043,name:"sampler",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Texture.ts#L30",comment:"Sampler element used to sample the texture",type:{name:"Sampler",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Sampler.ts#L16"},tags:[]},{id:1044,name:"source",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Texture.ts#L35",comment:"Image element used as the texture data",type:{name:"Image",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Image.ts#L55"},tags:[]}],accessors:[{id:1048,name:"glTexturePromise",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Texture.ts#L57",getter:{name:"get glTexturePromise",comment:"Promise that resolves when the glTexture is created, useful for classes that need to wait for the texture to be ready.",tags:[],type:{name:"Promise",data:{arguments:[{name:"Texture2D",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-2d.ts#L9"}]}},typeParams:[]}}],methods:[{id:1054,name:"allocateGl",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Texture.ts#L88",comment:`Setup the gl.TEXTURE_2D with minFilter, magFilter, wrapS and wrapT, depending on the sampler's options.
This allocates the texture memory and uploads the image data to the GPU so it can be used in a shader.`,tags:[],type:{name:"Promise",data:{arguments:[{name:"void"}]}},params:[{id:1056,name:"gl",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[],comment:"GL context"}],typeParams:[]},{id:1050,name:"parse",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Texture.ts#L69",comment:`Parse the Texture data, create the Sampler and Image elements

Is async as it needs to wait for the Sampler and Image to be created.`,tags:[],type:{name:"Promise",data:{arguments:[{name:"void"}]}},params:[{id:1052,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[],comment:"GLTFLoader to use"},{id:1053,name:"data",type:{name:"ITexture",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L62",parent:{kind:"Namespace",name:"Gltf2"}},tags:[],comment:"Data to parse"}],typeParams:[]}],extends:null,implements:{name:"IElement",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L34"}},{id:1483,name:"TextureCodec",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/TextureLoader.ts#L35",tags:[],constructors:[{id:1484,name:"TextureCodec",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/TextureLoader.ts#L42",tags:[],type:{name:"TextureCodec",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/TextureLoader.ts#L35"},params:[{id:1486,name:"parser",type:{name:"TextureDefinition",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/KTXParser.ts#L12"},tags:[]},{id:1487,name:"compressed",type:{name:"boolean"},tags:[]},{id:1488,name:"suffix",type:{name:"string"},tags:[]},{id:1489,name:"extension",type:{name:"number"},tags:[]}],typeParams:[]}],properties:[{id:1492,name:"compressed",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/TextureLoader.ts#L39",type:{name:"boolean"},tags:[]},{id:1493,name:"ext",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/TextureLoader.ts#L40",type:{name:"number"},tags:[]},{id:1490,name:"parser",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/TextureLoader.ts#L37",type:{name:"TextureDefinition",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/KTXParser.ts#L12"},tags:[]},{id:1491,name:"suffix",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/TextureLoader.ts#L38",type:{name:"string"},tags:[]}],accessors:[],methods:[{id:1497,name:"isSupported",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/TextureLoader.ts#L58",tags:[],type:{name:"boolean"},typeParams:[]},{id:1494,name:"transformPath",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/TextureLoader.ts#L53",tags:[],type:{name:"string"},params:[{id:1496,name:"basePath",type:{name:"string"},tags:[]}],typeParams:[]}],extends:null,implements:null},{id:1471,name:"TextureDefinition",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/KTXParser.ts#L12",tags:[],constructors:[{id:1472,name:"TextureDefinition",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/KTXParser.ts#L12",tags:[],type:{name:"TextureDefinition",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/KTXParser.ts#L12"},typeParams:[]}],properties:[{id:1478,name:"cubemap",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/KTXParser.ts#L18",type:{name:"boolean"},tags:[]},{id:1477,name:"format",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/KTXParser.ts#L17",type:{name:"number"},tags:[]},{id:1475,name:"height",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/KTXParser.ts#L15",type:{name:"number"},tags:[]},{id:1476,name:"surfaces",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/KTXParser.ts#L16",type:{name:"ArrayBufferView",isArray:!0},tags:[]},{id:1474,name:"width",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/KTXParser.ts#L14",type:{name:"number"},tags:[]}],accessors:[],methods:[{id:1479,name:"parse",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/KTXParser.ts#L26",tags:[],type:{name:"TextureDefinition",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/KTXParser.ts#L12"},params:[{id:1481,name:"source",type:{name:"ArrayBuffer"},tags:[]}],typeParams:[]}],extends:null,implements:null},{id:1079,name:"TextureInfo",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/TextureInfo.ts#L92",comment:"The TextureInfo element contains the texture and the texCoord to use to sample the texture.",tags:[],constructors:[],properties:[{id:1082,name:"gltftype",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/TextureInfo.ts#L93",comment:"Type of this element",defaultValue:"GltfTypes.TEXTURE_INFO",type:{name:"TEXTURE_INFO",lib:"nanogl-gltf",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/GltfTypes.ts#L29",parent:{kind:"Enumeration",name:"GltfTypes"}},tags:["readonly"]}],accessors:[],methods:[],extends:[{name:"BaseTextureInfo",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/TextureInfo.ts#L40"}],implements:{name:"IElement",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L34"}},{id:1499,name:"TextureLoader",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/TextureLoader.ts#L65",tags:[],constructors:[{id:1500,name:"TextureLoader",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/TextureLoader.ts#L74",tags:[],type:{name:"TextureLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/TextureLoader.ts#L65"},typeParams:[]}],properties:[{id:1502,name:"DXTCodec",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/TextureLoader.ts#L68",type:{name:"TextureCodec",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/TextureLoader.ts#L35"},tags:[]},{id:1504,name:"ETCCodec",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/TextureLoader.ts#L70",type:{name:"TextureCodec",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/TextureLoader.ts#L35"},tags:[]},{id:1503,name:"PVRCodec",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/TextureLoader.ts#L69",type:{name:"TextureCodec",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/TextureLoader.ts#L35"},tags:[]}],accessors:[],methods:[{id:1507,name:"getCodec",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/TextureLoader.ts#L107",tags:[],type:{name:"TextureCodec",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/TextureLoader.ts#L35"},typeParams:[]},{id:1505,name:"hasCodec",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/TextureLoader.ts#L99",tags:[],type:{name:"boolean"},typeParams:[]}],extends:null,implements:null},{id:1317,name:"UnlitMaterial",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_materials_unlit/UnlitMaterial.ts#L7",comment:"The GltfBaseMaterial element contains the base properties and methods for all Material classes coming from a glTF file",tags:[],constructors:[],properties:[],accessors:[],methods:[{id:1320,name:"setupMaterials",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_materials_unlit/UnlitMaterial.ts#L9",comment:"Abstract class to setup the nanogl-pbr MaterialPass (enable depth test, cullface, alphaMode, attach textures samplers and factors, ...)",tags:[],type:{name:"void"},typeParams:[]}],extends:[{name:"GltfBaseMaterial",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L63"}],implements:null},{id:1712,name:"WebImpl",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/web.ts#L50",comment:"Loader implementation for web usage",tags:[],constructors:[{id:1713,name:"WebImpl",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/web.ts#L50",tags:[],type:{name:"WebImpl",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/web.ts#L50"},typeParams:[]}],properties:[],accessors:[],methods:[{id:1718,name:"decodeDataURI",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/web.ts#L64",comment:"Decode a data URI and return the decoded data as an ArrayBuffer, will throw if not a data URI",tags:[],type:{name:"ArrayBuffer"},params:[{id:1720,name:"uri",type:{name:"string"},tags:[],comment:"URI to decode"}],typeParams:[]},{id:1728,name:"decodeUTF8",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/web.ts#L99",comment:"Decode an ArrayBuffer encoded as UTF-8",tags:[],type:{name:"string"},params:[{id:1730,name:"buffer",type:{name:"ArrayBuffer"},tags:[],comment:"ArrayBuffer to decode"},{id:1731,name:"offset",type:{name:"number"},tags:[],comment:"Offset in the ArrayBuffer to start decoding from",defaultValue:"0"},{id:1732,name:"length",type:{name:"number"},tags:[],comment:"Length of the ArrayBuffer to decode",defaultValue:"undefined"}],typeParams:[]},{id:1715,name:"isDataURI",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/web.ts#L56",comment:"Check if a URI starts with 'data:', meaning it's a base-64 encoded data",tags:[],type:{name:"boolean"},params:[{id:1717,name:"uri",type:{name:"string"},tags:[],comment:"URI to check"}],typeParams:[]},{id:1737,name:"loadBinaryResource",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/web.ts#L120",comment:"Load a resource and return it as an ArrayBuffer",tags:[],type:{name:"Promise",data:{arguments:[{name:"ArrayBuffer"}]}},params:[{id:1739,name:"path",type:{name:"string"},tags:[],comment:"Path to resource"},{id:1740,name:"abortSignal",type:{name:"AbortSignal"},tags:[],comment:"Abort signal if you want to be able to cancel the request at any time",defaultValue:"AbortSignal.none"}],typeParams:[]},{id:1746,name:"loadImage",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/web.ts#L145",comment:"Load an image from a URI",tags:[],type:{name:"Promise",data:{arguments:[{name:"TexImageSource"}]}},params:[{id:1748,name:"uri",type:{name:"string"},tags:[],comment:"Image URI"},{id:1749,name:"abortSignal",type:{name:"AbortSignal"},tags:[],comment:"Abort signal if you want to be able to cancel the request at any time",defaultValue:"AbortSignal.none"}],typeParams:[]},{id:1750,name:"loadImageBlob",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/web.ts#L157",comment:"Load a Blob as an image ready to be used as a texture",tags:[],type:{name:"Promise",data:{arguments:[{name:"TexImageSource"}]}},params:[{id:1752,name:"blob",type:{name:"Blob"},tags:[],comment:"Blob to load"},{id:1753,name:"abortSignal",type:{name:"AbortSignal"},tags:[],comment:"Abort signal if you want to be able to cancel the request at any time"}],typeParams:[]},{id:1741,name:"loadImageBuffer",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/web.ts#L135",comment:"Load an image from a Uint8Array",tags:[],type:{name:"Promise",data:{arguments:[{name:"TexImageSource"}]}},params:[{id:1743,name:"arrayView",type:{name:"Uint8Array"},tags:[],comment:"Uint8Array containing the image data"},{id:1744,name:"mimetype",type:{name:"string"},tags:[],comment:"Image mimetype (image/png, image/webp, ...)"},{id:1745,name:"abortSignal",type:{name:"AbortSignal"},tags:[],comment:"Abort signal if you want to be able to cancel the request at any time",defaultValue:"AbortSignal.none"}],typeParams:[]},{id:1733,name:"loadResource",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/web.ts#L109",comment:"Load a resource and return it as a string",tags:[],type:{name:"Promise",data:{arguments:[{name:"string"}]}},params:[{id:1735,name:"path",type:{name:"string"},tags:[],comment:"Path to resource"},{id:1736,name:"abortSignal",type:{name:"AbortSignal"},tags:[],comment:"Abort signal if you want to be able to cancel the request at any time",defaultValue:"AbortSignal.none"}],typeParams:[]},{id:1721,name:"resolveBaseDir",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/web.ts#L78",comment:"Get the base directory and filename of a file path",tags:[],type:{name:"string",isArray:!0},params:[{id:1723,name:"path",type:{name:"string"},tags:[],comment:"File path to resolve"}],typeParams:[]},{id:1724,name:"resolvePath",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/web.ts#L87",comment:"Get the absolute path of a file path relative to a base directory",tags:[],type:{name:"string"},params:[{id:1726,name:"path",type:{name:"string"},tags:[],comment:"File path to resolve"},{id:1727,name:"baseurl",type:{name:"string"},tags:[],comment:"Base directory to resolve from"}],typeParams:[]}],extends:null,implements:{name:"IOInterface",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/IOInterface.ts#L7"}}],functions:[{id:1824,name:"Decoder",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/lib/utf8-decoder.ts#L131",comment:"Decode a buffer encoded as UTF-8",tags:[],type:{name:"string"},params:[{id:1826,name:"view",type:{name:"Uint8Array"},tags:[],comment:"Buffer to decode"}],typeParams:[]},{id:111,name:"DefaultRenderConfig",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/IRenderConfig.ts#L14",comment:"Default render config defining opaque mask as 1 and blended mask as 2",tags:[],type:{name:"object",data:{properties:[{name:"blendedMask",type:{name:"number"}},{name:"opaqueMask",type:{name:"number"}}]}},typeParams:[]},{id:1812,name:"cancellablePromise",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/lib/cancellation.ts#L9",comment:"Inject an abort signal into a promise, so that it can be cancelled at any time",tags:[],type:{name:"Promise",data:{arguments:[{name:"T"}]}},params:[{id:1815,name:"p",type:{name:"Promise",data:{arguments:[{name:"T"}]}},tags:[],comment:"Promise to inject the abort signal into"},{id:1816,name:"signal",type:{name:"AbortSignalLike"},tags:[],comment:"Abort signal to inject"}],typeParams:[{id:1814,name:"T",tags:[]}]},{id:1820,name:"createNativeSignal",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/lib/cancellation.ts#L37",comment:`Create a native AbortSignal if possible, otherwise return undefined.
Native means that it will be created by native AbortController(), not by @azure/abort-controller.`,tags:[],type:{name:"AbortSignal"},params:[{id:1822,name:"signal",type:{name:"AbortSignalLike"},tags:[],comment:"AbortSignal to wrap"}],typeParams:[]},{id:602,name:"filterHasMipmap",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Image.ts#L23",comment:`Check if a minFilter mode needs mipmaps.
Returns false if the minFilter is GL_NEAREST or GL_LINEAR.`,tags:[],type:{name:"boolean"},params:[{id:604,name:"filter",type:{name:"number"},tags:[],comment:"Filtering mode to check"}],typeParams:[]},{id:139,name:"getArrayForDataType",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L58",comment:"Get the TypedArray constructor for the given component type",tags:[],type:{name:"TypedArrayConstructor",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/TypedArray.ts#L10"},params:[{id:141,name:"t",type:{name:"AccessorComponentType",lib:"nanogl-gltf",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L94",parent:{kind:"Namespace",name:"Gltf2"}},tags:[],comment:"Component type"}],typeParams:[]},{id:1817,name:"isAbortError",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/lib/cancellation.ts#L43",comment:"Check if an error is an AbortError",tags:[],type:{name:"boolean"},params:[{id:1819,name:"e",type:{name:"any"},tags:[],comment:"Event to check"}],typeParams:[]},{id:1786,name:"isAllOnes",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/lib/Utils.ts#L6",comment:"Check if all elements of an array are 1",tags:[],type:{name:"boolean"},params:[{id:1788,name:"a",type:{name:"ArrayLike",data:{arguments:[{name:"number"}]}},tags:[],comment:"Array to check"}],typeParams:[]},{id:1789,name:"isAllZeros",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/lib/Utils.ts#L17",comment:"Check if all elements of an array are 0",tags:[],type:{name:"boolean"},params:[{id:1791,name:"a",type:{name:"ArrayLike",data:{arguments:[{name:"number"}]}},tags:[],comment:"Array to check"}],typeParams:[]},{id:608,name:"isPowerOf2",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Image.ts#L40",comment:"Check if a number is a power of 2, useful for texture resize before GPU upload as GPUs usually prefer POT (Power Of Two) textures.",tags:[],type:{name:"boolean"},params:[{id:610,name:"n",type:{name:"number"},tags:[],comment:"Number to check"}],typeParams:[]},{id:1105,name:"webpSupport",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/EXT_texture_webp/webpSupport.ts#L38",comment:`Check if the browser supports WebP image format.
Returns true only if lossy, lossless, alpha and animated WebP are supported.`,tags:[],type:{name:"Promise",data:{arguments:[{name:"boolean"}]}},typeParams:[]},{id:605,name:"wrapRequirePot",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Image.ts#L32",comment:`Check if a wrap mode requires the texture to be a POT (Power Of Two) texture.
Returns true if the wrap mode is GL_REPEAT or GL_MIRRORED_REPEAT.`,tags:[],type:{name:"boolean"},params:[{id:607,name:"wrap",type:{name:"number"},tags:[],comment:"Wrap mode to check"}],typeParams:[]}],interfaces:[{id:1129,name:"IAttribute",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_draco_mesh_compression/DecoderAPI.ts#L8",tags:[],properties:[{id:1136,name:"_stride",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_draco_mesh_compression/DecoderAPI.ts#L16",type:{name:"number"},tags:[]},{id:1130,name:"buffer",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_draco_mesh_compression/DecoderAPI.ts#L9",type:{name:"ArrayBuffer"},tags:[]},{id:1135,name:"byteOffset",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_draco_mesh_compression/DecoderAPI.ts#L15",type:{name:"number"},tags:[]},{id:1132,name:"componentType",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_draco_mesh_compression/DecoderAPI.ts#L12",type:{name:"number"},tags:[]},{id:1134,name:"normalized",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_draco_mesh_compression/DecoderAPI.ts#L14",type:{name:"boolean"},tags:[]},{id:1133,name:"numComps",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_draco_mesh_compression/DecoderAPI.ts#L13",type:{name:"number"},tags:[]},{id:1131,name:"semantic",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_draco_mesh_compression/DecoderAPI.ts#L11",type:{name:"string"},tags:[]}],accessors:[],methods:[],extends:null,implemented:null},{id:1406,name:"IBasisDecoder",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/basis.types.ts#L45",tags:[],properties:[],accessors:[],methods:[{id:1407,name:"decode",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/basis.types.ts#L46",tags:[],type:{name:"Promise",data:{arguments:[{name:"DecodingResponse",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/basis.types.ts#L29"}]}},params:[{id:1409,name:"gl",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[]},{id:1410,name:"buffer",type:{name:"ArrayBuffer"},tags:[]}],typeParams:[]}],extends:null,implemented:null},{id:1137,name:"IDracoGeometry",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_draco_mesh_compression/DecoderAPI.ts#L19",tags:[],properties:[{id:1138,name:"attributes",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_draco_mesh_compression/DecoderAPI.ts#L20",type:{name:"IAttribute",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_draco_mesh_compression/DecoderAPI.ts#L8",isArray:!0},tags:[]},{id:1139,name:"indices",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_draco_mesh_compression/DecoderAPI.ts#L21",type:{name:"IndicesData",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_draco_mesh_compression/DecoderAPI.ts#L3"},tags:[]},{id:1140,name:"numIndices",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_draco_mesh_compression/DecoderAPI.ts#L22",type:{name:"number"},tags:[]},{id:1141,name:"numVertices",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_draco_mesh_compression/DecoderAPI.ts#L23",type:{name:"number"},tags:[]}],accessors:[],methods:[],extends:null,implemented:null},{id:1142,name:"IDracoRequest",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_draco_mesh_compression/DecoderAPI.ts#L28",tags:[],properties:[{id:1144,name:"attributes",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_draco_mesh_compression/DecoderAPI.ts#L30",type:{name:"Record",data:{arguments:[{name:"string"},{name:"number"}]}},tags:["optional"]},{id:1143,name:"buffer",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_draco_mesh_compression/DecoderAPI.ts#L29",type:{name:"ArrayBuffer"},tags:[]}],accessors:[],methods:[],extends:null,implemented:null},{id:1145,name:"IDracoResponse",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_draco_mesh_compression/DecoderAPI.ts#L33",tags:[],properties:[{id:1146,name:"error",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_draco_mesh_compression/DecoderAPI.ts#L34",type:{name:"string"},tags:["optional"]},{id:1147,name:"geometry",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_draco_mesh_compression/DecoderAPI.ts#L35",type:{name:"IDracoGeometry",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_draco_mesh_compression/DecoderAPI.ts#L19"},tags:[]}],accessors:[],methods:[],extends:null,implemented:null},{id:1873,name:"IElement",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L34",comment:"Interface that every Gltf element must implement (Buffer, Accessor, Mesh, ...)",tags:[],properties:[{id:1876,name:"extras",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L49",comment:"Extras of this element (custom additional data that can be added to every gltf property)",type:{name:"any"},tags:[]},{id:1874,name:"gltftype",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L39",comment:"Type of this element",type:{name:"GltfTypes",lib:"nanogl-gltf",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/GltfTypes.ts#L5"},tags:["readonly"]},{id:1875,name:"name",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L44",comment:"Name of this element",type:{name:"string"},tags:[]}],accessors:[],methods:[{id:1877,name:"parse",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L58",comment:`Method called by the loader just after initialization to parse the data coming from the .gltf file and setup the element accordingly.

For example, if it's a Buffer it will load the buffer data from the given uri and store it, if it's a Camera it will create the corresponding lens.`,tags:[],type:{name:"Promise",data:{arguments:[{name:"any"}]}},params:[{id:1879,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[],comment:"Element's loader, it can be used to load other elements (for example a Mesh could load its Primitives, a Material could load its textures)."},{id:1880,name:"data",type:{name:"IProperty",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L14",parent:{kind:"Namespace",name:"Gltf2"}},tags:[],comment:"Data coming from the .gltf file"}],typeParams:[]}],extends:null,implemented:[{name:"Accessor",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L375"},{name:"AccessorSparse",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparse.ts#L16"},{name:"AccessorSparseIndices",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparseIndices.ts#L12"},{name:"AccessorSparseValues",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparseValues.ts#L12"},{name:"Animation",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Animation.ts#L16"},{name:"AnimationChannel",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationChannel.ts#L58"},{name:"AnimationSampler",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationSampler.ts#L367"},{name:"Asset",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Asset.ts#L11"},{name:"Buffer",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Buffer.ts#L15"},{name:"BufferView",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/BufferView.ts#L25"},{name:"Camera",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Camera.ts#L23"},{name:"Image",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Image.ts#L55"},{name:"Mesh",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Mesh.ts#L14"},{name:"Node",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Node.ts#L18"},{name:"NormalTextureInfo",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/NormalTextureInfo.ts#L12"},{name:"OcclusionTextureInfo",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/OcclusionTextureInfo.ts#L14"},{name:"Primitive",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L149"},{name:"Sampler",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Sampler.ts#L16"},{name:"Scene",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Scene.ts#L12"},{name:"Skin",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Skin.ts#L18"},{name:"Texture",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Texture.ts#L20"},{name:"TextureInfo",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/TextureInfo.ts#L92"}]},{id:1120,name:"IExtensionFactory",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/IExtension.ts#L45",comment:`The implementation of an extension factory.
Passing by factories instead of direct instances allow to pass additional parameters to the extension and keep the extension instance simple.`,tags:[],properties:[{id:1121,name:"name",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/IExtension.ts#L46",type:{name:"string"},tags:["readonly"]}],accessors:[],methods:[{id:1122,name:"createInstance",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/IExtension.ts#L47",tags:[],type:{name:"IExtensionInstance",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/IExtension.ts#L29"},params:[{id:1124,name:"gltfLoader",type:{name:"GltfLoader",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoader.ts#L59"},tags:[]}],typeParams:[]}],extends:null,implemented:[{name:"KHR_draco_mesh_compression",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_draco_mesh_compression/index.ts#L74"},{name:"KHR_materials_pbrSpecularGlossiness",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_materials_pbrSpecularGlossiness/index.ts#L45"},{name:"KHR_texture_basisu",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/index.ts#L167"},{name:"KHR_texture_transform",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/EXT_texture_webp/index.ts#L50"},{name:"KHR_texture_transform",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_lights_punctual/index.ts#L209"},{name:"KHR_texture_transform",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_materials_unlit/index.ts#L46"},{name:"KHR_texture_transform",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_mesh_quantization/index.ts#L27"},{name:"KHR_texture_transform",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_transform/index.ts#L118"},{name:"MMP_compressed_texture",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MMP_compressed_texture/index.ts#L56"},{name:"MaterialOverrideExtension",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/MaterialOverrideExtension.ts#L147"}]},{id:1108,name:"IExtensionInstance",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/IExtension.ts#L29",tags:[],properties:[{id:1109,name:"name",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/IExtension.ts#L31",type:{name:"string"},tags:["readonly"]},{id:1110,name:"priority",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/IExtension.ts#L32",type:{name:"number"},tags:["readonly"]}],accessors:[],methods:[{id:1115,name:"acceptElement",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/IExtension.ts#L36",tags:[],type:{name:"Promise",data:{arguments:[{listType:"union",list:[{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"}]}]}},params:[{id:1118,name:"data",type:{name:"P"},tags:[]},{id:1119,name:"element",type:{listType:"union",list:[{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"Accessor",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L375"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"AccessorSparse",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparse.ts#L16"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"AccessorSparseIndices",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparseIndices.ts#L12"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"AccessorSparseValues",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparseValues.ts#L12"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"Animation",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Animation.ts#L16"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"AnimationChannel",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationChannel.ts#L58"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"AnimationSampler",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationSampler.ts#L367"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"Asset",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Asset.ts#L11"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"Buffer",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Buffer.ts#L15"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"BufferView",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/BufferView.ts#L25"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"Camera",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Camera.ts#L23"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"Image",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Image.ts#L55"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"IMaterial",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L46"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"Mesh",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Mesh.ts#L14"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"Node",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Node.ts#L18"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"NormalTextureInfo",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/NormalTextureInfo.ts#L12"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"OcclusionTextureInfo",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/OcclusionTextureInfo.ts#L14"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"Primitive",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L149"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"Sampler",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Sampler.ts#L16"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"Scene",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Scene.ts#L12"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"Skin",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Skin.ts#L18"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"Texture",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Texture.ts#L20"}]}},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"},{name:"TextureInfo",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/TextureInfo.ts#L92"}]}}]},tags:[]}],typeParams:[{id:1117,name:"P",type:{name:"Property",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L66",parent:{kind:"Namespace",name:"Gltf2"}},tags:[]}]},{id:1111,name:"loadElement",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/IExtension.ts#L34",tags:[],type:{name:"Promise",data:{arguments:[{listType:"union",list:[{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"},{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"}]}]}},params:[{id:1114,name:"data",type:{name:"P"},tags:[]}],typeParams:[{id:1113,name:"P",type:{name:"Property",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L66",parent:{kind:"Namespace",name:"Gltf2"}},tags:[]}]}],extends:null,implemented:null},{id:650,name:"IMaterial",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L46",comment:"Base interface for Material classes, adding a method to base Element interface to create a nanogl-pbr Material object.",tags:[],properties:[{id:651,name:"gltftype",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L47",comment:"Type of this element",type:{name:"MATERIAL",lib:"nanogl-gltf",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/GltfTypes.ts#L19",parent:{kind:"Enumeration",name:"GltfTypes"}},tags:["readonly"]}],accessors:[],methods:[{id:652,name:"createMaterialForPrimitive",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L48",tags:[],type:{name:"Material",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Material.ts#L73"},params:[{id:654,name:"gltf",type:{name:"Gltf",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L76"},tags:[]},{id:655,name:"node",type:{name:"Node",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Node.ts#L18"},tags:[]},{id:656,name:"primitive",type:{name:"Primitive",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L149"},tags:[]}],typeParams:[]}],extends:[{name:"IElement",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L34"}],implemented:[{name:"GltfBaseMaterial",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L63"}]},{id:1246,name:"IMaterialPbrSpecularGlossiness",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_materials_pbrSpecularGlossiness/PbrSpecularGlossiness.ts#L18",tags:[],properties:[{id:1247,name:"diffuseFactor",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_materials_pbrSpecularGlossiness/PbrSpecularGlossiness.ts#L22",comment:"The reflected diffuse factor of the material.",type:{name:"number",isArray:!0},tags:["optional"]},{id:1248,name:"diffuseTexture",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_materials_pbrSpecularGlossiness/PbrSpecularGlossiness.ts#L26",comment:"The diffuse texture.",type:{name:"ITextureInfo",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L63",parent:{kind:"Namespace",name:"Gltf2"}},tags:["optional"]},{id:1250,name:"glossinessFactor",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_materials_pbrSpecularGlossiness/PbrSpecularGlossiness.ts#L34",comment:"The glossiness or smoothness of the material.",type:{name:"number"},tags:["optional"]},{id:1249,name:"specularFactor",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_materials_pbrSpecularGlossiness/PbrSpecularGlossiness.ts#L30",comment:"The specular RGB color of the material.",type:{name:"number",isArray:!0},tags:["optional"]},{id:1251,name:"specularGlossinessTexture",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_materials_pbrSpecularGlossiness/PbrSpecularGlossiness.ts#L38",comment:"The specular-glossiness texture.",type:{name:"ITextureInfo",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L63",parent:{kind:"Namespace",name:"Gltf2"}},tags:["optional"]}],accessors:[],methods:[],extends:null,implemented:null},{id:1667,name:"IOInterface",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/IOInterface.ts#L7",comment:"Loader interface providing methods to resolve and load resources of many types",tags:[],properties:[],accessors:[],methods:[{id:1695,name:"decodeUTF8",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/IOInterface.ts#L62",comment:"Decode an ArrayBuffer encoded as UTF-8",tags:[],type:{name:"string"},params:[{id:1697,name:"buffer",type:{name:"ArrayBuffer"},tags:[],comment:"ArrayBuffer to decode"},{id:1698,name:"offset",type:{name:"number"},tags:["optional"],comment:"Offset in the ArrayBuffer to start decoding from",optional:!0},{id:1699,name:"length",type:{name:"number"},tags:["optional"],comment:"Length of the ArrayBuffer to decode",optional:!0}],typeParams:[]},{id:1679,name:"loadBinaryResource",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/IOInterface.ts#L34",comment:"Load a resource and return it as an ArrayBuffer",tags:[],type:{name:"Promise",data:{arguments:[{name:"ArrayBuffer"}]}},params:[{id:1681,name:"path",type:{name:"string"},tags:[],comment:"Path to resource"},{id:1682,name:"abortSignal",type:{name:"AbortSignal"},tags:[],comment:"Abort signal if you want to be able to cancel the request at any time"}],typeParams:[]},{id:1683,name:"loadImageBlob",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/IOInterface.ts#L44",comment:"Load a Blob as an image ready to be used as a texture",tags:[],type:{name:"Promise",data:{arguments:[{name:"TexImageSource"}]}},params:[{id:1685,name:"blob",type:{name:"Blob"},tags:[],comment:"Blob to load"},{id:1686,name:"abortSignal",type:{name:"AbortSignal"},tags:[],comment:"Abort signal if you want to be able to cancel the request at any time"}],typeParams:[]},{id:1675,name:"loadResource",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/IOInterface.ts#L27",comment:"Load a resource and return it as a string",tags:[],type:{name:"Promise",data:{arguments:[{name:"string"}]}},params:[{id:1677,name:"path",type:{name:"string"},tags:[],comment:"Path to resource"},{id:1678,name:"abortSignal",type:{name:"AbortSignal"},tags:[],comment:"Abort signal if you want to be able to cancel the request at any time"}],typeParams:[]},{id:1668,name:"resolveBaseDir",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/IOInterface.ts#L13",comment:"Get the base directory and filename of a file path",tags:[],type:{name:"string",isArray:!0},params:[{id:1670,name:"path",type:{name:"string"},tags:[],comment:"File path to resolve"}],typeParams:[]},{id:1671,name:"resolvePath",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/IOInterface.ts#L20",comment:"Resolve an absolute file path relative to a base directory",tags:[],type:{name:"string"},params:[{id:1673,name:"path",type:{name:"string"},tags:[],comment:"File path to resolve"},{id:1674,name:"base",type:{name:"string"},tags:[],comment:"Base directory to resolve from"}],typeParams:[]}],extends:null,implemented:[{name:"WebImpl",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/web.ts#L50"}]},{id:646,name:"IPbrInputsData",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L38",comment:"Interface for PbrMaterials that needs a method to setup a nanogl-pbr StandardPass",tags:[],properties:[],accessors:[],methods:[{id:647,name:"setupPass",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L39",tags:[],type:{name:"void"},params:[{id:649,name:"pass",type:{name:"StandardPass",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L32",data:{arguments:[{name:"PbrSurface",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L14"}]}},tags:[]}],typeParams:[]}],extends:null,implemented:null},{id:116,name:"IRenderConfig",originalName:"default",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/IRenderConfig.ts#L6",comment:`Interface for render config, defining opaque and blended masks.
Useful to extends if need to add custom masks.`,tags:[],properties:[{id:118,name:"blendedMask",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/IRenderConfig.ts#L8",type:{name:"number"},tags:[]},{id:117,name:"opaqueMask",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/IRenderConfig.ts#L7",type:{name:"number"},tags:[]}],accessors:[],methods:[],extends:null,implemented:null},{id:120,name:"ISemantics",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Semantics.ts#L15",comment:"An interface to handle GLTF semantics, it means the name of GLSL attributes",tags:[],properties:[],accessors:[],methods:[{id:125,name:"getAttributeName",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Semantics.ts#L28",comment:"Method to get the GLSL attribute name for an attribute with a given semantic.",tags:[],type:{name:"string"},params:[{id:127,name:"semantic",type:{name:"string"},tags:[],comment:"Attribute semantic"}],typeParams:[]},{id:121,name:"getMorphedAttributeName",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Semantics.ts#L22",comment:"Method to get the GLSL attribute name for a morphed attribute with a given semantic and index.",tags:[],type:{name:"string"},params:[{id:123,name:"semantic",type:{name:"string"},tags:[],comment:"Attribute semantic"},{id:124,name:"index",type:{name:"number"},tags:[],comment:"Index of the morph target"}],typeParams:[]}],extends:null,implemented:[{name:"DefaultSemantics",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Semantics.ts#L37"}]},{id:1058,name:"ITextureInfo",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/TextureInfo.ts#L16",comment:"Base interface for TextureInfo classes",tags:[],properties:[{id:1060,name:"texCoord",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/TextureInfo.ts#L26",comment:"Index of the texture's TEXCOORD attribute to use",type:{name:"number"},tags:[]},{id:1059,name:"texture",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/TextureInfo.ts#L21",comment:"Texture element used as the texture data",type:{name:"Texture",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Texture.ts#L20"},tags:[]}],accessors:[],methods:[{id:1061,name:"createSampler",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/TextureInfo.ts#L32",comment:"Create a nanogl-pbr Sampler object, used to sample the texture.",tags:[],type:{name:"Sampler",lib:"nanogl-pbr",kind:"Property",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L667",parent:{kind:"Class",name:"Input"}},params:[{id:1063,name:"id",type:{name:"string"},tags:[],comment:"ID or name to use for the sampler, to differentiate multiple samplers on the same Program"}],typeParams:[]}],extends:null,implemented:[{name:"BaseTextureInfo",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/TextureInfo.ts#L40"},{name:"NormalTextureInfo",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/NormalTextureInfo.ts#L12"},{name:"OcclusionTextureInfo",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/OcclusionTextureInfo.ts#L14"},{name:"TextureInfo",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/TextureInfo.ts#L92"}]},{id:1126,name:"IndicesData",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_draco_mesh_compression/DecoderAPI.ts#L3",tags:[],properties:[{id:1127,name:"buffer",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_draco_mesh_compression/DecoderAPI.ts#L4",type:{name:"ArrayBuffer"},tags:[]},{id:1128,name:"gltype",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_draco_mesh_compression/DecoderAPI.ts#L5",type:{name:"number"},tags:[]}],accessors:[],methods:[],extends:null,implemented:null}],enumerations:[{id:142,name:"AccessorGlslType",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L20",tags:[],comment:"GLSL name for Accessor types",members:[{id:143,name:"float",tags:[],type:{name:"'float'",data:{literalType:"string"}}},{id:144,name:"vec2",tags:[],type:{name:"'vec2'",data:{literalType:"string"}}},{id:145,name:"vec3",tags:[],type:{name:"'vec3'",data:{literalType:"string"}}},{id:146,name:"vec4",tags:[],type:{name:"'vec4'",data:{literalType:"string"}}},{id:147,name:"mat2",tags:[],type:{name:"'mat2'",data:{literalType:"string"}}},{id:148,name:"mat3",tags:[],type:{name:"'mat3'",data:{literalType:"string"}}},{id:149,name:"mat4",tags:[],type:{name:"'mat4'",data:{literalType:"string"}}}]},{id:2392,name:"GltfTypes",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/GltfTypes.ts#L5",tags:[],comment:"List of all the types that a gltf file object can contain",members:[{id:2393,name:"ACCESSOR",tags:[],type:{name:"'accessors'",data:{literalType:"string"}}},{id:2394,name:"ACCESSOR_SPARSE",tags:[],type:{name:"'sparse'",data:{literalType:"string"}}},{id:2395,name:"ACCESSOR_SPARSE_INDICES",tags:[],type:{name:"'sparseIndices'",data:{literalType:"string"}}},{id:2396,name:"ACCESSOR_SPARSE_VALUES",tags:[],type:{name:"'sparseValues'",data:{literalType:"string"}}},{id:2397,name:"ANIMATION",tags:[],type:{name:"'animations'",data:{literalType:"string"}}},{id:2398,name:"ANIMATION_SAMPLER",tags:[],type:{name:"'animationSamplers'",data:{literalType:"string"}}},{id:2399,name:"ANIMATION_CHANNEL",tags:[],type:{name:"'animationChannels'",data:{literalType:"string"}}},{id:2400,name:"ASSET",tags:[],type:{name:"'asset'",data:{literalType:"string"}}},{id:2401,name:"BUFFER",tags:[],type:{name:"'buffers'",data:{literalType:"string"}}},{id:2402,name:"BUFFERVIEW",tags:[],type:{name:"'bufferViews'",data:{literalType:"string"}}},{id:2403,name:"CAMERA",tags:[],type:{name:"'cameras'",data:{literalType:"string"}}},{id:2404,name:"IMAGE",tags:[],type:{name:"'images'",data:{literalType:"string"}}},{id:2405,name:"MATERIAL",tags:[],type:{name:"'materials'",data:{literalType:"string"}}},{id:2406,name:"MESH",tags:[],type:{name:"'meshes'",data:{literalType:"string"}}},{id:2407,name:"NODE",tags:[],type:{name:"'nodes'",data:{literalType:"string"}}},{id:2408,name:"NORMAL_TEXTURE_INFO",tags:[],type:{name:"'normalTextureInfo'",data:{literalType:"string"}}},{id:2409,name:"OCCLUSION_TEXTURE_INFO",tags:[],type:{name:"'occlusionTextureInfo'",data:{literalType:"string"}}},{id:2410,name:"PRIMITIVE",tags:[],type:{name:"'primitives'",data:{literalType:"string"}}},{id:2411,name:"SAMPLER",tags:[],type:{name:"'samplers'",data:{literalType:"string"}}},{id:2412,name:"SCENE",tags:[],type:{name:"'scenes'",data:{literalType:"string"}}},{id:2413,name:"SKIN",tags:[],type:{name:"'skins'",data:{literalType:"string"}}},{id:2414,name:"TEXTURE",tags:[],type:{name:"'textures'",data:{literalType:"string"}}},{id:2415,name:"TEXTURE_INFO",tags:[],type:{name:"'textureInfo'",data:{literalType:"string"}}}]}],types:[{id:1881,name:"AnyElement",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L65",tags:[],type:{listType:"union",list:[{name:"Accessor",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L375"},{name:"AccessorSparse",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparse.ts#L16"},{name:"AccessorSparseIndices",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparseIndices.ts#L12"},{name:"AccessorSparseValues",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AccessorSparseValues.ts#L12"},{name:"Animation",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Animation.ts#L16"},{name:"AnimationChannel",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationChannel.ts#L58"},{name:"AnimationSampler",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/AnimationSampler.ts#L367"},{name:"Asset",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Asset.ts#L11"},{name:"Buffer",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Buffer.ts#L15"},{name:"BufferView",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/BufferView.ts#L25"},{name:"Camera",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Camera.ts#L23"},{name:"Image",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Image.ts#L55"},{name:"IMaterial",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L46"},{name:"Mesh",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Mesh.ts#L14"},{name:"Node",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Node.ts#L18"},{name:"NormalTextureInfo",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/NormalTextureInfo.ts#L12"},{name:"OcclusionTextureInfo",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/OcclusionTextureInfo.ts#L14"},{name:"Primitive",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Primitive.ts#L149"},{name:"Sampler",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Sampler.ts#L16"},{name:"Scene",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Scene.ts#L12"},{name:"Skin",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Skin.ts#L18"},{name:"Texture",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Texture.ts#L20"},{name:"TextureInfo",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/TextureInfo.ts#L92"}]},comment:"Type that wraps all possible Gltf elements, they all implements IElement and represents a GltfType",params:[]},{id:556,name:"ArrayBufferTarget",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/BufferView.ts#L18",tags:[],type:{listType:"union",list:[{name:"ELEMENT_ARRAY_BUFFER"},{name:"ARRAY_BUFFER"}]},comment:`Target of a BufferView, either ARRAY_BUFFER / 34962 (indicating that the data should be used for vertex attributes)
or ELEMENT_ARRAY_BUFFER / 34963 (indicating that the data should be used for vertex indices).`,params:[]},{id:150,name:"BaseAccessorData",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Accessor.ts#L108",tags:[],type:{listType:"union",list:[{name:"IAccessor",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L41",parent:{kind:"Namespace",name:"Gltf2"}},{name:"IAccessorSparseIndices",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L43",parent:{kind:"Namespace",name:"Gltf2"}},{name:"IAccessorSparseValues",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L44",parent:{kind:"Namespace",name:"Gltf2"}}]},comment:"Base type for Accessor, AccessorSparseIndices and AccessorSparseValues data",params:[]},{useInterface:!0,id:1401,name:"DecodingError",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/basis.types.ts#L38",tags:[],properties:[{id:1404,name:"error",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/basis.types.ts#L40",type:{name:"string"},tags:[]},{id:1403,name:"id",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/basis.types.ts#L39",type:{name:"number"},tags:[]}],accessors:[],methods:[],extends:null,implemented:null},{useInterface:!0,id:1393,name:"DecodingResponse",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/basis.types.ts#L29",tags:[],properties:[{id:1397,name:"alphaBuffer",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/basis.types.ts#L32",type:{listType:"union",list:[{name:"ArrayBuffer"},{name:"null",data:{literalType:"null"}}]},tags:[]},{id:1396,name:"buffer",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/basis.types.ts#L31",type:{name:"ArrayBuffer"},tags:[]},{id:1400,name:"hasAlpha",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/basis.types.ts#L35",type:{name:"boolean"},tags:[]},{id:1395,name:"id",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/basis.types.ts#L30",type:{name:"number"},tags:[]},{id:1399,name:"mipLevels",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/basis.types.ts#L34",type:{name:"DecodingResponseLevel",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/basis.types.ts#L20",isArray:!0},tags:[]},{id:1398,name:"webglFormat",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/basis.types.ts#L33",type:{name:"DecodingResponseFormat",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/basis.types.ts#L14"},tags:[]}],accessors:[],methods:[],extends:null,implemented:null},{useInterface:!0,id:1381,name:"DecodingResponseFormat",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/basis.types.ts#L14",tags:[],properties:[{id:1383,name:"format",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/basis.types.ts#L15",type:{name:"number"},tags:[]},{id:1385,name:"type",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/basis.types.ts#L17",type:{name:"number"},tags:["optional"]},{id:1384,name:"uncompressed",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/basis.types.ts#L16",type:{name:"boolean"},tags:["optional"]}],accessors:[],methods:[],extends:null,implemented:null},{useInterface:!0,id:1386,name:"DecodingResponseLevel",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/basis.types.ts#L20",tags:[],properties:[{id:1392,name:"height",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/basis.types.ts#L25",type:{name:"number"},tags:[]},{id:1388,name:"level",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/basis.types.ts#L21",type:{name:"number"},tags:[]},{id:1389,name:"offset",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/basis.types.ts#L22",type:{name:"number"},tags:[]},{id:1390,name:"size",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/basis.types.ts#L23",type:{name:"number"},tags:[]},{id:1391,name:"width",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/basis.types.ts#L24",type:{name:"number"},tags:[]}],accessors:[],methods:[],extends:null,implemented:null},{id:1900,name:"ElementForProperty",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L127",tags:[],type:{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",data:{arguments:[{name:"PropertyType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113"}]}},comment:"Gltf element determined by a given Gltf property",params:[{id:1901,name:"T",type:{name:"Property",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L66",parent:{kind:"Namespace",name:"Gltf2"}},tags:[],comment:"Gltf property"}]},{id:1882,name:"ElementOfType",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98",tags:[],type:{name:"E",data:{extendsType:{name:"object",data:{properties:[{name:"gltftype",type:{name:"T"}}]}},conditionalTypes:[{name:"E"},{name:"never"}]}},comment:"Gltf element determined by its GltfType",params:[{id:1885,name:"T",type:{name:"GltfTypes",lib:"nanogl-gltf",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/GltfTypes.ts#L5"},tags:[],comment:"GltfType of the element"},{id:1886,name:"E",type:{name:"AnyElement",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L65"},tags:[],comment:"Corresponding Gltf element returned",default:{name:"AnyElement",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L65"}}]},{id:1896,name:"ElementType",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L120",tags:[],type:{name:"T",data:{extendsType:{name:"object",data:{properties:[{name:"gltftype",type:{name:"E",isInferred:!0}}]}},conditionalTypes:[{name:"E"},{name:"never"}]}},comment:"Gltf type determined by a given Gltf element",params:[{id:1899,name:"T",type:{name:"AnyElement",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L65"},tags:[],comment:"Gltf element"}]},{id:13,name:"GltfExtras",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/Gltf.ts#L67",tags:[],type:{listType:"intersection",list:[null,{name:"object",data:{properties:[{name:"lights",type:{name:"LightCollection",lib:"nanogl-gltf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_lights_punctual/index.ts#L75"}}]}}]},comment:`Extras property of a Gltf (custom additional data that can be added to every gltf property).
Lights can be stored in the extras property of the Gltf with the KHR_lights_punctual extension.`,params:[]},{id:1665,name:"GltfLoaderOptions",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoaderOptions.ts#L38",tags:[],type:{name:"Partial",data:{arguments:[{name:"Options",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoaderOptions.ts#L8"}]}},comment:"Options for GltfLoader",params:[]},{id:663,name:"GltfMaterialPass",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Material.ts#L55",tags:[],type:{listType:"intersection",list:[{name:"MaterialPass",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MaterialPass.ts#L14"},{name:"object",data:{properties:[{name:"version",type:{name:"ShaderVersion",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ShaderVersion.ts#L15"}}]}}]},comment:"A simple nanogl-pbr MaterialPass but with a shader version attribute",params:[]},{useInterface:!0,id:1659,name:"Options",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoaderOptions.ts#L8",comment:"All options available for GltfLoader",tags:[],properties:[{id:1663,name:"abortSignal",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoaderOptions.ts#L24",comment:"Abort signal if you want to be able to cancel the request at any time",type:{name:"AbortSignal"},tags:[]},{id:1661,name:"baseurl",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoaderOptions.ts#L13",comment:"Custom base url to use for file paths",type:{name:"string"},tags:[]},{id:1664,name:"defaultTextureFilter",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoaderOptions.ts#L30",comment:"Texture's minFilter to use when sampler doesn't specify one",type:{name:"GLenum"},tags:[]},{id:1662,name:"extensions",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/io/GltfLoaderOptions.ts#L19",comment:`Additional extensions specific to this loader.
Extensions are merged with global extensions`,type:{name:"IExtensionFactory",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/IExtension.ts#L45",isArray:!0},tags:[]}],accessors:[],methods:[],extends:null,implemented:null},{id:581,name:"ProjectionData",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/elements/Camera.ts#L17",tags:[],type:{listType:"union",list:[{name:"ICameraPerspective",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L589",parent:{kind:"Namespace",name:"Gltf2"}},{name:"ICameraOrthographic",lib:"nanogl-gltf",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L568",parent:{kind:"Namespace",name:"Gltf2"}}]},comment:"Either a Perspective or Orthographic projection data",params:[]},{id:1902,name:"PromiseElementForProperty",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L133",tags:[],type:{name:"Promise",data:{arguments:[{name:"ElementOfType",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L98"}]}},comment:"Gltf element determined by a given Gltf property, wrapped in a Promise",params:[{id:1903,name:"T",type:{name:"Property",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L66",parent:{kind:"Namespace",name:"Gltf2"}},tags:[],comment:"Gltf property"}]},{id:1887,name:"PropertyOfType",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L105",tags:[],type:{name:"E",data:{extendsType:{name:"object",data:{properties:[{name:"gltftype",type:{name:"T"}}]}},conditionalTypes:[{name:"E"},{name:"never"}]}},comment:"Gltf property determined by its GltfType",params:[{id:1890,name:"T",type:{name:"GltfTypes",lib:"nanogl-gltf",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/GltfTypes.ts#L5"},tags:[],comment:"GltfType of the element"},{id:1891,name:"E",type:{name:"Property",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L66",parent:{kind:"Namespace",name:"Gltf2"}},tags:[],comment:"Corresponding Gltf property returned",default:{name:"Property",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L66",parent:{kind:"Namespace",name:"Gltf2"}}}]},{id:1892,name:"PropertyType",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Elements.ts#L113",tags:[],type:{name:"T",data:{extendsType:{name:"object",data:{properties:[{name:"gltftype",type:{name:"E",isInferred:!0}}]}},conditionalTypes:[{name:"E"},{name:"never"}]}},comment:"Gltf type determined by a given Gltf property",params:[{id:1895,name:"T",type:{name:"Property",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/Gltf2.ts#L66",parent:{kind:"Namespace",name:"Gltf2"}},tags:[],comment:"Gltf property"}]},{useInterface:!0,id:1373,name:"SupportedFormats",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/basis.types.ts#L3",tags:[],properties:[{id:1379,name:"astc",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/basis.types.ts#L8",type:{name:"boolean"},tags:[]},{id:1380,name:"bptc",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/basis.types.ts#L9",type:{name:"boolean"},tags:[]},{id:1376,name:"etc1",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/basis.types.ts#L5",type:{name:"boolean"},tags:[]},{id:1377,name:"etc2",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/basis.types.ts#L6",type:{name:"boolean"},tags:[]},{id:1378,name:"pvrtc",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/basis.types.ts#L7",type:{name:"boolean"},tags:[]},{id:1375,name:"s3tc",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/basis.types.ts#L4",type:{name:"boolean"},tags:[]}],accessors:[],methods:[],extends:null,implemented:null},{id:2417,name:"TypedArray",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/TypedArray.ts#L5",tags:[],type:{listType:"union",list:[{name:"Int8Array"},{name:"Uint8Array"},{name:"Int16Array"},{name:"Uint16Array"},{name:"Int32Array"},{name:"Uint32Array"},{name:"Uint8ClampedArray"},{name:"Float32Array"},{name:"Float64Array"}]},comment:"All TypedArray needed for creating Accessors or Animations",params:[]},{id:2418,name:"TypedArrayConstructor",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/types/TypedArray.ts#L10",tags:[],type:{listType:"union",list:[{name:"Int8ArrayConstructor"},{name:"Uint8ArrayConstructor"},{name:"Int16ArrayConstructor"},{name:"Uint16ArrayConstructor"},{name:"Int32ArrayConstructor"},{name:"Uint32ArrayConstructor"},{name:"Uint8ClampedArrayConstructor"},{name:"Float32ArrayConstructor"},{name:"Float64ArrayConstructor"}]},comment:"Constructors of all TypedArray needed for creating Accessors",params:[]},{id:1405,name:"WorkerResponse",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/basis.types.ts#L43",tags:[],type:{listType:"union",list:[{name:"DecodingResponse",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/basis.types.ts#L29"},{name:"DecodingError",lib:"nanogl-gltf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-gltf/blob/3947077/src/extensions/KHR_texture_basisu/basis.types.ts#L38"}]},params:[]}]},{name:"nanogl-node",description:"Handle nested objects transform in 3D space",classes:[{id:2,name:"Node",originalName:"default",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L18",comment:`This class represents a node in a scene graph, and supports nesting.

It provides helpers for handling objects transform in 3D space.
You can use it to set position, rotation and scale of an object, and compute the corresponding local & world matrix.`,tags:[],constructors:[{id:3,name:"Node",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L62",tags:[],type:{name:"Node",lib:"nanogl-node",kind:"Class",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L18"},typeParams:[]}],properties:[{id:12,name:"_children",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L55",comment:"The list of children for this node",defaultValue:"[]",type:{name:"Node",lib:"nanogl-node",kind:"Class",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L18",isArray:!0},tags:[]},{id:13,name:"_invalidM",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L58",comment:"Whether the local matrix is invalid or not",defaultValue:"true",type:{name:"boolean"},tags:["private"]},{id:14,name:"_invalidW",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L60",comment:"Whether the world matrix is invalid or not",defaultValue:"true",type:{name:"boolean"},tags:["private"]},{id:8,name:"_matrix",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L39",comment:"The local transform matrix",defaultValue:"Identity 4*4 matrix",type:{name:"mat4"},tags:["readonly"]},{id:11,name:"_parent",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L53",comment:"The parent for this node",defaultValue:"null",type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"Node",lib:"nanogl-node",kind:"Class",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L18"}]},tags:[]},{id:9,name:"_wmatrix",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L44",comment:"The world transform matrix",defaultValue:"Identity 4*4 matrix",type:{name:"mat4"},tags:["readonly"]},{id:10,name:"_wposition",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L50",comment:"The world position",defaultValue:"vec3(0, 0, 0)",type:{name:"vec3"},tags:["readonly"]},{id:5,name:"position",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L23",comment:"The local position",defaultValue:"vec3(0, 0, 0)",type:{name:"vec3"},tags:["readonly"]},{id:6,name:"rotation",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L28",comment:"The local rotation",defaultValue:"Identity quaternion",type:{name:"quat"},tags:["readonly"]},{id:7,name:"scale",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L33",comment:"The local scale",defaultValue:"vec3(1, 1, 1)",type:{name:"vec3"},tags:["readonly"]}],accessors:[{id:24,name:"x",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L89",setter:{name:"set x",comment:"Set node position on the X-axis.",tags:[],type:{name:"void"},params:[{id:27,name:"v",type:{name:"number"},tags:[],comment:"The value to set"}],typeParams:[]},getter:{name:"get x",comment:"Get node position on the X-axis.",tags:[],type:{name:"number"},typeParams:[]}},{id:28,name:"y",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L94",setter:{name:"set y",comment:"Set node position on the Y-axis.",tags:[],type:{name:"void"},params:[{id:31,name:"v",type:{name:"number"},tags:[],comment:"The value to set"}],typeParams:[]},getter:{name:"get y",comment:"Get node position on the Y-axis.",tags:[],type:{name:"number"},typeParams:[]}},{id:32,name:"z",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L99",setter:{name:"set z",comment:"Set node position on the Z-axis.",tags:[],type:{name:"void"},params:[{id:35,name:"v",type:{name:"number"},tags:[],comment:"The value to set"}],typeParams:[]},getter:{name:"get z",comment:"Get node position on the Z-axis.",tags:[],type:{name:"number"},typeParams:[]}}],methods:[{id:58,name:"_computeWorldMatrix",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L235",comment:"Compute node world matrix. It also computes node's parent's world matrix (if it has been declared invalid) before computing node world matrix.",tags:[],type:{name:"void"},params:[{id:60,name:"skipParents",type:{name:"boolean"},tags:[],comment:"If true, the node's parent's world matrix will not be computed"}],typeParams:[]},{id:61,name:"_hasInvalidWorldMatrix",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L258",comment:"Know whether the node world matrix is invalid or not. It also checks node's parent's world matrix.",tags:[],type:{name:"boolean"},params:[{id:63,name:"skipParents",type:{name:"boolean"},tags:[],comment:"If true, the node's parent's world matrix will not be checked"}],typeParams:[]},{id:45,name:"add",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L159",comment:`Add a child to the node.
If the child already has a parent, it will be removed : a node can only have one parent.`,tags:[],type:{name:"void"},params:[{id:47,name:"child",type:{name:"Node",lib:"nanogl-node",kind:"Class",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L18"},tags:[],comment:"The node to add as this node's child"}],typeParams:[]},{id:51,name:"invalidate",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L186",comment:"Invalidate node local matrix and world matrix.",tags:[],type:{name:"void"},typeParams:[]},{id:39,name:"lookAt",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L131",comment:"Rotate the node to look at target position.",tags:[],type:{name:"void"},params:[{id:41,name:"tgt",type:{name:"vec3"},tags:[],comment:"The target position to look at"}],typeParams:[]},{id:48,name:"remove",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L174",comment:"Remove a child from the node's children.",tags:[],type:{name:"void"},params:[{id:50,name:"child",type:{name:"Node",lib:"nanogl-node",kind:"Class",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L18"},tags:[],comment:"The node to remove from this node's children"}],typeParams:[]},{id:15,name:"rotateX",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L73",comment:"Rotate node around X-axis.",tags:[],type:{name:"void"},params:[{id:17,name:"rad",type:{name:"number"},tags:[],comment:"The rotation angle (in radians)"}],typeParams:[]},{id:18,name:"rotateY",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L78",comment:"Rotate node around Y-axis.",tags:[],type:{name:"void"},params:[{id:20,name:"rad",type:{name:"number"},tags:[],comment:"The rotation angle (in radians)"}],typeParams:[]},{id:21,name:"rotateZ",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L83",comment:"Rotate node around Z-axis.",tags:[],type:{name:"void"},params:[{id:23,name:"rad",type:{name:"number"},tags:[],comment:"The rotation angle (in radians)"}],typeParams:[]},{id:42,name:"setMatrix",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L146",comment:"Set node local transformation matrix.",tags:[],type:{name:"void"},params:[{id:44,name:"m4",type:{name:"mat4"},tags:[],comment:"The matrix to set"}],typeParams:[]},{id:36,name:"setScale",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L119",comment:"Set node scale for all axes.",tags:[],type:{name:"void"},params:[{id:38,name:"s",type:{name:"number"},tags:[],comment:"The scale factor"}],typeParams:[]},{id:53,name:"updateMatrix",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L195",comment:"Update node local matrix, if it has been declared invalid.",tags:[],type:{name:"void"},typeParams:[]},{id:55,name:"updateWorldMatrix",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L214",comment:"Update node world matrix, if it has been declared invalid, and recursively update all children's world matrices.",tags:[],type:{name:"void"},params:[{id:57,name:"skipParents",type:{name:"boolean"},tags:[],comment:"If true, the node's parent's world matrix will not be checked or updated before updating node world matrix",defaultValue:"false"}],typeParams:[]}],extends:null,implements:null}],functions:[{id:65,name:"decomposeMat4",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/math.ts#L12",comment:"Retrieve position, rotation and scale from a given 4*4 matrix and store the result in the given variables.",tags:[],type:{name:"void"},params:[{id:67,name:"m4",type:{name:"mat4"},tags:[],comment:"The 4*4 matrix to decompose"},{id:68,name:"p",type:{name:"vec3"},tags:[],comment:"The position vector in which to store the result"},{id:69,name:"q",type:{name:"quat"},tags:[],comment:"The rotation quaternion in which to store the result"},{id:70,name:"s",type:{name:"vec3"},tags:[],comment:"The scale vector in which to store the result"}],typeParams:[]}],interfaces:[],enumerations:[],types:[]},{name:"nanogl-primitives-2d",description:"Basic 2D primitives for nanogl",classes:[{id:74,name:"Circle",originalName:"default",source:"https://github.com/evanmartiin/nanogl-primitives-2d/blob/ce8998f/src/circle.ts#L8",comment:"This class manages a basic circle geometry.",tags:[],constructors:[{id:75,name:"Circle",source:"https://github.com/evanmartiin/nanogl-primitives-2d/blob/ce8998f/src/circle.ts#L14",tags:[],type:{name:"Circle",lib:"nanogl-primitives-2d",kind:"Class",source:"https://github.com/evanmartiin/nanogl-primitives-2d/blob/ce8998f/src/circle.ts#L8"},params:[{id:77,name:"gl",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[],comment:"The webgl context this Circle belongs to"},{id:78,name:"radius",type:{name:"number"},tags:[],comment:"The radius of the circle",defaultValue:"1.0"},{id:79,name:"segs",type:{name:"number"},tags:[],comment:"The number of segments of the circle",defaultValue:"32"}],typeParams:[]}],properties:[],accessors:[],methods:[{id:80,name:"render",source:"https://github.com/evanmartiin/nanogl-primitives-2d/blob/ce8998f/src/circle.ts#L45",comment:`Draw the circle.
You need to link a program before calling this method.`,tags:[],type:{name:"void"},typeParams:[]}],extends:[{name:"ArrayBuffer",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/arraybuffer.ts#L34"},{name:"BaseBuffer",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/basebuffer.ts#L4"}],implements:null},{id:2,name:"CircleOutline",originalName:"default",source:"https://github.com/evanmartiin/nanogl-primitives-2d/blob/ce8998f/src/circle-outline.ts#L8",comment:"This class manages a basic circle outline geometry.",tags:[],constructors:[{id:3,name:"CircleOutline",source:"https://github.com/evanmartiin/nanogl-primitives-2d/blob/ce8998f/src/circle-outline.ts#L15",tags:[],type:{name:"CircleOutline",lib:"nanogl-primitives-2d",kind:"Class",source:"https://github.com/evanmartiin/nanogl-primitives-2d/blob/ce8998f/src/circle-outline.ts#L8"},params:[{id:5,name:"gl",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[],comment:"The webgl context this CircleOutline belongs to"},{id:6,name:"radius",type:{name:"number"},tags:[],comment:"The radius of the circle outline",defaultValue:"1.0"},{id:7,name:"segs",type:{name:"number"},tags:[],comment:"The number of segments of the circle outline",defaultValue:"32"},{id:8,name:"thickness",type:{name:"number"},tags:[],comment:"The thickness of the outline",defaultValue:"0.1"}],typeParams:[]}],properties:[],accessors:[],methods:[{id:9,name:"render",source:"https://github.com/evanmartiin/nanogl-primitives-2d/blob/ce8998f/src/circle-outline.ts#L55",comment:`Draw the circle outline.
You need to link a program before calling this method.`,tags:[],type:{name:"void"},typeParams:[]}],extends:[{name:"ArrayBuffer",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/arraybuffer.ts#L34"},{name:"BaseBuffer",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/basebuffer.ts#L4"}],implements:null},{id:219,name:"Rect",originalName:"default",source:"https://github.com/evanmartiin/nanogl-primitives-2d/blob/ce8998f/src/rect.ts#L15",comment:"This class manages a basic rectangle geometry.",tags:[],constructors:[{id:220,name:"Rect",source:"https://github.com/evanmartiin/nanogl-primitives-2d/blob/ce8998f/src/rect.ts#L23",tags:[],type:{name:"Rect",lib:"nanogl-primitives-2d",kind:"Class",source:"https://github.com/evanmartiin/nanogl-primitives-2d/blob/ce8998f/src/rect.ts#L15"},params:[{id:222,name:"gl",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[],comment:"The webgl context this Rect belongs to"},{id:223,name:"x",type:{name:"number"},tags:[],comment:"The x position of the rectangle",defaultValue:"-1"},{id:224,name:"y",type:{name:"number"},tags:[],comment:"The y position of the rectangle",defaultValue:"-1"},{id:225,name:"w",type:{name:"number"},tags:[],comment:"The width of the rectangle",defaultValue:"2"},{id:226,name:"h",type:{name:"number"},tags:[],comment:"The height of the rectangle",defaultValue:"2"}],typeParams:[]}],properties:[],accessors:[],methods:[{id:227,name:"render",source:"https://github.com/evanmartiin/nanogl-primitives-2d/blob/ce8998f/src/rect.ts#L45",comment:`Draw the rectangle.
You need to link a program before calling this method.`,tags:[],type:{name:"void"},typeParams:[]}],extends:[{name:"ArrayBuffer",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/arraybuffer.ts#L34"},{name:"BaseBuffer",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/basebuffer.ts#L4"}],implements:null},{id:145,name:"RectOutline",originalName:"default",source:"https://github.com/evanmartiin/nanogl-primitives-2d/blob/ce8998f/src/rect-outline.ts#L14",comment:"This class manages a basic rectangle outline geometry.",tags:[],constructors:[{id:146,name:"RectOutline",source:"https://github.com/evanmartiin/nanogl-primitives-2d/blob/ce8998f/src/rect-outline.ts#L23",tags:[],type:{name:"RectOutline",lib:"nanogl-primitives-2d",kind:"Class",source:"https://github.com/evanmartiin/nanogl-primitives-2d/blob/ce8998f/src/rect-outline.ts#L14"},params:[{id:148,name:"gl",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[],comment:"The webgl context this RectOutline belongs to"},{id:149,name:"x",type:{name:"number"},tags:[],comment:"The x position of the rectangle outline",defaultValue:"-1"},{id:150,name:"y",type:{name:"number"},tags:[],comment:"The y position of the rectangle outline",defaultValue:"-1"},{id:151,name:"w",type:{name:"number"},tags:[],comment:"The width of the rectangle outline",defaultValue:"2"},{id:152,name:"h",type:{name:"number"},tags:[],comment:"The height of the rectangle outline",defaultValue:"2"},{id:153,name:"thickness",type:{name:"number"},tags:[],comment:"The thickness of the outline",defaultValue:".1"}],typeParams:[]}],properties:[],accessors:[],methods:[{id:154,name:"render",source:"https://github.com/evanmartiin/nanogl-primitives-2d/blob/ce8998f/src/rect-outline.ts#L63",comment:`Draw the rectangle outline.
You need to link a program before calling this method.`,tags:[],type:{name:"void"},typeParams:[]}],extends:[{name:"ArrayBuffer",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/arraybuffer.ts#L34"},{name:"BaseBuffer",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/basebuffer.ts#L4"}],implements:null}],functions:[],interfaces:[],enumerations:[],types:[]},{name:"nanogl-pbr",description:"Physically based rendering materials for nanogl",classes:[{id:2019,name:"AbstractLightModel",originalName:"default",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/AbstractLightModel.ts#L14",comment:"This class is the base class for light models.",tags:["abstract"],constructors:[{id:2020,name:"AbstractLightModel",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/AbstractLightModel.ts#L34",tags:[],type:{name:"AbstractLightModel",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/AbstractLightModel.ts#L14",data:{arguments:[{name:"TLight"}]}},params:[{id:2023,name:"code",type:{name:"GlslCode",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/GlslCode.ts#L2"},tags:[],comment:"The shader code template for this light model"},{id:2024,name:"preCode",type:{name:"GlslCode",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/GlslCode.ts#L2"},tags:[],comment:"The shader pre-code template for this light model"}],typeParams:[{id:2022,name:"TLight",type:{name:"Light",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L15"},tags:[],comment:"The type of light this model supports",default:{name:"Light",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L15"}}]}],properties:[{id:2029,name:"codeTemplate",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/AbstractLightModel.ts#L26",comment:"The shader code template for this light model",type:{name:"GlslCode",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/GlslCode.ts#L2"},tags:[]},{id:2026,name:"lights",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/AbstractLightModel.ts#L19",comment:"The list of lights",type:{name:"TLight",isArray:!0},tags:[]},{id:2028,name:"preCodeTemplate",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/AbstractLightModel.ts#L24",comment:"The shader pre-code template for this light model",type:{name:"GlslCode",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/GlslCode.ts#L2"},tags:[]},{id:2027,name:"shadowIndices",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/AbstractLightModel.ts#L21",comment:"The list of shadow index for each light",type:{name:"number",isArray:!0},tags:[]},{id:2025,name:"type",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/AbstractLightModel.ts#L16",comment:"The type of lighting",type:{name:"LightType",lib:"nanogl-pbr",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/LightType.ts#L2"},tags:["abstract","readonly"]}],accessors:[],methods:[{id:2036,name:"_genCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/AbstractLightModel.ts#L73",comment:"Generate the shader code for this light model.",tags:[],type:{name:"void"},params:[{id:2038,name:"slots",type:{name:"ChunksSlots",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L88"},tags:[],comment:"The slots to add the code to"}],typeParams:[]},{id:2030,name:"addLight",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/AbstractLightModel.ts#L48",comment:"Add a light to the model.",tags:[],type:{name:"void"},params:[{id:2032,name:"l",type:{name:"TLight"},tags:[],comment:"The light to add"}],typeParams:[]},{id:2039,name:"genCodePerLights",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/AbstractLightModel.ts#L96",comment:"Generate the shader code for a given light in this LightModel.",tags:["abstract"],type:{name:"string"},params:[{id:2041,name:"light",type:{name:"TLight"},tags:[],comment:"The light to generate the code for"},{id:2042,name:"index",type:{name:"number"},tags:[],comment:"The index of the light"},{id:2043,name:"shadowIndex",type:{name:"number"},tags:[],comment:"The shadow index of the light"}],typeParams:[]},{id:2044,name:"prepare",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/AbstractLightModel.ts#L103",comment:"Prepare the light model for rendering.",tags:["abstract"],type:{name:"void"},params:[{id:2046,name:"gl",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[],comment:"The webgl context to use"},{id:2047,name:"model",type:{name:"ILightModel",lib:"nanogl-pbr",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/ILightModel.ts#L10"},tags:[],comment:"The parent light model"}],typeParams:[]},{id:2033,name:"removeLight",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/AbstractLightModel.ts#L60",comment:"Remove a light from the model.",tags:[],type:{name:"void"},params:[{id:2035,name:"l",type:{name:"TLight"},tags:[],comment:"The light to remove"}],typeParams:[]}],extends:[{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12"}],implements:null},{id:1035,name:"AbstractPbrSurface",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L24",comment:`This class is the base class for all PBR surfaces.

It handles the code generation for a PBR surface in
a shader chunk.`,tags:["abstract"],constructors:[{id:1036,name:"AbstractPbrSurface",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L31",tags:[],type:{name:"AbstractPbrSurface",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L24"},typeParams:[]}],properties:[{id:1039,name:"pbrInputType",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L29",comment:"The shader input for the PBR type",type:{name:"Enum",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Enum.ts#L20",data:{arguments:[{listType:"tuple",list:[{name:"'SPECULAR'",data:{literalType:"string"}},{name:"'METALNESS'",data:{literalType:"string"}}],data:{operator:"readonly"}}]}},tags:["protected"]},{id:1038,name:"type",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L26",comment:"The type of PBR workflow",defaultValue:"PbrWorkflowType.NONE",type:{name:"PbrWorkflowType",lib:"nanogl-pbr",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L7"},tags:["readonly"]}],accessors:[],methods:[{id:1040,name:"_genCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L41",comment:"Generate the shader code for this PBR surface.",tags:["protected"],type:{name:"void"},params:[{id:1042,name:"slots",type:{name:"ChunksSlots",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L88"},tags:[],comment:"The slots to add the code to"}],typeParams:[]}],extends:[{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12"}],implements:null},{id:643,name:"Attribute",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L496",comment:`This class manages attribute input parameters
for shaders.

It handles the declaration of an attribute
and the corresponding varying.`,tags:[],constructors:[{id:644,name:"Attribute",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L508",tags:[],type:{name:"Attribute",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L496"},params:[{id:646,name:"name",type:{name:"string"},tags:[],comment:"The name of the attribute param"},{id:647,name:"size",type:{name:"InputSize",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L30"},tags:[],comment:"The size of the attribute param value"}],typeParams:[]}],properties:[{id:649,name:"name",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L500",comment:"The name of the input param",type:{name:"string"},tags:[]},{id:648,name:"ptype",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L498",comment:"The type of the input param",defaultValue:"ParamType.ATTRIBUTE",type:{name:"ATTRIBUTE",lib:"nanogl-pbr",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L103",parent:{kind:"Enumeration",name:"ParamType"}},tags:["readonly"]},{id:650,name:"size",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L501",comment:"The size of the input param value",type:{name:"InputSize",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L30"},tags:[]},{id:651,name:"token",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L502",comment:`The name of the variable created for this input param,
used to access the value in the shader code.`,type:{name:"string"},tags:[]}],accessors:[],methods:[{id:652,name:"_genCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L521",comment:"This method is not used for input params.",tags:["protected"],type:{name:"void"},params:[{id:654,name:"slots",type:{name:"ChunksSlots",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L88"},tags:[]}],typeParams:[]},{id:655,name:"genInputCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L534",comment:`Generate the shader code for this attribute param and
add it to the given slots.

The attribute can be accessed with the name of the input param in the vertex shader.
The corresponding varying can be accessed with the token of the input param
in the fragment shader.`,tags:[],type:{name:"void"},params:[{id:657,name:"slots",type:{name:"ChunksSlots",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L88"},tags:[],comment:"The slots to add the code to"},{id:658,name:"input",type:{name:"Input",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664"},tags:[],comment:"The input this param is attached to"}],typeParams:[]}],extends:[{name:"BaseParams",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L150"},{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12"}],implements:{name:"IInputParam",lib:"nanogl-pbr",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L115"}},{id:410,name:"BaseParams",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L150",comment:`This class is the base class for all shader input parameters.

They handle the declaration of sampler, uniform, attribute
and constant input parameters for shaders.`,tags:["abstract"],constructors:[{id:411,name:"BaseParams",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L158",tags:[],type:{name:"BaseParams",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L150"},params:[{id:413,name:"hasCode",type:{name:"boolean"},tags:["optional"],comment:"Whether this input param needs shader code generation or not",optional:!0,defaultValue:"false"},{id:414,name:"hasSetup",type:{name:"boolean"},tags:["optional"],comment:"Whether this input param needs program setup (for uniforms) or not",optional:!0,defaultValue:"false"}],typeParams:[]}],properties:[{id:415,name:"_colorspace",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L152",comment:"The colorspace of this input param",defaultValue:"ColorSpace.AUTO",type:{name:"ColorSpace",lib:"nanogl-pbr",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ColorSpace.ts#L4"},tags:["protected"]}],accessors:[{id:416,name:"colorspace",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L168",setter:{name:"set colorspace",comment:`Set the colorspace of this input param value.
The code will be invalidated if the value changes,
and need to be re-generated.`,tags:[],type:{name:"void"},params:[{id:419,name:"c",type:{name:"ColorSpace",lib:"nanogl-pbr",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ColorSpace.ts#L4"},tags:[],comment:"The new colorspace"}],typeParams:[]},getter:{name:"get colorspace",comment:"Get the colorspace of this input param.",tags:[],type:{name:"ColorSpace",lib:"nanogl-pbr",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ColorSpace.ts#L4"},typeParams:[]}}],methods:[],extends:[{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12"}],implements:null},{id:5,name:"BoundingSphere",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Bounds.ts#L11",comment:"This class represents a 3D bounding sphere.",tags:[],constructors:[{id:10,name:"BoundingSphere",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Bounds.ts#L11",tags:[],type:{name:"BoundingSphere",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Bounds.ts#L11"},typeParams:[]}],properties:[{id:12,name:"center",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Bounds.ts#L16",comment:"The center of the bounding sphere",defaultValue:"vec3(0, 0, 0)",type:{name:"vec3"},tags:["readonly"]},{id:13,name:"radius",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Bounds.ts#L21",comment:"The radius of the bounding sphere",defaultValue:"vec3(0, 0, 0)",type:{name:"vec3"},tags:["readonly"]}],accessors:[],methods:[{id:6,name:"fromBounds",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Bounds.ts#L29",comment:`Compute a bounding sphere from given Bounds,
and write the result to the out BoundingSphere.`,tags:["static"],type:{name:"void"},params:[{id:8,name:"out",type:{name:"BoundingSphere",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Bounds.ts#L11"},tags:[],comment:"The BoundingSphere to write the result to"},{id:9,name:"b",type:{name:"Bounds",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Bounds.ts#L46"},tags:[],comment:"The Bounds to use"}],typeParams:[]}],extends:null,implements:null},{id:14,name:"Bounds",originalName:"default",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Bounds.ts#L46",comment:"This class represents a 3D bounding box.",tags:[],constructors:[{id:25,name:"Bounds",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Bounds.ts#L55",tags:[],type:{name:"Bounds",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Bounds.ts#L46"},typeParams:[]}],properties:[{id:27,name:"_mmData",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Bounds.ts#L48",comment:"The minimum & maximum positions data",type:{name:"Float32Array"},tags:["protected"]},{id:29,name:"max",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Bounds.ts#L53",comment:"The maximum position of the bounds",type:{name:"vec3"},tags:["readonly"]},{id:28,name:"min",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Bounds.ts#L51",comment:"The minimum position of the bounds",type:{name:"vec3"},tags:["readonly"]}],accessors:[],methods:[{id:32,name:"copyFrom",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Bounds.ts#L73",comment:"Copy the bounds from another Bounds instance.",tags:[],type:{name:"void"},params:[{id:34,name:"b",type:{name:"Bounds",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Bounds.ts#L46"},tags:[],comment:"The bounds to copy from"}],typeParams:[]},{id:35,name:"fromMinMax",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Bounds.ts#L83",comment:"Set the bounds from min and max positions.",tags:[],type:{name:"void"},params:[{id:37,name:"min",type:{listType:"union",list:[{name:"number",isArray:!0},{name:"Float32Array"}]},tags:[],comment:"The minimum position"},{id:38,name:"max",type:{listType:"union",list:[{name:"number",isArray:!0},{name:"Float32Array"}]},tags:[],comment:"The maximum position"}],typeParams:[]},{id:30,name:"zero",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Bounds.ts#L64",comment:`Set the bounds to zero.
Both the minimum and the maximum positions are set to zero.`,tags:[],type:{name:"void"},typeParams:[]},{id:20,name:"transform",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Bounds.ts#L109",comment:`Transform the given Bounds with a matrix,
and write the result to the out Bounds.`,tags:["static"],type:{name:"void"},params:[{id:22,name:"out",type:{name:"Bounds",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Bounds.ts#L46"},tags:[],comment:"The Bounds to write the result to"},{id:23,name:"bounds",type:{name:"Bounds",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Bounds.ts#L46"},tags:[],comment:"The Bounds to transform"},{id:24,name:"matrix",type:{name:"mat4"},tags:[],comment:"The matrix to use for the transformation"}],typeParams:[]},{id:15,name:"union",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Bounds.ts#L94",comment:"Compute the union of given Bounds, and write the result to the out Bounds.",tags:["static"],type:{name:"void"},params:[{id:17,name:"out",type:{name:"Bounds",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Bounds.ts#L46"},tags:[],comment:"The Bounds to write the result to"},{id:18,name:"a",type:{name:"Bounds",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Bounds.ts#L46"},tags:[],comment:"The first Bounds to use"},{id:19,name:"b",type:{name:"Bounds",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Bounds.ts#L46"},tags:[],comment:"The second Bounds to use"}],typeParams:[]}],extends:null,implements:null},{id:40,name:"Chunk",originalName:"default",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12",comment:`This class represents a chunk of glsl code
that can be included in a shader program.

It is the base class for all chunks.`,tags:["abstract"],constructors:[{id:41,name:"Chunk",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L39",tags:[],type:{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12"},params:[{id:43,name:"hasCode",type:{name:"boolean"},tags:["optional"],comment:"Whether this chunk needs shader code generation or not",optional:!0,defaultValue:"false"},{id:44,name:"hasSetup",type:{name:"boolean"},tags:["optional"],comment:"Whether this chunk needs program setup (for uniforms) or not",optional:!0,defaultValue:"false"}],typeParams:[]}],properties:[{id:50,name:"_children",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L33",comment:"The list of children for this chunk",type:{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12",isArray:!0},tags:["protected"]},{id:46,name:"_hasCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L17",comment:"Whether this chunk needs shader code generation or not",type:{name:"boolean"},tags:["protected"]},{id:47,name:"_hasSetup",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L20",comment:"Whether this chunk needs program setup (for uniforms) or not",type:{name:"boolean"},tags:["protected"]},{id:48,name:"_invalid",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L27",comment:`Whether the program setup is invalid or not.

If the setup is invalid, the program needs to reupload uniforms.`,type:{name:"boolean"},tags:["protected"]},{id:45,name:"_lists",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L14",comment:"The list of all ChunkCollections this chunk is in",type:{name:"Set",data:{arguments:[{name:"ChunkCollection",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunkCollection.ts#L9"}]}},tags:["private"]},{id:49,name:"_ref",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L30",comment:"The reference to the chunk this is a proxy of",type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12"}]},tags:["protected"]}],accessors:[{id:68,name:"hasCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L130",getter:{name:"get hasCode",comment:"Whether this chunk needs shader code generation or not.",tags:[],type:{name:"boolean"},typeParams:[]}},{id:70,name:"hasSetup",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L141",getter:{name:"get hasSetup",comment:"Whether this chunk needs program setup (for uniforms) or not.",tags:[],type:{name:"boolean"},typeParams:[]}},{id:72,name:"isInvalid",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L152",getter:{name:"get isInvalid",comment:"Whether the program setup is invalid or not.",tags:[],type:{name:"boolean"},typeParams:[]}}],methods:[{id:74,name:"_genCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L166",comment:`The method called by [genCode](/api/nanogl-pbr/classes/Chunk#item-65)
to generate the shader code for this chunk.`,tags:["protected","abstract"],type:{name:"void"},params:[{id:76,name:"slots",type:{name:"ChunksSlots",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L88"},tags:[],comment:"The slots to add the code to"}],typeParams:[]},{id:58,name:"addChild",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L88",comment:"Add a child to this chunk.",tags:[],type:{name:"T"},params:[{id:61,name:"child",type:{name:"T"},tags:[],comment:"The chunk to add to children"}],typeParams:[{id:60,name:"T",type:{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12"},tags:[],comment:"The type of the chunk we are adding"}]},{id:80,name:"addList",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L180",comment:"Add the given ChunkCollection to the list of collections this chunk is in.",tags:[],type:{name:"void"},params:[{id:82,name:"list",type:{name:"ChunkCollection",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunkCollection.ts#L9"},tags:[],comment:"The ChunkCollection to add"}],typeParams:[]},{id:51,name:"collectChunks",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L56",comment:"Add this chunk and all its children to given arrays",tags:[],type:{name:"void"},params:[{id:53,name:"all",type:{name:"Set",data:{arguments:[{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12"}]}},tags:[],comment:"The array in which to add the chunks, including the proxies and their reference"},{id:54,name:"actives",type:{name:"Set",data:{arguments:[{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12"}]}},tags:[],comment:"The array in which to add the chunks, replacing the proxies by their reference"}],typeParams:[]},{id:93,name:"createProxy",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L226",comment:"Create a proxy of this chunk.",tags:[],type:{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12"},typeParams:[]},{id:55,name:"detectCyclicDependency",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L75",comment:`Detect cyclic dependency for the given chunk with this chunk.

Cyclic dependency is checked when adding children or creating proxies.`,tags:[],type:{name:"boolean"},params:[{id:57,name:"chunk",type:{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12"},tags:[],comment:"The chunk to check for cyclic dependency"}],typeParams:[]},{id:65,name:"genCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L119",comment:"Generate the shader code for this chunk.",tags:[],type:{name:"void"},params:[{id:67,name:"slots",type:{name:"ChunksSlots",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L88"},tags:[],comment:"The slots to add the code to"}],typeParams:[]},{id:88,name:"invalidateCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L204",comment:"Invalidate the code of all ChunkCollections this chunk is in.",tags:[],type:{name:"void"},typeParams:[]},{id:86,name:"invalidateList",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L195",comment:"Invalidate the list of all ChunkCollections this chunk is in.",tags:[],type:{name:"void"},typeParams:[]},{id:90,name:"proxy",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L214",comment:"Make this chunk a proxy of the given chunk.",tags:[],type:{name:"void"},params:[{id:92,name:"ref",type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12"}]},tags:[],comment:"The chunk to proxy",defaultValue:"null"}],typeParams:[]},{id:62,name:"removeChild",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L105",comment:"Remove a child from this chunk.",tags:[],type:{name:"void"},params:[{id:64,name:"child",type:{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12"},tags:[],comment:"The chunk to remove from children"}],typeParams:[]},{id:83,name:"removeList",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L188",comment:"Remove the given ChunkCollection from the list of collections this chunk is in.",tags:[],type:{name:"void"},params:[{id:85,name:"list",type:{name:"ChunkCollection",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunkCollection.ts#L9"},tags:[],comment:"The ChunkCollection to remove"}],typeParams:[]},{id:77,name:"setup",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L172",comment:"Setup the given program for this chunk.",tags:[],type:{name:"void"},params:[{id:79,name:"prg",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[],comment:"The program to setup"}],typeParams:[]}],extends:null,implements:null},{id:96,name:"ChunkCollection",originalName:"default",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunkCollection.ts#L9",comment:"This class manages a collection of chunks.",tags:[],constructors:[{id:97,name:"ChunkCollection",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunkCollection.ts#L9",tags:[],type:{name:"ChunkCollection",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunkCollection.ts#L9"},typeParams:[]}],properties:[{id:103,name:"_actives",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunkCollection.ts#L27",comment:`The list of all chunks and their children in this collection,
without the proxies`,type:{name:"Set",data:{arguments:[{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12"}]}},tags:[]},{id:102,name:"_all",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunkCollection.ts#L22",comment:`The list of all chunks and their children
in this collection`,type:{name:"Set",data:{arguments:[{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12"}]}},tags:[]},{id:107,name:"_cachedSlots",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunkCollection.ts#L40",comment:`The cached chunks slots for this collection.
This is used to avoid generating the code multiple times
when it is not invalid.`,defaultValue:"null",type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"ChunksSlots",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L88"}]},tags:[]},{id:104,name:"_chunks",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunkCollection.ts#L29",comment:"The list of all chunks in this collection",defaultValue:"[]",type:{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12",isArray:!0},tags:[]},{id:106,name:"_codes",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunkCollection.ts#L33",comment:"The list of all chunks that need shader code generation",defaultValue:"[]",type:{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12",isArray:!0},tags:[]},{id:100,name:"_invalidCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunkCollection.ts#L15",comment:"Whether the code is invalid or not",defaultValue:"true",type:{name:"boolean"},tags:["private"]},{id:99,name:"_invalidList",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunkCollection.ts#L13",comment:"Whether the list of chunks is invalid or not",defaultValue:"true",type:{name:"boolean"},tags:["private"]},{id:101,name:"_revision",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunkCollection.ts#L17",comment:"The revision number for this collection",defaultValue:"0",type:{name:"number"},tags:["private"]},{id:105,name:"_setups",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunkCollection.ts#L31",comment:"The list of all chunks that need program setup",defaultValue:"[]",type:{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12",isArray:!0},tags:[]}],accessors:[],methods:[{id:128,name:"_collectChunks",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunkCollection.ts#L136",comment:`Collect all chunks in this collection and setup the
lists of chunks accordingly.

This sets the following lists with the current the chunks and their children :
- [_all](/api/nanogl-pbr/classes/ChunkCollection#item-102)
- [_actives](/api/nanogl-pbr/classes/ChunkCollection#item-103)
- [_setups](/api/nanogl-pbr/classes/ChunkCollection#item-105)
- [_codes](/api/nanogl-pbr/classes/ChunkCollection#item-106)`,tags:[],type:{name:"void"},typeParams:[]},{id:108,name:"add",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunkCollection.ts#L48",comment:"Add a chunk to this collection.",tags:[],type:{name:"T"},params:[{id:111,name:"chunk",type:{name:"T"},tags:[],comment:"The chunk to add"}],typeParams:[{id:110,name:"T",type:{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12"},tags:[],comment:"The type of the chunk we are adding"}]},{id:117,name:"addChunks",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunkCollection.ts#L81",comment:"Add multiple chunks to this collection.",tags:[],type:{name:"void"},params:[{id:119,name:"chunks",type:{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12",isArray:!0},tags:[],comment:"The chunks to add"}],typeParams:[]},{id:115,name:"dispose",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunkCollection.ts#L71",comment:"Dispose of this collection.",tags:[],type:{name:"void"},typeParams:[]},{id:133,name:"getCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunkCollection.ts#L185",comment:"Get the shader code for this collection.",tags:[],type:{name:"ChunksSlots",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L88"},params:[{id:135,name:"base",type:{name:"ChunksSlots",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L88"},tags:["optional"],comment:"The base slots to merge the code into",optional:!0}],typeParams:[]},{id:126,name:"getRevision",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunkCollection.ts#L122",comment:"Get the current revision for this collection.",tags:[],type:{name:"number"},typeParams:[]},{id:122,name:"invalidateCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunkCollection.ts#L105",comment:"Invalidate the list of code.",tags:[],type:{name:"void"},typeParams:[]},{id:120,name:"invalidateList",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunkCollection.ts#L97",comment:"Invalidate the list of chunks.",tags:[],type:{name:"void"},typeParams:[]},{id:124,name:"isInvalid",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunkCollection.ts#L115",comment:"Know whether this collection is invalid or not.",tags:[],type:{name:"boolean"},typeParams:[]},{id:112,name:"remove",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunkCollection.ts#L60",comment:"Remove a chunk from this collection.",tags:[],type:{name:"void"},params:[{id:114,name:"chunk",type:{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12"},tags:[],comment:"The chunk to remove"}],typeParams:[]},{id:130,name:"setupProgram",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunkCollection.ts#L175",comment:"Setup the given program for the chunks that need it.",tags:[],type:{name:"void"},params:[{id:132,name:"prg",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[],comment:"The program to setup"}],typeParams:[]}],extends:null,implements:null},{id:143,name:"ChunkSlot",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L25",comment:"This class manages shader chunk slots.",tags:[],constructors:[{id:144,name:"ChunkSlot",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L40",tags:[],type:{name:"ChunkSlot",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L25"},params:[{id:146,name:"key",type:{name:"string"},tags:[],comment:"The id of the slot"}],typeParams:[]}],properties:[{id:151,name:"_code",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L35",comment:"The complete code for this slot",defaultValue:"''",type:{name:"string"},tags:["private"]},{id:148,name:"_hash",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L29",comment:"The complete hashed code for this slot",defaultValue:"0",type:{name:"number"},tags:["private"]},{id:150,name:"codes",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L33",comment:"The list of chunk code",defaultValue:"[]",type:{name:"HashedChunkCode",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L6",isArray:!0},tags:["private"]},{id:149,name:"hashset",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L31",comment:"The list of hashed chunk code",type:{name:"Set",data:{arguments:[{name:"number"}]}},tags:["private"]},{id:147,name:"key",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L27",comment:"The id of this slot",type:{name:"string"},tags:["readonly"]}],accessors:[{id:158,name:"code",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L70",getter:{name:"get code",comment:"Get the complete code for this slot.",tags:[],type:{name:"string"},typeParams:[]}},{id:160,name:"hash",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L77",getter:{name:"get hash",comment:"Get the complete hashed code for this slot.",tags:[],type:{name:"number"},typeParams:[]}}],methods:[{id:152,name:"add",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L48",comment:"Add chunk code to this slot.",tags:[],type:{name:"void"},params:[{id:154,name:"code",type:{name:"HashedChunkCode",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L6"},tags:[],comment:"The chunk code to add"}],typeParams:[]},{id:155,name:"merge",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L61",comment:"Merge all code from given slot into this one.",tags:[],type:{name:"void"},params:[{id:157,name:"other",type:{name:"ChunkSlot",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L25"},tags:[],comment:"The slot to merge into this one"}],typeParams:[]}],extends:null,implements:null},{id:162,name:"ChunksSlots",originalName:"default",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L88",comment:"This class manages the lists of shader chunk slots.",tags:[],constructors:[{id:163,name:"ChunksSlots",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L97",tags:[],type:{name:"ChunksSlots",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L88"},typeParams:[]}],properties:[{id:165,name:"slots",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L90",comment:"The list of chunk slots",type:{name:"ChunkSlot",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L25",isArray:!0},tags:[]},{id:166,name:"slotsMap",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L92",comment:"The list of id / chunk slots pairs",type:{name:"Record",data:{arguments:[{name:"string"},{name:"ChunkSlot",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L25"}]}},tags:[]}],accessors:[],methods:[{id:173,name:"add",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L134",comment:"Add chunk code to a slot.",tags:[],type:{name:"void"},params:[{id:175,name:"slotId",type:{name:"string"},tags:[],comment:"The id for the slot where code will be inserted"},{id:176,name:"code",type:{name:"string"},tags:[],comment:"The shader code to add"}],typeParams:[]},{id:168,name:"getHash",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L105",comment:"Get the hashed code for this ChunksSlots.",tags:[],type:{name:"number"},typeParams:[]},{id:170,name:"getSlot",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L117",comment:"Get a slot by its id.",tags:[],type:{name:"ChunkSlot",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L25"},params:[{id:172,name:"id",type:{name:"string"},tags:[],comment:"The id of the slot"}],typeParams:[]},{id:177,name:"merge",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L142",comment:"Merge all hashed code from given ChunkSlots into this one.",tags:[],type:{name:"void"},params:[{id:179,name:"other",type:{name:"ChunksSlots",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L88"},tags:[],comment:"The ChunkSlots to merge"}],typeParams:[]}],extends:null,implements:null},{id:710,name:"Constant",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L573",comment:`This class manages constant input parameters
for shaders.

It handles the definition of an constant, and its colorspace.`,tags:[],constructors:[{id:711,name:"Constant",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L588",tags:[],type:{name:"Constant",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L573"},params:[{id:713,name:"value",type:{listType:"union",list:[{name:"number"},{name:"ArrayLike",data:{arguments:[{name:"number"}]}}]},tags:[],comment:"The value of the constant"}],typeParams:[]}],properties:[{id:719,name:"_hash",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L583",comment:"The hash of the the constant",defaultValue:"0",type:{name:"number"},tags:[]},{id:715,name:"name",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L577",comment:"The name of the input param",defaultValue:"''",type:{name:"string"},tags:[]},{id:714,name:"ptype",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L575",comment:"The type of the input param",defaultValue:"ParamType.CONSTANT",type:{name:"CONSTANT",lib:"nanogl-pbr",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L105",parent:{kind:"Enumeration",name:"ParamType"}},tags:["readonly"]},{id:716,name:"size",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L578",comment:"The size of the input param value",defaultValue:"1",type:{name:"InputSize",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L30"},tags:[]},{id:717,name:"token",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L579",comment:`The name of the variable created for this input param,
used to access the value in the shader code.`,defaultValue:"''",type:{name:"string"},tags:[]},{id:718,name:"value",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L581",comment:"The value of the constant",defaultValue:"0",type:{listType:"union",list:[{name:"number"},{name:"ArrayLike",data:{arguments:[{name:"number"}]}}]},tags:[]}],accessors:[],methods:[{id:723,name:"_genCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L622",comment:"This method is not used for input params.",tags:["protected"],type:{name:"void"},params:[{id:725,name:"slots",type:{name:"ChunksSlots",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L88"},tags:[]}],typeParams:[]},{id:730,name:"_stringifyValue",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L645",comment:"Stringify the value of this constant input param.",tags:[],type:{name:"string"},typeParams:[]},{id:726,name:"genInputCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L636",comment:`Generate the shader code for this constant param and
add it to the given slots in the input attached shader type.

The constant can be accessed with the token of the input param,
prepended with "RAW", in the shader.
The constant value, with transformed colorspace,
can be accessed with the token of the input param in the shader.`,tags:[],type:{name:"void"},params:[{id:728,name:"slots",type:{name:"ChunksSlots",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L88"},tags:[],comment:"The slots to add the code to"},{id:729,name:"input",type:{name:"Input",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664"},tags:[],comment:"The input this param is attached to"}],typeParams:[]},{id:720,name:"set",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L599",comment:`Set the value of this constant input param.
The code will be invalidated if the value changes,
and need to be re-generated.`,tags:[],type:{name:"void"},params:[{id:722,name:"value",type:{listType:"union",list:[{name:"number"},{name:"ArrayLike",data:{arguments:[{name:"number"}]}}]},tags:[],comment:"The new value"}],typeParams:[]}],extends:[{name:"BaseParams",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L150"},{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12"}],implements:{name:"IInputParam",lib:"nanogl-pbr",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L115"}},{id:192,name:"DepthPass",originalName:"default",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/DepthPass.ts#L25",comment:"This class manages the depth pass of a material.",tags:[],constructors:[{id:193,name:"DepthPass",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/DepthPass.ts#L34",tags:[],type:{name:"DepthPass",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/DepthPass.ts#L25"},params:[{id:195,name:"gl",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[],comment:"The webgl context this DepthPass belongs to"}],typeParams:[]}],properties:[{id:196,name:"depthFormat",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/DepthPass.ts#L27",comment:"The depth pass format",type:{name:"DepthFormatEnum",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/DepthFormatEnum.ts#L16"},tags:[]},{id:197,name:"precision",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/DepthPass.ts#L29",comment:"The shader float precision",type:{name:"ShaderPrecision",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ShaderPrecision.ts#L14"},tags:[]}],accessors:[],methods:[{id:201,name:"prepare",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/DepthPass.ts#L56",comment:"Prepare the given program for this pass.",tags:[],type:{name:"void"},params:[{id:203,name:"prg",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[],comment:"The program to setup"},{id:204,name:"node",type:{name:"Node",lib:"nanogl-node",kind:"Class",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L18"},tags:[],comment:"The node to use for transforms"},{id:205,name:"camera",type:{name:"Camera",lib:"nanogl-camera",kind:"Class",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/index.ts#L18",data:{arguments:[{name:"ICameraLens",lib:"nanogl-camera",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ICameraLens.ts#L4"}]}},tags:[],comment:"The camera to use for projection"}],typeParams:[]},{id:198,name:"setLightSetup",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/DepthPass.ts#L52",comment:"Set the light setup to use for this pass.",tags:[],type:{name:"void"},params:[{id:200,name:"setup",type:{name:"LightSetup",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/LightSetup.ts#L17"},tags:[],comment:"The light setup to use for this pass"}],typeParams:[]}],extends:[{name:"MaterialPass",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MaterialPass.ts#L14"}],implements:null},{id:2096,name:"DirectionalLight",originalName:"default",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/DirectionalLight.ts#L15",comment:"This class manages directional lights.",tags:[],constructors:[{id:2097,name:"DirectionalLight",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/DirectionalLight.ts#L28",tags:[],type:{name:"DirectionalLight",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/DirectionalLight.ts#L15"},typeParams:[]}],properties:[{id:2101,name:"_camera",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/DirectionalLight.ts#L25",comment:"The camera to use when rendering the shadowmap",defaultValue:"null",type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"Camera",lib:"nanogl-camera",kind:"Class",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/index.ts#L18",data:{arguments:[{name:"OrthographicLens",lib:"nanogl-camera",kind:"Class",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ortho-lens.ts#L7"}]}}]},tags:[]},{id:2100,name:"_shadowmapNearOffset",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/DirectionalLight.ts#L23",comment:"The amount to offset the camera near when projecting shadow map",defaultValue:"0",type:{name:"number"},tags:[]},{id:2099,name:"_type",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/DirectionalLight.ts#L17",comment:"The type of lighting",defaultValue:"LightType.DIRECTIONAL",type:{name:"DIRECTIONAL",lib:"nanogl-pbr",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/LightType.ts#L4",parent:{kind:"Enumeration",name:"LightType"}},tags:["readonly"]}],accessors:[],methods:[{id:2107,name:"_createCamera",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/DirectionalLight.ts#L50",comment:"Create a camera suitable to render the shadowmap.",tags:[],type:{name:"Camera",lib:"nanogl-camera",kind:"Class",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/index.ts#L18",data:{arguments:[{name:"OrthographicLens",lib:"nanogl-camera",kind:"Class",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ortho-lens.ts#L7"}]}},typeParams:[]},{id:2105,name:"getTexelBiasVector",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/DirectionalLight.ts#L43",comment:"Get the texel bias vector used to sample the shadowmap.",tags:[],type:{name:"Float32Array"},typeParams:[]},{id:2102,name:"projectionFromBounds",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/DirectionalLight.ts#L34",comment:`Adjust the camera's projection of the light's shadowmap
to fit the given bounds.`,tags:[],type:{name:"void"},params:[{id:2104,name:"bounds",type:{name:"Bounds",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Bounds.ts#L46"},tags:[],comment:"The bounds to use"}],typeParams:[]}],extends:[{name:"PunctualLight",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PunctualLight.ts#L29"},{name:"Light",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L15"},{name:"Node",lib:"nanogl-node",kind:"Class",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L18"}],implements:{name:"ShadowMappedLight",lib:"nanogl-pbr",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L36"}},{id:2198,name:"DirectionalLightModel",originalName:"default",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/DirectionalLightModel.ts#L13",comment:"This class manages directional light models.",tags:[],constructors:[{id:2199,name:"DirectionalLightModel",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/DirectionalLightModel.ts#L26",tags:[],type:{name:"DirectionalLightModel",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/DirectionalLightModel.ts#L13"},params:[{id:2201,name:"code",type:{name:"GlslCode",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/GlslCode.ts#L2"},tags:[],comment:"The shader code template for this light model"},{id:2202,name:"preCode",type:{name:"GlslCode",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/GlslCode.ts#L2"},tags:[],comment:"The shader pre-code template for this light model"}],typeParams:[]}],properties:[{id:2205,name:"_colors",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/DirectionalLightModel.ts#L20",comment:"The color for each light",type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"Float32Array"}]},tags:[]},{id:2204,name:"_directions",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/DirectionalLightModel.ts#L18",comment:"The direction for each light",type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"Float32Array"}]},tags:[]},{id:2203,name:"type",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/DirectionalLightModel.ts#L15",comment:"The type of lighting",defaultValue:"LightType.DIRECTIONAL",type:{name:"DIRECTIONAL",lib:"nanogl-pbr",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/LightType.ts#L4",parent:{kind:"Enumeration",name:"LightType"}},tags:["readonly"]}],accessors:[],methods:[{id:2211,name:"allocate",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/DirectionalLightModel.ts#L48",comment:"Allocate the directions & colors arrays for the given number of lights.",tags:[],type:{name:"void"},params:[{id:2213,name:"n",type:{name:"number"},tags:[],comment:"The number of lights"}],typeParams:[]},{id:2206,name:"genCodePerLights",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/DirectionalLightModel.ts#L35",comment:"Generate the shader code for a given light in this LightModel.",tags:[],type:{name:"string"},params:[{id:2208,name:"light",type:{name:"Light",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L15"},tags:[],comment:"The light to generate the code for"},{id:2209,name:"index",type:{name:"number"},tags:[],comment:"The index of the light"},{id:2210,name:"shadowIndex",type:{name:"number"},tags:[],comment:"The shadow index of the light"}],typeParams:[]},{id:2214,name:"prepare",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/DirectionalLightModel.ts#L57",comment:"Prepare the light model for rendering.",tags:[],type:{name:"void"},params:[{id:2216,name:"gl",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[],comment:"The webgl context to use"},{id:2217,name:"model",type:{name:"StandardModel",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L62"},tags:[],comment:"The parent light model"}],typeParams:[]},{id:2218,name:"setup",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/DirectionalLightModel.ts#L84",comment:"Setup the given program for this light model.",tags:[],type:{name:"void"},params:[{id:2220,name:"prg",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[],comment:"The program to setup"}],typeParams:[]}],extends:[{name:"ShadowMappedLightModel",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/AbstractLightModel.ts#L114"},{name:"AbstractLightModel",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/AbstractLightModel.ts#L14"},{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12"}],implements:null},{id:1597,name:"DynamicTexCoord",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L233",comment:`This class manages the code generation for
dynamic texture coordinates in a shader chunk.`,tags:[],constructors:[{id:1613,name:"DynamicTexCoord",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L249",tags:[],type:{name:"DynamicTexCoord",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L233"},params:[{id:1615,name:"attrib",type:{name:"string"},tags:["optional"],comment:"The name of the attribute for the texture coordinates",optional:!0,defaultValue:"_DefaultTexCoord"}],typeParams:[]}],properties:[{id:1617,name:"_rotateScalesInput",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L237",comment:"The shader input for rotation & scale",type:{name:"Input",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664"},tags:["private","readonly"]},{id:1619,name:"_rotationScaleUniform",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L241",comment:"The shader uniform attached to the input for rotation & scale",type:{name:"Uniform",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L334"},tags:["private","readonly"]},{id:1616,name:"_translateInput",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L235",comment:"The shader input for translation",type:{name:"Input",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664"},tags:["private","readonly"]},{id:1618,name:"_translateUniform",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L239",comment:"The shader uniform attached to the input for translation",type:{name:"Uniform",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L334"},tags:["private","readonly"]},{id:1598,name:"_UID",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L244",comment:"The unique id for the texture coords",defaultValue:"0",type:{name:"number"},tags:["private","static"]}],accessors:[],methods:[{id:1622,name:"getTransformCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L267",comment:"Get the code for the texture coords transformation.",tags:[],type:{name:"string"},typeParams:[]},{id:1628,name:"rotate",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L287",comment:"Set the rotation of the texture coordinates.",tags:[],type:{name:"DynamicTexCoord",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L233"},params:[{id:1630,name:"rad",type:{name:"number"},tags:[],comment:"The rotation (in radians)"}],typeParams:[]},{id:1631,name:"scale",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L298",comment:"Set the scale of the texture coordinates.",tags:[],type:{name:"DynamicTexCoord",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L233"},params:[{id:1633,name:"x",type:{name:"number"},tags:[],comment:"The x scale"},{id:1634,name:"y",type:{name:"number"},tags:["optional"],comment:"The y scale",optional:!0,defaultValue:"x"}],typeParams:[]},{id:1635,name:"setMatrix",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L309",comment:"Set the transform matrix of the texture coordinates.",tags:[],type:{name:"void"},params:[{id:1637,name:"m",type:{name:"mat3"},tags:[],comment:"The matrix to use"}],typeParams:[]},{id:1624,name:"translate",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L276",comment:"Set the translation of the texture coordinates.",tags:[],type:{name:"DynamicTexCoord",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L233"},params:[{id:1626,name:"x",type:{name:"number"},tags:[],comment:"The x translation"},{id:1627,name:"y",type:{name:"number"},tags:[],comment:"The y translation"}],typeParams:[]},{id:1638,name:"updateTransform",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L321",comment:"Update the shader uniforms with the current transform.",tags:[],type:{name:"void"},typeParams:[]},{id:1620,name:"varying",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L263",comment:"Get the varying name for the texture coords.",tags:[],type:{name:"string"},typeParams:[]}],extends:[{name:"TexCoord",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L153"},{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12"}],implements:null},{id:212,name:"Enum",originalName:"default",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Enum.ts#L20",comment:`This class manages the definition of a constant in a shader chunk,
that can only take from a list of values.`,tags:[],constructors:[{id:213,name:"Enum",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Enum.ts#L44",tags:[],type:{name:"Enum",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Enum.ts#L20",data:{arguments:[{name:"T"}]}},params:[{id:216,name:"name",type:{name:"string"},tags:[],comment:"The name of the Enum"},{id:217,name:"penum",type:{name:"T"},tags:[],comment:"The list of values available"}],typeParams:[{id:215,name:"T",type:{name:"string",isArray:!0,data:{operator:"readonly"}},tags:[],comment:"The type of the list of values"}]}],properties:[{id:223,name:"_accesDef",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Enum.ts#L37",comment:`The shader code that defines the accessor function :
returns wether the current value is equal to the given value or not`,type:{name:"string"},tags:["private"]},{id:222,name:"_enumDefs",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Enum.ts#L32",comment:"The shader code that defines the available values",type:{name:"string"},tags:["private"]},{id:220,name:"_val",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Enum.ts#L27",comment:"The current value",type:{name:"T",isIndexed:!0,data:{indexType:{name:"number"}}},tags:["private"]},{id:221,name:"_valIndex",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Enum.ts#L29",comment:"The index in the list of the current value",type:{name:"number"},tags:["private"]},{id:218,name:"name",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Enum.ts#L22",comment:"The name of the Enum",type:{name:"string"},tags:[]},{id:219,name:"values",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Enum.ts#L24",comment:"The list of values available",type:{name:"T"},tags:[]}],accessors:[],methods:[{id:229,name:"_genCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Enum.ts#L112",comment:"Generate the shader code for this Enum.",example:"For an Enum defined as :\n```js\nnew Enum('MyEnum', ['A', 'B', 'C'])\n```\n\nThe generated code will be :\n```glsl\n#define A 1\n#define B 2\n#define C 3\n#define VAL_MyEnum A\n#define MyEnum(k) VAL_MyEnum == k\n```",tags:[],type:{name:"void"},params:[{id:231,name:"slots",type:{name:"ChunksSlots",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L88"},tags:[],comment:"The slots to add the code to"}],typeParams:[]},{id:226,name:"set",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Enum.ts#L73",comment:`Set the current value.

The code will be invalidated if the value changes,
and need to be re-generated.`,tags:[],type:{name:"void"},params:[{id:228,name:"val",type:{name:"T",isIndexed:!0,data:{indexType:{name:"number"}}},tags:[],comment:"The new value"}],typeParams:[]},{id:224,name:"value",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Enum.ts#L61",comment:"Get the current value.",tags:[],type:{name:"T",isIndexed:!0,data:{indexType:{name:"number"}}},typeParams:[]}],extends:[{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12"}],implements:null},{id:280,name:"Flag",originalName:"default",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Flag.ts#L13",comment:`This class manages the definition of a constant in a shader chunk,
with a boolean value.`,tags:[],constructors:[{id:281,name:"Flag",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Flag.ts#L25",tags:[],type:{name:"Flag",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Flag.ts#L13",data:{arguments:[{name:"T"}]}},params:[{id:284,name:"name",type:{name:"T"},tags:[],comment:"The name of the flag"},{id:285,name:"val",type:{name:"boolean"},tags:["optional"],comment:"The initial value",optional:!0,defaultValue:"false"}],typeParams:[{id:283,name:"T",type:{name:"string"},tags:[],comment:"The name of the flag",default:{name:"string"}}]}],properties:[{id:287,name:"_val",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Flag.ts#L18",comment:"The current value",type:{name:"boolean"},tags:["private"]},{id:286,name:"name",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Flag.ts#L15",comment:"The name of the flag",type:{name:"T"},tags:[]}],accessors:[{id:295,name:"value",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Flag.ts#L67",getter:{name:"get value",comment:"Get the current value.",tags:[],type:{name:"boolean"},typeParams:[]}}],methods:[{id:297,name:"_genCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Flag.ts#L87",comment:"Generate the shader code for this Flag.",example:"For a Flag defined as :\n```js\nnew Flag('MyFlag', true)\n```\n\nThe generated code will be :\n```glsl\n#define MyFlag 1\n```",tags:[],type:{name:"void"},params:[{id:299,name:"slots",type:{name:"ChunksSlots",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L88"},tags:[],comment:"The slots to add the code to"}],typeParams:[]},{id:290,name:"disable",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Flag.ts#L45",comment:`Disable the flag.
This sets the value to false.`,tags:[],type:{name:"void"},typeParams:[]},{id:288,name:"enable",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Flag.ts#L37",comment:`Enable the flag.
This sets the value to true.`,tags:[],type:{name:"void"},typeParams:[]},{id:292,name:"set",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Flag.ts#L57",comment:`Set the current value.

The code will be invalidated if the value changes,
and need to be re-generated.`,tags:[],type:{name:"void"},params:[{id:294,name:"val",type:{name:"boolean"},tags:["optional"],comment:"The new value",optional:!0,defaultValue:"false"}],typeParams:[]}],extends:[{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12"}],implements:null},{id:371,name:"HashBuilder",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Hash.ts#L170",comment:"This class provides helpers to build a Hash.",tags:[],constructors:[{id:372,name:"HashBuilder",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Hash.ts#L170",tags:[],type:{name:"HashBuilder",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Hash.ts#L170"},typeParams:[]}],properties:[{id:374,name:"_hash",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Hash.ts#L172",comment:"The current hash",defaultValue:"0",type:{name:"number"},tags:["private"]}],accessors:[],methods:[{id:386,name:"get",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Hash.ts#L219",comment:`Get the current Hash.
This will reset the HashBuilder.`,tags:[],type:{name:"number"},typeParams:[]},{id:380,name:"hashNumber",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Hash.ts#L199",comment:`Hash a number.
If the HashBuilder already has a Hash,
the new Hash will be merged into the previous one.`,tags:[],type:{name:"HashBuilder",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Hash.ts#L170"},params:[{id:382,name:"n",type:{name:"number"},tags:[],comment:"The number to hash"}],typeParams:[]},{id:377,name:"hashString",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Hash.ts#L188",comment:`Hash a string.
If the HashBuilder already has a Hash,
the new Hash will be merged into the previous one.`,tags:[],type:{name:"HashBuilder",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Hash.ts#L170"},params:[{id:379,name:"str",type:{name:"string"},tags:[],comment:"The string to hash"}],typeParams:[]},{id:383,name:"hashView",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Hash.ts#L210",comment:`Hash an ArrayBufferView.
If the HashBuilder already has a Hash,
the new Hash will be merged into the previous one.`,tags:[],type:{name:"HashBuilder",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Hash.ts#L170"},params:[{id:385,name:"a",type:{name:"ArrayBufferView"},tags:[],comment:"The ArrayBufferView to hash"}],typeParams:[]},{id:375,name:"start",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Hash.ts#L177",comment:"Start a new Hash.",tags:[],type:{name:"HashBuilder",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Hash.ts#L170"},typeParams:[]}],extends:null,implements:null},{id:137,name:"HashedChunkCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L6",comment:"This class manages shader chunk code and hashing.",tags:[],constructors:[{id:138,name:"HashedChunkCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L15",tags:[],type:{name:"HashedChunkCode",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L6"},params:[{id:140,name:"code",type:{name:"string"},tags:[],comment:"The shader code"}],typeParams:[]}],properties:[{id:141,name:"code",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L8",comment:"The shader code",type:{name:"string"},tags:[]},{id:142,name:"hash",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L10",comment:"The hashed shader code",type:{name:"number"},tags:[]}],accessors:[],methods:[],extends:null,implements:null},{id:2283,name:"Ibl",originalName:"default",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Ibl.ts#L18",comment:"This class manages IBL (Image Based Lighting) lights.",tags:[],constructors:[{id:2284,name:"Ibl",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Ibl.ts#L64",tags:[],type:{name:"Ibl",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Ibl.ts#L18"},params:[{id:2286,name:"env",type:{name:"Texture",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-base.ts#L18"},tags:["optional"],comment:"The env map texture",optional:!0},{id:2287,name:"sh",type:{name:"ArrayLike",data:{arguments:[{name:"number"}]}},tags:["optional"],comment:"The spherical harmonics coefficients",optional:!0}],typeParams:[]}],properties:[{id:2288,name:"_type",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Ibl.ts#L20",comment:"The type of lighting",defaultValue:"LightType.IBL",type:{name:"IBL",lib:"nanogl-pbr",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/LightType.ts#L7",parent:{kind:"Enumeration",name:"LightType"}},tags:["readonly"]},{id:2296,name:"ambiantIntensity",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Ibl.ts#L46",comment:"The intensity of the spherical harmonics",defaultValue:"1.0",type:{name:"number"},tags:[]},{id:2299,name:"boxProjectionOffset",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Ibl.ts#L58",comment:`The offset of the center of the box projection
relative to the world space position of the light's node`,type:{name:"vec3"},tags:["readonly"]},{id:2298,name:"boxProjectionSize",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Ibl.ts#L52",comment:"The size of the box projection",type:{name:"vec3"},tags:["readonly"]},{id:2294,name:"enableBoxProjection",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Ibl.ts#L40",comment:"Whether to enable box projection for reflection or not",defaultValue:"false",type:{name:"boolean"},tags:[]},{id:2293,name:"enableRotation",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Ibl.ts#L37",comment:"Whether to enable rotation of the IBL or not",defaultValue:"false",type:{name:"boolean"},tags:[]},{id:2300,name:"env",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Ibl.ts#L64",comment:"The env map texture",type:{name:"Texture",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-base.ts#L18"},tags:["optional"]},{id:2290,name:"hdrEncoding",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Ibl.ts#L25",comment:"The encoding mode used to store HDR values in the env map",defaultValue:'"RGBM"',type:{listType:"union",list:[{name:"'RGBM'",data:{literalType:"string"}},{name:"'RGBD'",data:{literalType:"string"}},{name:"'RGBE'",data:{literalType:"string"}}]},tags:[]},{id:2289,name:"iblFormat",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Ibl.ts#L23",comment:"The type of mapping of the env map",defaultValue:"'OCTA'",type:{listType:"union",list:[{name:"'OCTA'",data:{literalType:"string"}},{name:"'PMREM'",data:{literalType:"string"}}]},tags:[]},{id:2295,name:"intensity",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Ibl.ts#L43",comment:"The global intensity of the IBL",defaultValue:"1.0",type:{name:"number"},tags:[]},{id:2292,name:"mipLevels",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Ibl.ts#L34",comment:"The number of available mip levels in the env map.\nIn `PMREM`, the lower mip levels can be left unused (black)\nto keep definition in high roughness values.",defaultValue:"5",type:{name:"number"},tags:[]},{id:2301,name:"sh",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Ibl.ts#L64",comment:"The spherical harmonics coefficients",type:{name:"ArrayLike",data:{arguments:[{name:"number"}]}},tags:["optional"]},{id:2291,name:"shFormat",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Ibl.ts#L27",comment:"The spherical harmonics format",defaultValue:'"SH9"',type:{listType:"union",list:[{name:"'SH9'",data:{literalType:"string"}},{name:"'SH7'",data:{literalType:"string"}}]},tags:[]},{id:2297,name:"specularIntensity",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Ibl.ts#L49",comment:"The intensity of environement reflections",defaultValue:"1.0",type:{name:"number"},tags:[]}],accessors:[],methods:[],extends:[{name:"Light",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L15"},{name:"Node",lib:"nanogl-node",kind:"Class",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L18"}],implements:null},{id:2366,name:"IblModel",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/IblModel.ts#L64",comment:`This class manages IBL (Image Based Lighting) light models.

**Important :** The IBL light model only supports one IBL light.`,tags:[],constructors:[{id:2367,name:"IblModel",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/IblModel.ts#L123",tags:[],type:{name:"IblModel",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/IblModel.ts#L64"},params:[{id:2369,name:"code",type:{name:"GlslCode",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/GlslCode.ts#L2"},tags:[],comment:"The shader code template for this light model"},{id:2370,name:"preCode",type:{name:"GlslCode",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/GlslCode.ts#L2"},tags:[],comment:"The shader pre-code template for this light model"}],typeParams:[]}],properties:[{id:2373,name:"enableBoxProjection",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/IblModel.ts#L71",comment:"Whether to enable box projection for reflection or not",type:{name:"Flag",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Flag.ts#L13",data:{arguments:[{name:"'enableBoxProjection'",data:{literalType:"string"}}]}},tags:["private","readonly"]},{id:2372,name:"enableRotation",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/IblModel.ts#L69",comment:"Whether to enable rotation of the IBL or not",type:{name:"Flag",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Flag.ts#L13",data:{arguments:[{name:"'enableRotation'",data:{literalType:"string"}}]}},tags:["private","readonly"]},{id:2376,name:"hdrEncoding",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/IblModel.ts#L78",comment:"The encoding mode used to store HDR values in the env map",type:{name:"Enum",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Enum.ts#L20",data:{arguments:[{listType:"tuple",list:[{name:"'RGBM'",data:{literalType:"string"}},{name:"'RGBD'",data:{literalType:"string"}},{name:"'RGBE'",data:{literalType:"string"}}],data:{operator:"readonly"}}]}},tags:["private","readonly"]},{id:2374,name:"iblFormat",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/IblModel.ts#L74",comment:"The type of mapping of the env map",type:{name:"Enum",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Enum.ts#L20",data:{arguments:[{listType:"tuple",list:[{name:"'OCTA'",data:{literalType:"string"}},{name:"'PMREM'",data:{literalType:"string"}}],data:{operator:"readonly"}}]}},tags:["private","readonly"]},{id:2377,name:"intensities",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/IblModel.ts#L80",comment:"The IBL intensities : the ambiant intensity & the specular intensity",type:{name:"Input",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664"},tags:["private","readonly"]},{id:2379,name:"intensitiesValue",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/IblModel.ts#L85",comment:"The constant attached to the `intensities` input",type:{name:"Constant",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L573"},tags:["private","readonly"]},{id:2378,name:"mipLevels",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/IblModel.ts#L82",comment:"The number of available mip levels in the env map",type:{name:"Input",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664"},tags:["private","readonly"]},{id:2380,name:"mipLevelsValue",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/IblModel.ts#L87",comment:"The constant attached to the `mipLevels` input",type:{name:"Constant",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L573"},tags:["private","readonly"]},{id:2375,name:"shFormat",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/IblModel.ts#L76",comment:"The spherical harmonics format",type:{name:"Enum",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Enum.ts#L20",data:{arguments:[{listType:"tuple",list:[{name:"'SH9'",data:{literalType:"string"}},{name:"'SH7'",data:{literalType:"string"}}],data:{operator:"readonly"}}]}},tags:["private","readonly"]},{id:2371,name:"type",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/IblModel.ts#L66",comment:"The type of lighting",defaultValue:"LightType.IBL",type:{name:"IBL",lib:"nanogl-pbr",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/LightType.ts#L7",parent:{kind:"Enumeration",name:"LightType"}},tags:["readonly"]}],accessors:[],methods:[{id:2390,name:"addLight",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/IblModel.ts#L111",comment:"Add a light to the model.",tags:[],type:{name:"void"},params:[{id:2392,name:"l",type:{name:"Ibl",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Ibl.ts#L18"},tags:[],comment:"The light to add"}],typeParams:[]},{id:2381,name:"genCodePerLights",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/IblModel.ts#L90",comment:"Generate the shader code for a given light in this LightModel.",tags:[],type:{name:"string"},params:[{id:2383,name:"light",type:{name:"Ibl",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Ibl.ts#L18"},tags:[],comment:"The light to generate the code for"},{id:2384,name:"index",type:{name:"number"},tags:[],comment:"The index of the light"},{id:2385,name:"shadowIndex",type:{name:"number"},tags:[],comment:"The shadow index of the light"}],typeParams:[]},{id:2386,name:"prepare",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/IblModel.ts#L94",comment:"Prepare the light model for rendering.",tags:[],type:{name:"void"},params:[{id:2388,name:"gl",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[],comment:"The webgl context to use"},{id:2389,name:"model",type:{name:"ILightModel",lib:"nanogl-pbr",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/ILightModel.ts#L10"},tags:[],comment:"The parent light model"}],typeParams:[]},{id:2393,name:"setup",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/IblModel.ts#L141",comment:"Setup the given program for this light model.",tags:[],type:{name:"void"},params:[{id:2395,name:"prg",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[],comment:"The program to setup"}],typeParams:[]}],extends:[{name:"AbstractLightModel",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/AbstractLightModel.ts#L14"},{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12"}],implements:null},{id:783,name:"Input",originalName:"default",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664",comment:`This class manages inputs for shaders.

It handles the underlying [InputParam](/api/nanogl-pbr/types/InputParam),
for samplers, uniforms, attributes and constants.`,tags:[],constructors:[{id:791,name:"Input",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L704",tags:[],type:{name:"Input",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664"},params:[{id:793,name:"name",type:{name:"string"},tags:[],comment:"The name of the input"},{id:794,name:"size",type:{name:"InputSize",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L30"},tags:[],comment:"The size of the input value"},{id:795,name:"shader",type:{name:"ShaderType",lib:"nanogl-pbr",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L23"},tags:["optional"],comment:"The type of shader this input is attached to",optional:!0,defaultValue:"ShaderType.FRAGMENT"},{id:796,name:"colorspace",type:{name:"ColorSpace",lib:"nanogl-pbr",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ColorSpace.ts#L4"},tags:["optional"],comment:"The colorspace of the input's value as is should be decoded",optional:!0,defaultValue:"ColorSpace.LINEAR"}],typeParams:[]}],properties:[{id:800,name:"_colorspace",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L690",comment:"The colorspace of the input's value as is should be decoded",defaultValue:"ColorSpace.LINEAR",type:{name:"ColorSpace",lib:"nanogl-pbr",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ColorSpace.ts#L4"},tags:["private"]},{id:801,name:"comps",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L693",comment:"The swizzle operator to access the input's value",type:{name:"Swizzle",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Swizzle.ts#L2"},tags:[]},{id:797,name:"name",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L683",comment:"The name of the input",type:{name:"string"},tags:["readonly"]},{id:802,name:"param",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L695",comment:"The input parameter attached to this input",type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"InputParam",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L138"}]},tags:[]},{id:799,name:"shader",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L687",comment:"The type of shader this input is attached to",type:{name:"ShaderType",lib:"nanogl-pbr",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L23"},tags:["readonly"]},{id:798,name:"size",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L685",comment:"The size of the input value",type:{name:"InputSize",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L30"},tags:["readonly"]},{id:790,name:"ALL",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L680",comment:"Both shaders shader type",defaultValue:"ShaderType.ALL",type:{name:"ShaderType",lib:"nanogl-pbr",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L23"},tags:["static","readonly"]},{id:786,name:"Attribute",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L671",comment:"Attribute input parameter",defaultValue:"Attribute",type:{name:"Attribute",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L496",isQuery:!0},tags:["static","readonly"]},{id:787,name:"Constant",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L673",comment:"Constant input parameter",defaultValue:"Constant",type:{name:"Constant",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L573",isQuery:!0},tags:["static","readonly"]},{id:788,name:"FRAGMENT",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L676",comment:"Fragment shader type",defaultValue:"ShaderType.FRAGMENT",type:{name:"ShaderType",lib:"nanogl-pbr",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L23"},tags:["static","readonly"]},{id:784,name:"Sampler",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L667",comment:"Sampler input parameter",defaultValue:"Sampler",type:{name:"Sampler",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L207",isQuery:!0},tags:["static","readonly"]},{id:785,name:"Uniform",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L669",comment:"Uniform input parameter",defaultValue:"Uniform",type:{name:"Uniform",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L334",isQuery:!0},tags:["static","readonly"]},{id:789,name:"VERTEX",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L678",comment:"Vertex shader type",defaultValue:"ShaderType.VERTEX",type:{name:"ShaderType",lib:"nanogl-pbr",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L23"},tags:["static","readonly"]}],accessors:[{id:803,name:"colorspace",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L730",setter:{name:"set colorspace",comment:`Set the colorspace of the input's value as is should be decoded.

To set the colorspace of the value we are providing,
set the colorspace property of the attached input parameter.
The input param's value will be transformed from its colorspace
to the input's colorspace in the shader.

The code will be invalidated if the value changes,
and need to be re-generated.`,tags:[],type:{name:"void"},params:[{id:806,name:"c",type:{name:"ColorSpace",lib:"nanogl-pbr",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ColorSpace.ts#L4"},tags:[],comment:"The new colorspace"}],typeParams:[]},getter:{name:"get colorspace",comment:"Get the colorspace of the input's value as is should be decoded.",tags:[],type:{name:"ColorSpace",lib:"nanogl-pbr",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ColorSpace.ts#L4"},typeParams:[]}}],methods:[{id:832,name:"_genCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L836",comment:`Generate the shader code for this input.

For more details, see the \`genInputCode\` method of the
chosen input param type.`,tags:[],type:{name:"void"},params:[{id:834,name:"slots",type:{name:"ChunksSlots",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L88"},tags:[],comment:"The slots to add the code to"}],typeParams:[]},{id:807,name:"attach",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L750",comment:"Attach an input parameter to this input.",tags:[],type:{name:"void"},params:[{id:809,name:"param",type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"InputParam",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L138"}]},tags:[],comment:"The input parameter to attach"},{id:810,name:"comps",type:{name:"Swizzle",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Swizzle.ts#L2"},tags:["optional"],comment:"The swizzle operator to access the value",optional:!0,defaultValue:"'rgba'"}],typeParams:[]},{id:823,name:"attachAttribute",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L802",comment:"Create an Attribute input parameter and attach it to this input.",tags:[],type:{name:"Attribute",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L496"},params:[{id:825,name:"name",type:{name:"string"},tags:["optional"],comment:"The name of the attribute param",optional:!0},{id:826,name:"size",type:{name:"InputSize",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L30"},tags:["optional"],comment:"The size of the attribute param value",optional:!0},{id:827,name:"comps",type:{name:"Swizzle",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Swizzle.ts#L2"},tags:["optional"],comment:"The swizzle operator to access the value",optional:!0,defaultValue:"'rgba'"}],typeParams:[]},{id:828,name:"attachConstant",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L813",comment:"Create an Constant input parameter and attach it to this input.",tags:[],type:{name:"Constant",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L573"},params:[{id:830,name:"value",type:{listType:"union",list:[{name:"number"},{name:"ArrayLike",data:{arguments:[{name:"number"}]}}]},tags:[]},{id:831,name:"comps",type:{name:"Swizzle",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Swizzle.ts#L2"},tags:["optional"],comment:"The swizzle operator to access the value",optional:!0,defaultValue:"'rgba'"}],typeParams:[]},{id:813,name:"attachSampler",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L778",comment:"Create a Sampler input parameter and attach it to this input.",tags:[],type:{name:"Sampler",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L207"},params:[{id:815,name:"name",type:{name:"string"},tags:["optional"],comment:"The name of the sampler param",optional:!0},{id:816,name:"texCoords",type:{listType:"union",list:[{name:"string"},{name:"TexCoord",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L153"}]},tags:["optional"],comment:`The texture coordinates manager for this sampler param,
or the name of the varying to use as texture coordinates`,optional:!0},{id:817,name:"comps",type:{name:"Swizzle",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Swizzle.ts#L2"},tags:["optional"],comment:"The swizzle operator to access the value",optional:!0,defaultValue:"'rgba'"}],typeParams:[]},{id:818,name:"attachUniform",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L790",comment:"Create a Uniform input parameter and attach it to this input.",tags:[],type:{name:"Uniform",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L334"},params:[{id:820,name:"name",type:{name:"string"},tags:["optional"],comment:"The name of the uniform param",optional:!0},{id:821,name:"size",type:{name:"InputSize",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L30"},tags:["optional"],comment:"The size of the uniform param value",optional:!0},{id:822,name:"comps",type:{name:"Swizzle",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Swizzle.ts#L2"},tags:["optional"],comment:"The swizzle operator to access the value",optional:!0,defaultValue:"'rgba'"}],typeParams:[]},{id:811,name:"detach",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L764",comment:"Detach the input parameter from this input.",tags:[],type:{name:"void"},typeParams:[]}],extends:[{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12"}],implements:null},{id:2533,name:"Light",originalName:"default",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L15",comment:"This class is the base class for all lights.",tags:["abstract"],constructors:[{id:2534,name:"Light",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L19",tags:[],type:{name:"Light",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L15"},typeParams:[]}],properties:[{id:2536,name:"_type",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L17",comment:"The type of lighting",type:{name:"LightType",lib:"nanogl-pbr",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/LightType.ts#L2"},tags:["abstract","readonly"]}],accessors:[],methods:[],extends:[{name:"Node",lib:"nanogl-node",kind:"Class",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L18"}],implements:null},{id:2595,name:"LightSetup",originalName:"default",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/LightSetup.ts#L17",comment:`This class handles the setup of all lights.

It manages the standard model and all other
registered global light models.`,tags:[],constructors:[{id:2596,name:"LightSetup",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/LightSetup.ts#L34",tags:[],type:{name:"LightSetup",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/LightSetup.ts#L17"},typeParams:[]}],properties:[{id:2598,name:"_lights",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/LightSetup.ts#L19",comment:"The list of lights",type:{name:"Light",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L15",isArray:!0},tags:[]},{id:2602,name:"_models",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/LightSetup.ts#L28",comment:"The list of light models",type:{name:"ILightModel",lib:"nanogl-pbr",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/ILightModel.ts#L10",isArray:!0},tags:[]},{id:2603,name:"_modelsMap",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/LightSetup.ts#L30",comment:"The list of id / light model pairs",type:{name:"Record",data:{arguments:[{name:"string"},{name:"ILightModel",lib:"nanogl-pbr",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/ILightModel.ts#L10"}]}},tags:[]},{id:2600,name:"bounds",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/LightSetup.ts#L23",comment:"The bounds to use for lighting",type:{name:"Bounds",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Bounds.ts#L46"},tags:[]},{id:2599,name:"depthFormat",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/LightSetup.ts#L21",comment:"The depth pass format",type:{name:"DepthFormatEnum",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/DepthFormatEnum.ts#L16"},tags:[]},{id:2601,name:"stdModel",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/LightSetup.ts#L25",comment:"The standard model",type:{name:"StandardModel",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L62"},tags:[]}],accessors:[],methods:[{id:2616,name:"_registerModel",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/LightSetup.ts#L120",comment:`Register a light model to the setup.
If a model with the same id is already registered, it will not be replaced.`,tags:[],type:{name:"void"},params:[{id:2618,name:"id",type:{name:"string"},tags:[],comment:"The id of the model"},{id:2619,name:"model",type:{name:"ILightModel",lib:"nanogl-pbr",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/ILightModel.ts#L10"},tags:[],comment:"The model to register"}],typeParams:[]},{id:2604,name:"add",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/LightSetup.ts#L58",comment:`Add a light to the setup.

This will add the light to the lights list
and to all the registered models.`,tags:[],type:{name:"void"},params:[{id:2606,name:"l",type:{name:"Light",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L15"},tags:[],comment:"The light to add"}],typeParams:[]},{id:2613,name:"getChunks",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/LightSetup.ts#L103",comment:`Get the shader chunks for the model correpsonding to the given id.
If no id is given, the standard model is used.`,tags:[],type:{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12",isArray:!0},params:[{id:2615,name:"modelId",type:{name:"string"},tags:[],comment:"The id of the model to use"}],typeParams:[]},{id:2610,name:"prepare",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/LightSetup.ts#L91",comment:"Prepare all registered models for rendering.",tags:[],type:{name:"void"},params:[{id:2612,name:"gl",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[],comment:"The webgl context to use"}],typeParams:[]},{id:2607,name:"remove",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/LightSetup.ts#L76",comment:`Remove a light from the setup.

This will remove the light from the lights list
and from all the registered models.`,tags:[],type:{name:"void"},params:[{id:2609,name:"l",type:{name:"Light",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L15"},tags:[],comment:"The light to remove"}],typeParams:[]}],extends:null,implements:null},{id:897,name:"Material",originalName:"default",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Material.ts#L73",comment:"This class manages materials.",tags:[],constructors:[{id:898,name:"Material",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Material.ts#L91",tags:[],type:{name:"Material",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Material.ts#L73"},params:[{id:900,name:"gl",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[],comment:"The webgl context this Material belongs to"},{id:901,name:"name",type:{name:"string"},tags:["optional"],comment:"The name of the material",optional:!0,defaultValue:"''"}],typeParams:[]}],properties:[{id:905,name:"_passMap",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Material.ts#L83",comment:"The map of material pass instances to their id",type:{name:"Map",data:{arguments:[{name:"string"},{name:"PassInstance",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Material.ts#L20"}]}},tags:[]},{id:906,name:"_passes",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Material.ts#L85",comment:"The list of material pass instances",defaultValue:"[]",type:{name:"PassInstance",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Material.ts#L20",isArray:!0},tags:[]},{id:907,name:"gl",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Material.ts#L91",comment:"The webgl context this Material belongs to",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:["readonly"]},{id:903,name:"glconfig",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Material.ts#L78",comment:"The glconfig of the material",type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},tags:["readonly"]},{id:904,name:"inputs",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Material.ts#L80",comment:"The collection of shader chunks",type:{name:"ChunkCollection",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunkCollection.ts#L9"},tags:["readonly"]},{id:902,name:"mask",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Material.ts#L75",comment:"The render mask of the material",defaultValue:"~0",type:{name:"number"},tags:[]},{id:908,name:"name",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Material.ts#L91",comment:"The name of the material",defaultValue:"''",type:{name:"string"},tags:[]}],accessors:[],methods:[{id:909,name:"addPass",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Material.ts#L99",comment:"Add a pass to the material.",tags:[],type:{name:"PassInstance",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Material.ts#L20"},params:[{id:911,name:"pass",type:{name:"MaterialPass",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MaterialPass.ts#L14"},tags:[],comment:"The material pass to add"},{id:912,name:"id",type:{name:"string"},tags:[],comment:"The id of the pass to add",defaultValue:"'color'"}],typeParams:[]},{id:922,name:"getAllPasses",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Material.ts#L141",comment:"Get all the passes of the material.",tags:[],type:{name:"PassInstance",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Material.ts#L20",isArray:!0},typeParams:[]},{id:916,name:"getPass",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Material.ts#L126",comment:"Get a pass with its id.",tags:[],type:{listType:"union",list:[{name:"undefined"},{name:"PassInstance",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Material.ts#L20"}]},params:[{id:918,name:"id",type:{name:"string"},tags:[],comment:"The id of the pass to get",defaultValue:"'color'"}],typeParams:[]},{id:924,name:"getProgram",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Material.ts#L149",comment:"Get the program for a pass with the pass id, if it exists.",tags:[],type:{listType:"union",list:[{name:"undefined"},{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"}]},params:[{id:926,name:"passId",type:{name:"string"},tags:[],comment:"The id of the pass to get the program from"}],typeParams:[]},{id:919,name:"hasPass",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Material.ts#L134",comment:"Know whether the material has a pass with the given id or not.",tags:[],type:{name:"boolean"},params:[{id:921,name:"id",type:{name:"string"},tags:[],comment:"The id of the pass to check"}],typeParams:[]},{id:913,name:"removePass",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Material.ts#L113",comment:"Remove a pass from the material.",tags:[],type:{name:"void"},params:[{id:915,name:"id",type:{name:"string"},tags:[],comment:"The id of the pass to remove"}],typeParams:[]}],extends:null,implements:null},{id:929,name:"MaterialPass",originalName:"default",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MaterialPass.ts#L14",comment:"This class is the base class for all material passes.",tags:["abstract"],constructors:[{id:930,name:"MaterialPass",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MaterialPass.ts#L28",tags:[],type:{name:"MaterialPass",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MaterialPass.ts#L14"},params:[{id:932,name:"_shaderSource",type:{name:"ShaderSource",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/IProgramSource.ts#L4"},tags:[],comment:"The shader source for this pass"}],typeParams:[]}],properties:[{id:937,name:"_shaderSource",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MaterialPass.ts#L28",comment:"The shader source for this pass",type:{name:"ShaderSource",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/IProgramSource.ts#L4"},tags:[]},{id:935,name:"glconfig",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MaterialPass.ts#L21",comment:"The GLConfig of the pass",type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},tags:["readonly"]},{id:936,name:"inputs",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MaterialPass.ts#L23",comment:"The collection of shader chunks",type:{name:"ChunkCollection",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunkCollection.ts#L9"},tags:[]},{id:934,name:"mask",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MaterialPass.ts#L18",comment:"The render mask of the pass",defaultValue:"~0",type:{name:"number"},tags:[]},{id:933,name:"name",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MaterialPass.ts#L16",comment:"The name of the pass",defaultValue:"''",type:{name:"string"},tags:[]}],accessors:[],methods:[{id:938,name:"prepare",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MaterialPass.ts#L36",comment:"Prepare the given program for this pass.",tags:["abstract"],type:{name:"void"},params:[{id:940,name:"prg",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[],comment:"The program to setup"},{id:941,name:"node",type:{name:"Node",lib:"nanogl-node",kind:"Class",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L18"},tags:[],comment:"The node to use for transforms"},{id:942,name:"camera",type:{name:"Camera",lib:"nanogl-camera",kind:"Class",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/index.ts#L18",data:{arguments:[{name:"ICameraLens",lib:"nanogl-camera",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ICameraLens.ts#L4"}]}},tags:[],comment:"The camera to use for projection"}],typeParams:[]}],extends:null,implements:null},{id:1089,name:"MetalnessSurface",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L57",comment:`This class handles the code generation for a PBR surface
with metalness workflow in a shader chunk.`,tags:[],constructors:[{id:1090,name:"MetalnessSurface",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L75",tags:[],type:{name:"MetalnessSurface",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L57"},typeParams:[]}],properties:[{id:1093,name:"baseColor",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L62",comment:"The base color",type:{name:"Input",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664"},tags:["readonly"]},{id:1094,name:"baseColorFactor",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L64",comment:"The base color factor",type:{name:"Input",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664"},tags:["readonly"]},{id:1095,name:"metalness",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L66",comment:"The metalness value",type:{name:"Input",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664"},tags:["readonly"]},{id:1096,name:"metalnessFactor",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L68",comment:"The metalness factor",type:{name:"Input",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664"},tags:["readonly"]},{id:1097,name:"roughness",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L70",comment:"The roughness value",type:{name:"Input",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664"},tags:["readonly"]},{id:1098,name:"roughnessFactor",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L72",comment:"The roughness factor",type:{name:"Input",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664"},tags:["readonly"]},{id:1092,name:"type",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L59",comment:"The type of PBR workflow",defaultValue:"PbrWorkflowType.METALNESS",type:{name:"METALNESS",lib:"nanogl-pbr",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L9",parent:{kind:"Enumeration",name:"PbrWorkflowType"}},tags:["readonly"]}],accessors:[],methods:[{id:1099,name:"_genCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L91",comment:"Generate the shader code for this Metalness surface.",tags:["protected"],type:{name:"void"},params:[{id:1101,name:"slots",type:{name:"ChunksSlots",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L88"},tags:[],comment:"The slots to add the code to"}],typeParams:[]}],extends:[{name:"AbstractPbrSurface",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L24"},{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12"}],implements:null},{id:964,name:"MorphDeformer",originalName:"default",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MorphDeformer.ts#L30",comment:`This class manages the code generation for morph deformers in a shader chunk.
It is used to deform a geometry using morph targets.

You can change the weights of the morph targets using the \`weights\` property.`,tags:[],constructors:[{id:965,name:"MorphDeformer",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MorphDeformer.ts#L39",tags:[],type:{name:"MorphDeformer",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MorphDeformer.ts#L30"},params:[{id:967,name:"infos",type:{name:"MorphAttribInfos",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MorphCode.ts#L25",isArray:!0},tags:[],comment:"The list of morph attribute definitions"}],typeParams:[]}],properties:[{id:968,name:"_morphInfos",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MorphDeformer.ts#L32",comment:"The list of morph attribute definitions",defaultValue:"[]",type:{name:"MorphAttribInfos",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MorphCode.ts#L25",isArray:!0},tags:["private"]},{id:969,name:"_weights",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MorphDeformer.ts#L34",comment:"The list of weights",type:{name:"Float32Array"},tags:["private"]}],accessors:[{id:976,name:"morphInfos",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MorphDeformer.ts#L76",getter:{name:"get morphInfos",comment:"Get the list of morph attribute definitions.",tags:[],type:{name:"MorphAttribInfos",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MorphCode.ts#L25",isArray:!0},typeParams:[]}},{id:974,name:"numTargets",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MorphDeformer.ts#L69",getter:{name:"get numTargets",comment:"Get the number of morph targets.",tags:[],type:{name:"number"},typeParams:[]}},{id:970,name:"weights",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MorphDeformer.ts#L50",setter:{name:"set weights",comment:`Set the list of weights.
The length of the list must match the number of morph targets.`,tags:[],type:{name:"void"},params:[{id:973,name:"w",type:{name:"Float32Array"},tags:[],comment:"The list of weights"}],typeParams:[]},getter:{name:"get weights",comment:"Get the list of weights.",tags:[],type:{name:"Float32Array"},typeParams:[]}}],methods:[{id:981,name:"_genCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MorphDeformer.ts#L92",comment:"Generate the vertex shader code for this morph deformer.",tags:["protected"],type:{name:"void"},params:[{id:983,name:"slots",type:{name:"ChunksSlots",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L88"},tags:[],comment:"The slots to add the code to"}],typeParams:[]},{id:984,name:"_getHash",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MorphDeformer.ts#L100",comment:"Get the hash code for this chunk.",tags:["protected"],type:{name:"string"},typeParams:[]},{id:978,name:"setup",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MorphDeformer.ts#L84",comment:"Setup the given program for this morph deformer.",tags:[],type:{name:"void"},params:[{id:980,name:"prg",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[],comment:"The program to setup"}],typeParams:[]}],extends:[{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12"}],implements:null},{id:882,name:"PassInstance",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Material.ts#L20",comment:`This class manages the creation and management of a program
for a material pass.

The program is created from the shader source of the pass,
the inputs from both the material and the pass.`,tags:[],constructors:[{id:883,name:"PassInstance",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Material.ts#L38",tags:[],type:{name:"PassInstance",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Material.ts#L20"},params:[{id:885,name:"material",type:{name:"Material",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Material.ts#L73"},tags:[],comment:"The material this pass instance belongs to"},{id:886,name:"pass",type:{name:"MaterialPass",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MaterialPass.ts#L14"},tags:[],comment:"The material pass to manage"}],typeParams:[]}],properties:[{id:888,name:"material",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Material.ts#L24",comment:"The material this pass instance belongs to",type:{name:"Material",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Material.ts#L73"},tags:["readonly"]},{id:887,name:"pass",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Material.ts#L22",comment:"The material pass",type:{name:"MaterialPass",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MaterialPass.ts#L14"},tags:["readonly"]},{id:889,name:"programSource",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Material.ts#L29",comment:`The program source managing the program
computed from the pass shader source`,type:{name:"ProgramSource",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ProgramSource.ts#L12"},tags:["readonly"]}],accessors:[],methods:[{id:895,name:"getProgram",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Material.ts#L61",comment:"Get the program for the material pass instance.",tags:[],type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},typeParams:[]},{id:891,name:"prepare",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Material.ts#L52",comment:"Prepare the program for the material pass.",tags:[],type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},params:[{id:893,name:"node",type:{name:"Node",lib:"nanogl-node",kind:"Class",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L18"},tags:[],comment:"The node to use for transforms"},{id:894,name:"camera",type:{name:"Camera",lib:"nanogl-camera",kind:"Class",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/index.ts#L18",data:{arguments:[{name:"ICameraLens",lib:"nanogl-camera",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ICameraLens.ts#L4"}]}},tags:[],comment:"The camera to use for projection"}],typeParams:[]}],extends:null,implements:null},{id:2628,name:"PointLight",originalName:"default",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PointLight.ts#L10",comment:"This class manages point lights.",tags:[],constructors:[{id:2629,name:"PointLight",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PointLight.ts#L17",tags:[],type:{name:"PointLight",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PointLight.ts#L10"},typeParams:[]}],properties:[{id:2632,name:"_radius",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PointLight.ts#L15",comment:"The radius of the point light",type:{name:"number"},tags:["private"]},{id:2631,name:"_type",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PointLight.ts#L12",comment:"The type of lighting",defaultValue:"LightType.POINT",type:{name:"POINT",lib:"nanogl-pbr",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/LightType.ts#L6",parent:{kind:"Enumeration",name:"LightType"}},tags:["readonly"]}],accessors:[{id:2633,name:"castShadows",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PointLight.ts#L25",setter:{name:"set castShadows",comment:"Set whether to cast shadows or not.",tags:[],type:{name:"void"},params:[{id:2635,name:"flag",type:{name:"boolean"},tags:[],comment:"The value to set"}],typeParams:[]}},{id:2636,name:"radius",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PointLight.ts#L32",setter:{name:"set radius",comment:"Set the radius of the point light.",tags:[],type:{name:"void"},params:[{id:2639,name:"v",type:{name:"number"},tags:[],comment:"The new value"}],typeParams:[]},getter:{name:"get radius",comment:"Get the radius of the point light.",tags:[],type:{name:"number"},typeParams:[]}}],methods:[{id:2643,name:"_createCamera",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PointLight.ts#L55",comment:`This will throw an error, as shadow mapping
is not supported on point lights.`,tags:[],type:{name:"Camera",lib:"nanogl-camera",kind:"Class",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/index.ts#L18",data:{arguments:[{name:"ICameraLens",lib:"nanogl-camera",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ICameraLens.ts#L4"}]}},typeParams:[]},{id:2645,name:"getTexelBiasVector",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PointLight.ts#L63",comment:`This will throw an error, as shadow mapping
is not supported on point lights.`,tags:[],type:{name:"Float32Array"},typeParams:[]},{id:2640,name:"projectionFromBounds",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PointLight.ts#L47",comment:`This will throw an error, as shadow mapping
is not supported on point lights.`,tags:[],type:{name:"mat4"},params:[{id:2642,name:"bounds",type:{name:"Bounds",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Bounds.ts#L46"},tags:[]}],typeParams:[]}],extends:[{name:"PunctualLight",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PunctualLight.ts#L29"},{name:"Light",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L15"},{name:"Node",lib:"nanogl-node",kind:"Class",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L18"}],implements:null},{id:2733,name:"PointLightModel",originalName:"default",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PointLightModel.ts#L12",comment:"This class manages point light models.",tags:[],constructors:[{id:2734,name:"PointLightModel",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PointLightModel.ts#L25",tags:[],type:{name:"PointLightModel",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PointLightModel.ts#L12"},params:[{id:2736,name:"code",type:{name:"GlslCode",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/GlslCode.ts#L2"},tags:[],comment:"The shader code template for this light model"},{id:2737,name:"preCode",type:{name:"GlslCode",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/GlslCode.ts#L2"},tags:[],comment:"The shader pre-code template for this light model"}],typeParams:[]}],properties:[{id:2739,name:"_colors",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PointLightModel.ts#L17",comment:"The color for each light",type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"Float32Array"}]},tags:[]},{id:2740,name:"_positions",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PointLightModel.ts#L19",comment:"The position for each light",type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"Float32Array"}]},tags:[]},{id:2738,name:"type",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PointLightModel.ts#L14",comment:"The type of lighting",defaultValue:"LightType.POINT",type:{name:"POINT",lib:"nanogl-pbr",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/LightType.ts#L6",parent:{kind:"Enumeration",name:"LightType"}},tags:["readonly"]}],accessors:[],methods:[{id:2746,name:"allocate",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PointLightModel.ts#L47",comment:"Allocate the colors & positions arrays for the given number of lights.",tags:[],type:{name:"void"},params:[{id:2748,name:"n",type:{name:"number"},tags:[],comment:"The number of lights"}],typeParams:[]},{id:2741,name:"genCodePerLights",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PointLightModel.ts#L34",comment:"Generate the shader code for a given light in this LightModel.",tags:[],type:{name:"string"},params:[{id:2743,name:"light",type:{name:"PointLight",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PointLight.ts#L10"},tags:[],comment:"The light to generate the code for"},{id:2744,name:"index",type:{name:"number"},tags:[],comment:"The index of the light"},{id:2745,name:"shadowIndex",type:{name:"number"},tags:[],comment:"The shadow index of the light"}],typeParams:[]},{id:2749,name:"prepare",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PointLightModel.ts#L56",comment:"Prepare the light model for rendering.",tags:[],type:{name:"void"},params:[{id:2751,name:"gl",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[],comment:"The webgl context to use"},{id:2752,name:"model",type:{name:"StandardModel",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L62"},tags:[],comment:"The parent light model"}],typeParams:[]},{id:2753,name:"setup",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PointLightModel.ts#L84",comment:"Setup the given program for this chunk.",tags:[],type:{name:"void"},params:[{id:2755,name:"prg",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[],comment:"The program to setup"}],typeParams:[]}],extends:[{name:"AbstractLightModel",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/AbstractLightModel.ts#L14"},{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12"}],implements:null},{id:3174,name:"PostLightsChunk",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L226",comment:`This class handles the setup after lighting
for light models, in a shader chunk.`,tags:[],constructors:[{id:3175,name:"PostLightsChunk",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L233",tags:[],type:{name:"PostLightsChunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L226"},params:[{id:3177,name:"code",type:{name:"GlslCode",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/GlslCode.ts#L2"},tags:[],comment:"The shader code for this chunk"}],typeParams:[]}],properties:[{id:3178,name:"code",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L228",comment:"The shader code for this chunk",type:{name:"GlslCode",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/GlslCode.ts#L2"},tags:[]}],accessors:[],methods:[{id:3179,name:"_genCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L242",comment:"Generate the shader code for this chunk.",tags:[],type:{name:"void"},params:[{id:3181,name:"slots",type:{name:"ChunksSlots",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L88"},tags:[],comment:"The slots to add the code to"}],typeParams:[]}],extends:[{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12"}],implements:null},{id:3120,name:"PreLightsChunk",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L197",comment:`This class handles the setup before lighting
for light models, in a shader chunk.`,tags:[],constructors:[{id:3121,name:"PreLightsChunk",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L204",tags:[],type:{name:"PreLightsChunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L197"},params:[{id:3123,name:"code",type:{name:"GlslCode",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/GlslCode.ts#L2"},tags:[],comment:"The shader code for this chunk"}],typeParams:[]}],properties:[{id:3124,name:"code",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L199",comment:"The shader code for this chunk",type:{name:"GlslCode",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/GlslCode.ts#L2"},tags:[]}],accessors:[],methods:[{id:3125,name:"_genCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L213",comment:"Generate the shader code for this chunk.",tags:[],type:{name:"void"},params:[{id:3127,name:"slots",type:{name:"ChunksSlots",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L88"},tags:[],comment:"The slots to add the code to"}],typeParams:[]}],extends:[{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12"}],implements:null},{id:1210,name:"ProgramCache",originalName:"default",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ProgramCache.ts#L34",comment:`This class manages the cache of shader programs.

It allows to compile programs from a program source
and cache them to avoid recompiling them if they haven't changed.`,tags:[],constructors:[{id:1214,name:"ProgramCache",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ProgramCache.ts#L44",tags:[],type:{name:"ProgramCache",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ProgramCache.ts#L34"},params:[{id:1216,name:"gl",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[],comment:"The webgl context this ProgramCache belongs to"}],typeParams:[]}],properties:[{id:1218,name:"_cache",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ProgramCache.ts#L39",comment:"The list of hash/program pairs used to keep track of cached programs",type:{name:"Record",data:{arguments:[{name:"string"},{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"}]}},tags:["private"]},{id:1217,name:"gl",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ProgramCache.ts#L36",comment:"The webgl context this ProgramCache belongs to",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[]}],accessors:[],methods:[{id:1219,name:"compile",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ProgramCache.ts#L68",comment:`Compile a program from a program source.
If the program source has already been compiled and has not changed,
the cached program is returned.`,tags:[],type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},params:[{id:1221,name:"source",type:{name:"IProgramSource",lib:"nanogl-pbr",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/IProgramSource.ts#L16"},tags:[],comment:"The program source to use"}],typeParams:[]},{id:1222,name:"release",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ProgramCache.ts#L93",comment:"Release the given program.",tags:[],type:{name:"void"},params:[{id:1224,name:"prg",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[],comment:"The program to release"}],typeParams:[]},{id:1211,name:"getCache",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ProgramCache.ts#L53",comment:"Create a ProgramCache instance or return the existing one for given webgl context.",tags:["static"],type:{name:"ProgramCache",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ProgramCache.ts#L34"},params:[{id:1213,name:"gl",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[],comment:"The webgl context"}],typeParams:[]}],extends:null,implements:null},{id:1226,name:"ProgramSource",originalName:"default",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ProgramSource.ts#L12",comment:`This class manages the creation and management of a program
from a shader source and a list of chunk collections.`,tags:[],constructors:[{id:1227,name:"ProgramSource",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ProgramSource.ts#L29",tags:[],type:{name:"ProgramSource",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ProgramSource.ts#L12"},params:[{id:1229,name:"gl",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[],comment:"The webgl context this ProgramSource belongs to"},{id:1230,name:"shaderSource",type:{name:"ShaderSource",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/IProgramSource.ts#L4"},tags:[],comment:"The shader source to use"}],typeParams:[]}],properties:[{id:1231,name:"_chunkCollections",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ProgramSource.ts#L14",comment:"The list of chunk collections used to compile the program",defaultValue:"[]",type:{name:"ChunkCollection",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunkCollection.ts#L9",isArray:!0},tags:["private"]},{id:1233,name:"_prgCache",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ProgramSource.ts#L18",comment:"The program cache",type:{name:"ProgramCache",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ProgramCache.ts#L34"},tags:["private"]},{id:1234,name:"_program",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ProgramSource.ts#L21",comment:"The current program",defaultValue:"null",type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"}]},tags:[]},{id:1235,name:"_revision",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ProgramSource.ts#L23",comment:"The current revision",defaultValue:"0",type:{name:"number"},tags:[]},{id:1232,name:"_shaderSource",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ProgramSource.ts#L16",comment:"The shader source used to compile the program",type:{name:"ShaderSource",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/IProgramSource.ts#L4"},tags:["private"]}],accessors:[],methods:[{id:1236,name:"addChunkCollection",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ProgramSource.ts#L38",comment:"Add a chunk collection to the list.",tags:[],type:{name:"void"},params:[{id:1238,name:"chunkCollection",type:{name:"ChunkCollection",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunkCollection.ts#L9"},tags:[],comment:"The chunk collection to add"}],typeParams:[]},{id:1245,name:"compile",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ProgramSource.ts#L84",comment:"Compile the program from the shader source and the chunk collections.",tags:[],type:{name:"void"},typeParams:[]},{id:1243,name:"getProgram",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ProgramSource.ts#L70",comment:`Get the current program.
If the program is not up to date, it will be recompiled.`,tags:[],type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},typeParams:[]},{id:1239,name:"getSourceRevision",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ProgramSource.ts#L45",comment:"Get the current revision from the chunk collections.",tags:[],type:{name:"number"},typeParams:[]},{id:1241,name:"setupProgram",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ProgramSource.ts#L56",comment:"Setup the program for the chunk collections.",tags:[],type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},typeParams:[]}],extends:null,implements:null},{id:2813,name:"PunctualLight",originalName:"default",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PunctualLight.ts#L29",comment:"This class is the base class for all punctual lights.",tags:["abstract"],constructors:[{id:2814,name:"PunctualLight",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PunctualLight.ts#L48",tags:[],type:{name:"PunctualLight",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PunctualLight.ts#L29"},typeParams:[]}],properties:[{id:2819,name:"_camera",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PunctualLight.ts#L40",comment:"The camera to use when rendering the shadowmap",type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"Camera",lib:"nanogl-camera",kind:"Class",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/index.ts#L18",data:{arguments:[{name:"ICameraLens",lib:"nanogl-camera",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ICameraLens.ts#L4"}]}}]},tags:[]},{id:2822,name:"_castShadows",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PunctualLight.ts#L62",comment:"Whether to cast shadows or not",defaultValue:"false",type:{name:"boolean"},tags:["private"]},{id:2816,name:"_color",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PunctualLight.ts#L34",comment:"The color of the light",defaultValue:"[1.0, 1.0, 1.0]",type:{name:"Float32Array"},tags:[]},{id:2818,name:"_fbo",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PunctualLight.ts#L38",comment:"The FBO to use as target when rendering the shadowmap",defaultValue:"null",type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"Fbo",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L105"}]},tags:[]},{id:2817,name:"_wdir",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PunctualLight.ts#L36",comment:"The direction of the light",type:{name:"Float32Array"},tags:[]},{id:2821,name:"shadowmapSize",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PunctualLight.ts#L45",comment:"The size of the shadowmap",defaultValue:"512",type:{name:"number"},tags:[]}],accessors:[{id:2823,name:"castShadows",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PunctualLight.ts#L68",setter:{name:"set castShadows",comment:"Set whether to cast shadows or not.",tags:[],type:{name:"void"},params:[{id:2826,name:"flag",type:{name:"boolean"},tags:[],comment:"The value to set"}],typeParams:[]},getter:{name:"get castShadows",comment:"Get whether to cast shadows or not.",tags:[],type:{name:"boolean"},typeParams:[]}}],methods:[{id:2851,name:"_createCamera",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PunctualLight.ts#L215",comment:"Create a camera suitable to render the shadowmap.",tags:["protected","abstract"],type:{name:"Camera",lib:"nanogl-camera",kind:"Class",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/index.ts#L18",data:{arguments:[{name:"ICameraLens",lib:"nanogl-camera",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ICameraLens.ts#L4"}]}},typeParams:[]},{id:2839,name:"_initShadowMapping",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PunctualLight.ts#L146",comment:`Create the FBO resource used as target when rendering the shadowmap.

This method is called by [initShadowmap](/api/nanogl-pbr/classes/PunctualLight#item-2829) when needed.`,tags:["protected"],type:{name:"void"},params:[{id:2841,name:"gl",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[],comment:"The webgl context to use"}],typeParams:[]},{id:2844,name:"_releaseShadowMapping",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PunctualLight.ts#L194",comment:"Release all resources used for shadow mapping.",tags:["protected"],type:{name:"void"},typeParams:[]},{id:2834,name:"bindShadowmap",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PunctualLight.ts#L120",comment:"Prepare and bind the shadowmap's FBO in order to render shadow casters.",tags:[],type:{name:"void"},typeParams:[]},{id:2853,name:"boundsInLocalSpace",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PunctualLight.ts#L223",comment:"Transform the given bounds to local space.",tags:[],type:{name:"Float32Array"},params:[{id:2855,name:"bounds",type:{name:"Bounds",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Bounds.ts#L46"},tags:[],comment:"The bounds to transform"}],typeParams:[]},{id:2842,name:"getCamera",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PunctualLight.ts#L183",comment:"Get the camera suitable to render the shadowmap.",tags:[],type:{name:"Camera",lib:"nanogl-camera",kind:"Class",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/index.ts#L18",data:{arguments:[{name:"ICameraLens",lib:"nanogl-camera",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ICameraLens.ts#L4"}]}},typeParams:[]},{id:2836,name:"getShadowProjection",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PunctualLight.ts#L132",comment:"Get the projection matrix for the shadowmap.",tags:[],type:{name:"mat4"},params:[{id:2838,name:"bounds",type:{name:"Bounds",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Bounds.ts#L46"},tags:[],comment:"The bounds to use for the projection"}],typeParams:[]},{id:2832,name:"getShadowmap",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PunctualLight.ts#L105",comment:`Get the light shadowmap texture.
It can be an RGB texture or a Depth texture if supported.

If the light doesn't cast shadows, it will returns null.`,tags:[],type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"Texture2D",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-2d.ts#L9"}]},typeParams:[]},{id:2849,name:"getTexelBiasVector",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PunctualLight.ts#L210",comment:"Get the texel bias vector used to sample the shadowmap.",tags:["abstract"],type:{name:"Float32Array"},typeParams:[]},{id:2827,name:"hasDepthShadowmap",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PunctualLight.ts#L85",comment:"Know whether the shadowmap is a native Depth texture or not.",tags:[],type:{name:"boolean"},typeParams:[]},{id:2829,name:"initShadowmap",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PunctualLight.ts#L93",comment:"If not already done, create the FBO resource used as target when rendering the shadowmap.",tags:[],type:{name:"void"},params:[{id:2831,name:"gl",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[],comment:"The webgl context to use"}],typeParams:[]},{id:2846,name:"projectionFromBounds",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PunctualLight.ts#L206",comment:`Adjust the camera's projection of the light's shadowmap
to fit the given bounds.`,tags:["abstract"],type:{name:"void"},params:[{id:2848,name:"bounds",type:{name:"Bounds",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Bounds.ts#L46"},tags:[],comment:"The bounds to use"}],typeParams:[]}],extends:[{name:"Light",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L15"},{name:"Node",lib:"nanogl-node",kind:"Class",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L18"}],implements:null},{id:469,name:"Sampler",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L207",comment:`This class manages sampler input parameters
for shaders.

It handles the declaration of a sampler uniform, its sampling
and its colorspace.`,tags:[],constructors:[{id:475,name:"Sampler",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L231",tags:[],type:{name:"Sampler",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L207"},params:[{id:477,name:"name",type:{name:"string"},tags:[],comment:"The name of the sampler param"},{id:478,name:"texCoords",type:{listType:"union",list:[{name:"string"},{name:"TexCoord",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L153"}]},tags:["optional"],comment:`The texture coordinates manager for this sampler param,
or the name of the varying to use as texture coordinates`,optional:!0},{id:479,name:"colorspace",type:{name:"ColorSpace",lib:"nanogl-pbr",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ColorSpace.ts#L4"},tags:["optional"],comment:"The colorspace of the sampler param",optional:!0,defaultValue:"ColorSpace.AUTO"}],typeParams:[]}],properties:[{id:484,name:"_tex",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L215",comment:"The texture for this sampler param",type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"Texture2D",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-2d.ts#L9"}]},tags:[]},{id:486,name:"_varying",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L223",comment:"The name of the varying for the texture coordinates",type:{name:"string"},tags:[]},{id:481,name:"name",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L211",comment:"The name of the input param",type:{name:"string"},tags:[]},{id:480,name:"ptype",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L209",comment:"The type of the input param",defaultValue:"ParamType.SAMPLER",type:{name:"SAMPLER",lib:"nanogl-pbr",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L99",parent:{kind:"Enumeration",name:"ParamType"}},tags:["readonly"]},{id:482,name:"size",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L212",comment:"The size of the input param value",type:{name:"InputSize",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L30"},tags:[]},{id:485,name:"texCoords",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L221",comment:`The texture coordinates manager for this sampler param,
or the name of the varying to use as texture coordinates.`,type:{listType:"union",list:[{name:"string"},{name:"TexCoord",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L153"}]},tags:[]},{id:483,name:"token",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L213",comment:`The name of the variable created for this input param,
used to access the value in the shader code.`,type:{name:"string"},tags:[]}],accessors:[],methods:[{id:490,name:"_genCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L263",comment:"This method is not used for input params.",tags:["protected"],type:{name:"void"},params:[{id:492,name:"slots",type:{name:"ChunksSlots",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L88"},tags:[]}],typeParams:[]},{id:493,name:"genInputCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L275",comment:`Generate the shader code for this sampler param and
add it to the given slots in the input attached shader type.

The texture uniform can be accessed with the name of the sampler in the shader.
The sampled texture data can be accessed with the token of the sampler in the shader.`,tags:[],type:{name:"void"},params:[{id:495,name:"slots",type:{name:"ChunksSlots",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L88"},tags:[],comment:"The slots to add the code to"},{id:496,name:"input",type:{name:"Input",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664"},tags:[],comment:"The input this param is attached to"}],typeParams:[]},{id:487,name:"set",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L256",comment:"Set the texture for this sampler param.",tags:[],type:{name:"void"},params:[{id:489,name:"t",type:{name:"Texture2D",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-2d.ts#L9"},tags:[],comment:"The texture to use"}],typeParams:[]},{id:497,name:"setup",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L291",comment:"Setup the given program for this chunk.",tags:[],type:{name:"void"},params:[{id:499,name:"prg",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[],comment:"The program to setup"}],typeParams:[]},{id:470,name:"colorSpaceTransformCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L302",comment:"Generate the shader code for the colorspace transform of an sampler param variable.",tags:["private","static"],type:{name:"string"},params:[{id:472,name:"from",type:{name:"ColorSpace",lib:"nanogl-pbr",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ColorSpace.ts#L4"},tags:[],comment:"The colorspace the variable is in"},{id:473,name:"to",type:{name:"ColorSpace",lib:"nanogl-pbr",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ColorSpace.ts#L4"},tags:[],comment:"The colorspace we want to transform to"},{id:474,name:"v",type:{name:"string"},tags:[],comment:"The access to the variable to transform"}],typeParams:[]}],extends:[{name:"BaseParams",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L150"},{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12"}],implements:{name:"IInputParam",lib:"nanogl-pbr",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L115"}},{id:1248,name:"ShaderPrecision",originalName:"default",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ShaderPrecision.ts#L14",comment:`This class manages the float precision definition
in a shader chunk.`,tags:[],constructors:[{id:1249,name:"ShaderPrecision",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ShaderPrecision.ts#L21",tags:[],type:{name:"ShaderPrecision",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ShaderPrecision.ts#L14"},params:[{id:1251,name:"p",type:{name:"GlslPrecision",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/GlslPrecision.ts#L2"},tags:[],comment:"The initial float precision",defaultValue:"'mediump'"}],typeParams:[]}],properties:[{id:1252,name:"fprecision",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ShaderPrecision.ts#L16",comment:"The current float precision",type:{name:"GlslPrecision",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/GlslPrecision.ts#L2"},tags:["private"]}],accessors:[],methods:[{id:1256,name:"_genCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ShaderPrecision.ts#L54",comment:"Generate the shader code for this ShaderPrecision.",example:"For a ShaderPrecision defined as :\n```js\nnew ShaderPrecision('highp')\n```\n\nThe generated code will be :\n```glsl\nprecision highp float;\n```",tags:[],type:{name:"void"},params:[{id:1258,name:"slots",type:{name:"ChunksSlots",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L88"},tags:[],comment:"The slots to add the code to"}],typeParams:[]},{id:1253,name:"set",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ShaderPrecision.ts#L34",comment:"Set the float precision.",tags:[],type:{name:"void"},params:[{id:1255,name:"p",type:{name:"GlslPrecision",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/GlslPrecision.ts#L2"},tags:[],comment:"The new float precision"}],typeParams:[]}],extends:[{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12"}],implements:null},{id:1307,name:"ShaderVersion",originalName:"default",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ShaderVersion.ts#L15",comment:`This class manages the glsl version definition
in a shader chunk.`,tags:[],constructors:[{id:1308,name:"ShaderVersion",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ShaderVersion.ts#L22",tags:[],type:{name:"ShaderVersion",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ShaderVersion.ts#L15"},params:[{id:1310,name:"v",type:{name:"GlslVersion",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ShaderVersion.ts#L7"},tags:[],comment:"The initial glsl version",defaultValue:"'100'"}],typeParams:[]}],properties:[{id:1311,name:"version",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ShaderVersion.ts#L17",comment:"The current glsl version",type:{name:"GlslVersion",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ShaderVersion.ts#L7"},tags:["private"]}],accessors:[],methods:[{id:1317,name:"_genCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ShaderVersion.ts#L65",comment:"Generate the shader code for this ShaderVersion.",example:"For a ShaderVersion defined as :\n```js\nnew ShaderVersion('300 es')\n```\n\nThe generated code will be :\n```glsl\n#version 300 es\n```",tags:[],type:{name:"void"},params:[{id:1319,name:"slots",type:{name:"ChunksSlots",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L88"},tags:[],comment:"The slots to add the code to"}],typeParams:[]},{id:1315,name:"get",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ShaderVersion.ts#L45",comment:"Get the current glsl version.",tags:[],type:{name:"GlslVersion",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ShaderVersion.ts#L7"},typeParams:[]},{id:1320,name:"guessFromContext",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ShaderVersion.ts#L75",comment:`Guess the glsl version from the webgl context,
and set it.`,tags:[],type:{name:"void"},params:[{id:1322,name:"gl",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[],comment:"The webgl context"}],typeParams:[]},{id:1312,name:"set",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ShaderVersion.ts#L35",comment:`Set the glsl version.

The code will be invalidated if the value changes,
and need to be re-generated.`,tags:[],type:{name:"void"},params:[{id:1314,name:"v",type:{name:"GlslVersion",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ShaderVersion.ts#L7"},tags:[],comment:"The new glsl version"}],typeParams:[]}],extends:[{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12"}],implements:null},{id:1943,name:"ShadowMappedLightModel",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/AbstractLightModel.ts#L114",comment:"This class is the base class for shadow mapped light models.",tags:["abstract"],constructors:[],properties:[],accessors:[],methods:[{id:1949,name:"setup",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/AbstractLightModel.ts#L119",comment:"Setup the given program for this light model.",tags:[],type:{name:"void"},params:[{id:1951,name:"prg",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[],comment:"The program to setup"}],typeParams:[]}],extends:[{name:"AbstractLightModel",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/AbstractLightModel.ts#L14"},{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12"}],implements:null},{id:3228,name:"ShadowsChunk",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L261",comment:`This class handles shadows for light models,
in a shader chunk.`,tags:[],constructors:[{id:3229,name:"ShadowsChunk",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L288",tags:[],type:{name:"ShadowsChunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L261"},params:[{id:3231,name:"lightModel",type:{name:"StandardModel",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L62"},tags:[],comment:"The standard model this shadows chunk belongs to"}],typeParams:[]}],properties:[{id:3235,name:"_matrices",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L271",comment:"The projection matrix for each shadow",type:{name:"Float32Array"},tags:[]},{id:3237,name:"_shadowmapSizes",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L275",comment:"The size for each shadow map",type:{name:"Float32Array"},tags:[]},{id:3236,name:"_texelBiasVector",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L273",comment:"The texel bias vector for each shadow",type:{name:"Float32Array"},tags:[]},{id:3238,name:"_umatrices",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L278",comment:"The buffer used for the uniform for the projection matrices",type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"Float32Array"}]},tags:[]},{id:3240,name:"_ushadowmapSizes",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L282",comment:"The buffer used for the uniform for the shadow map sizes",type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"Float32Array"}]},tags:[]},{id:3239,name:"_utexelBiasVector",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L280",comment:"The buffer used for the uniform for the texel bias vector",type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"Float32Array"}]},tags:[]},{id:3234,name:"genCount",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L268",comment:"The number of generated shadow maps",type:{name:"number"},tags:[]},{id:3232,name:"lightModel",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L263",comment:"The standard model this shadows chunk belongs to",type:{name:"StandardModel",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L62"},tags:[]},{id:3233,name:"shadowCount",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L266",comment:"The number of shadow maps to generate",type:{name:"number"},tags:[]}],accessors:[],methods:[{id:3241,name:"_genCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L310",comment:"Generate the shader code for this shadows chunk.",tags:[],type:{name:"void"},params:[{id:3243,name:"slots",type:{name:"ChunksSlots",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L88"},tags:[],comment:"The slots to add the code to"}],typeParams:[]},{id:3244,name:"addLight",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L322",comment:"Add a light for which to handle shadow mapping.",tags:[],type:{name:"number"},params:[{id:3246,name:"light",type:{name:"ShadowMappedLight",lib:"nanogl-pbr",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L36"},tags:[],comment:"The light to add"}],typeParams:[]},{id:3247,name:"check",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L348",comment:`Check if the shadow count and generated shadow count are different.
If so, update the shadow data & invalidate the code.`,tags:[],type:{name:"void"},typeParams:[]},{id:3249,name:"setup",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L363",comment:"Setup the given program for this shadows chunk.",tags:[],type:{name:"void"},params:[{id:3251,name:"prg",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[],comment:"The program to setup"}],typeParams:[]}],extends:[{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12"}],implements:null},{id:1387,name:"SkinDeformer",originalName:"default",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/SkinDeformer.ts#L36",comment:`This class manages the code generation for skin deformers in a shader chunk.
It is used to deform a geometry using skinning.

You can change the joint matrices using the \`jointMatrices\` property.`,tags:[],constructors:[{id:1388,name:"SkinDeformer",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/SkinDeformer.ts#L51",tags:[],type:{name:"SkinDeformer",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/SkinDeformer.ts#L36"},params:[{id:1390,name:"numJoints",type:{name:"number"},tags:[],comment:"The number of joints"},{id:1391,name:"sets",type:{name:"SkinAttributeSet",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/SkinDeformer.ts#L19",isArray:!0},tags:[],comment:"The list of skin attribute definitions"}],typeParams:[]}],properties:[{id:1392,name:"_attributeSets",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/SkinDeformer.ts#L38",comment:"The list of skin attribute definitions",type:{name:"SkinAttributeSet",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/SkinDeformer.ts#L19",isArray:!0},tags:[]},{id:1395,name:"_jointMatrices",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/SkinDeformer.ts#L45",comment:"The joint matrices list",type:{name:"mat4",isArray:!0},tags:["private"]},{id:1394,name:"_jointsBuffer",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/SkinDeformer.ts#L43",comment:"The joints matrices data buffer",type:{name:"Float32Array"},tags:["private"]},{id:1393,name:"_numJoints",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/SkinDeformer.ts#L40",comment:"The number of joints",type:{name:"number"},tags:[]}],accessors:[{id:1398,name:"jointMatrices",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/SkinDeformer.ts#L75",getter:{name:"get jointMatrices",comment:"Get the joint matrices.",tags:[],type:{name:"mat4",isArray:!0},typeParams:[]}},{id:1396,name:"numJoints",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/SkinDeformer.ts#L68",getter:{name:"get numJoints",comment:"Get the number of joints.",tags:[],type:{name:"number"},typeParams:[]}}],methods:[{id:1403,name:"_genCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/SkinDeformer.ts#L91",comment:"Generate the vertex shader code for this skin deformer.",tags:["protected"],type:{name:"void"},params:[{id:1405,name:"slots",type:{name:"ChunksSlots",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L88"},tags:[],comment:"The slots to add the code to"}],typeParams:[]},{id:1400,name:"setup",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/SkinDeformer.ts#L83",comment:"Setup the given program for this skin deformer.",tags:[],type:{name:"void"},params:[{id:1402,name:"prg",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[],comment:"The program to setup"}],typeParams:[]}],extends:[{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12"}],implements:null},{id:1149,name:"SpecularSurface",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L110",comment:`This class handles the code generation for a PBR surface
with specular workflow in a shader chunk.`,tags:[],constructors:[{id:1150,name:"SpecularSurface",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L127",tags:[],type:{name:"SpecularSurface",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L110"},typeParams:[]}],properties:[{id:1153,name:"baseColor",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L115",comment:"The base color",type:{name:"Input",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664"},tags:["readonly"]},{id:1154,name:"baseColorFactor",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L117",comment:"The base color factor",type:{name:"Input",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664"},tags:["readonly"]},{id:1157,name:"glossiness",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L123",comment:"The glossiness value",type:{name:"Input",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664"},tags:["readonly"]},{id:1158,name:"glossinessFactor",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L125",comment:"The glossiness factor",type:{name:"Input",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664"},tags:["readonly"]},{id:1155,name:"specular",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L119",comment:"The specular color",type:{name:"Input",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664"},tags:["readonly"]},{id:1156,name:"specularFactor",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L121",comment:"The specular factor",type:{name:"Input",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664"},tags:["readonly"]},{id:1152,name:"type",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L112",comment:"The type of PBR workflow",defaultValue:"PbrWorkflowType.SPECULAR",type:{name:"SPECULAR",lib:"nanogl-pbr",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L10",parent:{kind:"Enumeration",name:"PbrWorkflowType"}},tags:["readonly"]}],accessors:[],methods:[{id:1159,name:"_genCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L142",comment:"Generate the shader code for this Specular surface.",tags:["protected"],type:{name:"void"},params:[{id:1161,name:"slots",type:{name:"ChunksSlots",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L88"},tags:[],comment:"The slots to add the code to"}],typeParams:[]}],extends:[{name:"AbstractPbrSurface",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L24"},{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12"}],implements:null},{id:2915,name:"SpotLight",originalName:"default",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/SpotLight.ts#L15",comment:"This class manages spot lights.",tags:[],constructors:[{id:2916,name:"SpotLight",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/SpotLight.ts#L33",tags:[],type:{name:"SpotLight",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/SpotLight.ts#L15"},typeParams:[]}],properties:[{id:2922,name:"_attenuationData",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/SpotLight.ts#L28",comment:"The computed attenuation data of the spot light",type:{name:"Float32Array"},tags:[]},{id:2923,name:"_camera",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/SpotLight.ts#L30",comment:"The camera to use when rendering the shadowmap",defaultValue:"null",type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"Camera",lib:"nanogl-camera",kind:"Class",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/index.ts#L18",data:{arguments:[{name:"PerspectiveLens",lib:"nanogl-camera",kind:"Class",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/perspective-lens.ts#L15"}]}}]},tags:[]},{id:2919,name:"_innerAngle",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/SpotLight.ts#L20",comment:"The inner angle of the spot light",defaultValue:"0",type:{name:"number"},tags:["private"]},{id:2920,name:"_outerAngle",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/SpotLight.ts#L22",comment:"The outer angle of the spot light",defaultValue:"0",type:{name:"number"},tags:["private"]},{id:2921,name:"_radius",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/SpotLight.ts#L24",comment:"The radius of the spot light",defaultValue:"0",type:{name:"number"},tags:["private"]},{id:2918,name:"_type",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/SpotLight.ts#L17",comment:"The type of lighting",defaultValue:"LightType.SPOT",type:{name:"SPOT",lib:"nanogl-pbr",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/LightType.ts#L5",parent:{kind:"Enumeration",name:"LightType"}},tags:["readonly"]}],accessors:[{id:2935,name:"angle",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/SpotLight.ts#L97",setter:{name:"set angle",comment:`Set the outer angle of the spot light.
This will not update the attenuation data.`,tags:[],type:{name:"void"},params:[{id:2938,name:"v",type:{name:"number"},tags:[],comment:"The new value"}],typeParams:[]},getter:{name:"get angle",comment:"Get the outer angle of the spot light.",tags:[],type:{name:"number"},typeParams:[]}},{id:2931,name:"innerAngle",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/SpotLight.ts#L83",setter:{name:"set innerAngle",comment:`Set the inner angle of the spot light.
This will also update the attenuation data.`,tags:[],type:{name:"void"},params:[{id:2934,name:"v",type:{name:"number"},tags:[],comment:"The new value"}],typeParams:[]},getter:{name:"get innerAngle",comment:"Get the inner angle of the spot light.",tags:[],type:{name:"number"},typeParams:[]}},{id:2939,name:"outerAngle",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/SpotLight.ts#L108",setter:{name:"set outerAngle",comment:`Set the outer angle of the spot light.
This will also update the attenuation data
and adjust the camera fov if the light casts shadows.`,tags:[],type:{name:"void"},params:[{id:2942,name:"v",type:{name:"number"},tags:[],comment:"The new value"}],typeParams:[]},getter:{name:"get outerAngle",comment:"Get the outer angle of the spot light.",tags:[],type:{name:"number"},typeParams:[]}},{id:2943,name:"radius",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/SpotLight.ts#L127",setter:{name:"set radius",comment:`Set the radius of the spot light.
This will also update the attenuation data.`,tags:[],type:{name:"void"},params:[{id:2946,name:"v",type:{name:"number"},tags:[],comment:"The new value"}],typeParams:[]},getter:{name:"get radius",comment:"Get the radius of the spot light.",tags:[],type:{name:"number"},typeParams:[]}}],methods:[{id:2929,name:"_createCamera",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/SpotLight.ts#L70",comment:"Create a camera suitable to render the shadowmap.",tags:[],type:{name:"Camera",lib:"nanogl-camera",kind:"Class",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/index.ts#L18",data:{arguments:[{name:"PerspectiveLens",lib:"nanogl-camera",kind:"Class",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/perspective-lens.ts#L15"}]}},typeParams:[]},{id:2947,name:"_updateSpotData",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/SpotLight.ts#L142",comment:"Update the attenuation data of the spot light.",tags:[],type:{name:"void"},typeParams:[]},{id:2927,name:"getTexelBiasVector",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/SpotLight.ts#L59",comment:"Get the texel bias vector used to sample the shadowmap.",tags:[],type:{name:"Float32Array"},typeParams:[]},{id:2924,name:"projectionFromBounds",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/SpotLight.ts#L43",comment:`Adjust the camera's projection of the light's shadowmap
to fit the given bounds.`,tags:[],type:{name:"void"},params:[{id:2926,name:"bounds",type:{name:"Bounds",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Bounds.ts#L46"},tags:[],comment:"The bounds to use"}],typeParams:[]}],extends:[{name:"PunctualLight",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/PunctualLight.ts#L29"},{name:"Light",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L15"},{name:"Node",lib:"nanogl-node",kind:"Class",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L18"}],implements:{name:"ShadowMappedLight",lib:"nanogl-pbr",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L36"}},{id:3038,name:"SpotLightModel",originalName:"default",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/SpotLightModel.ts#L13",comment:"This class manages spot light models.",tags:[],constructors:[{id:3039,name:"SpotLightModel",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/SpotLightModel.ts#L31",tags:[],type:{name:"SpotLightModel",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/SpotLightModel.ts#L13"},params:[{id:3041,name:"code",type:{name:"GlslCode",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/GlslCode.ts#L2"},tags:[],comment:"The shader code template for this light model"},{id:3042,name:"preCode",type:{name:"GlslCode",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/GlslCode.ts#L2"},tags:[],comment:"The shader pre-code template for this light model"}],typeParams:[]}],properties:[{id:3047,name:"_attenuation",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/SpotLightModel.ts#L25",comment:"The attenuation amount for each light",type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"Float32Array"}]},tags:[]},{id:3046,name:"_colors",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/SpotLightModel.ts#L23",comment:"The color for each light",type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"Float32Array"}]},tags:[]},{id:3045,name:"_directions",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/SpotLightModel.ts#L21",comment:"The direction for each light",type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"Float32Array"}]},tags:[]},{id:3044,name:"_positions",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/SpotLightModel.ts#L19",comment:"The position for each light",type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"Float32Array"}]},tags:[]},{id:3043,name:"type",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/SpotLightModel.ts#L16",comment:"The type of lighting",defaultValue:"LightType.SPOT",type:{name:"SPOT",lib:"nanogl-pbr",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/LightType.ts#L5",parent:{kind:"Enumeration",name:"LightType"}},tags:["readonly"]}],accessors:[],methods:[{id:3053,name:"allocate",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/SpotLightModel.ts#L58",comment:`Allocate the positions, directions, colors & attenuation amount
arrays for the given number of lights.`,tags:[],type:{name:"void"},params:[{id:3055,name:"n",type:{name:"number"},tags:[],comment:"The number of lights"}],typeParams:[]},{id:3048,name:"genCodePerLights",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/SpotLightModel.ts#L44",comment:"Generate the shader code for a given light in this LightModel.",tags:[],type:{name:"string"},params:[{id:3050,name:"light",type:{name:"SpotLight",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/SpotLight.ts#L15"},tags:[],comment:"The light to generate the code for"},{id:3051,name:"index",type:{name:"number"},tags:[],comment:"The index of the light"},{id:3052,name:"shadowIndex",type:{name:"number"},tags:[],comment:"The shadow index of the light"}],typeParams:[]},{id:3056,name:"prepare",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/SpotLightModel.ts#L69",comment:"Prepare the light model for rendering.",tags:[],type:{name:"void"},params:[{id:3058,name:"gl",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[],comment:"The webgl context to use"},{id:3059,name:"model",type:{name:"StandardModel",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L62"},tags:[],comment:"The parent light model"}],typeParams:[]},{id:3060,name:"setup",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/SpotLightModel.ts#L100",comment:"Setup the given program for this light model.",tags:[],type:{name:"void"},params:[{id:3062,name:"prg",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[],comment:"The program to setup"}],typeParams:[]}],extends:[{name:"ShadowMappedLightModel",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/AbstractLightModel.ts#L114"},{name:"AbstractLightModel",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/AbstractLightModel.ts#L14"},{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12"}],implements:null},{id:1534,name:"StandardMetalness",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L205",comment:"This class manages the standard pass of a metalness material.",tags:[],constructors:[{id:1535,name:"StandardMetalness",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L212",tags:[],type:{name:"StandardMetalness",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L205"},params:[{id:1537,name:"name",type:{name:"string"},tags:[],comment:"The name of the pass",defaultValue:"'gltf-std-pass'"}],typeParams:[]}],properties:[{id:1538,name:"surface",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L207",comment:"The PBR surface used for this pass",type:{name:"MetalnessSurface",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L57"},tags:["readonly"]}],accessors:[],methods:[],extends:[{name:"StandardPass",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L32"},{name:"MaterialPass",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MaterialPass.ts#L14"}],implements:null},{id:3295,name:"StandardModel",originalName:"default",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L62",comment:`This class manages standard light models.

It is a global light model that handles
the light models for all lighting types.`,tags:[],constructors:[{id:3296,name:"StandardModel",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L90",tags:[],type:{name:"StandardModel",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L62"},params:[{id:3298,name:"modelCode",type:{name:"ILightModelCode",lib:"nanogl-pbr",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/ILightModel.ts#L47"},tags:["optional"],comment:"The code for this light model, if not provided, the standard code is used",optional:!0}],typeParams:[]}],properties:[{id:3306,name:"_dataList",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L83",comment:"The list of light models",type:{name:"AbstractLightModel",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/AbstractLightModel.ts#L14",data:{arguments:[{name:"Light",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L15"}]},isArray:!0},tags:["private"]},{id:3305,name:"_datas",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L81",comment:"The list of model type / light model pairs",type:{name:"Record",data:{arguments:[{name:"string"},{name:"AbstractLightModel",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/AbstractLightModel.ts#L14"}]}},tags:["private"]},{id:3307,name:"_setup",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L85",comment:"The light setup for this model",type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"LightSetup",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/LightSetup.ts#L17"}]},tags:["private"]},{id:3299,name:"modelCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L64",comment:"The code for this light model",type:{name:"ILightModelCode",lib:"nanogl-pbr",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/ILightModel.ts#L47"},tags:[]},{id:3301,name:"postLightsChunk",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L69",comment:"The shader chunk for the setup after lighting",type:{name:"PostLightsChunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L226"},tags:[]},{id:3300,name:"preLightsChunk",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L67",comment:"The shader chunk for the setup before lighting",type:{name:"PreLightsChunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L197"},tags:[]},{id:3302,name:"shadowChunk",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L71",comment:"The shader chunk for shadows",type:{name:"ShadowsChunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L261"},tags:[]},{id:3303,name:"shadowFilter",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L73",comment:"The shader chunk for shadow filtering",type:{name:"ShadowFilteringEnum",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ShadowFilteringEnum.ts#L19"},tags:[]}],accessors:[],methods:[{id:3316,name:"add",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L145",comment:`Add a light to the model.
The light will be added to the corresponding type light model.`,tags:[],type:{name:"void"},params:[{id:3318,name:"l",type:{name:"Light",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L15"},tags:[],comment:"The light to add"}],typeParams:[]},{id:3325,name:"getChunks",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L168",comment:"Get the shader chunks for the light model.",tags:[],type:{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12",isArray:!0},typeParams:[]},{id:3311,name:"getLightSetup",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L129",comment:"Get the light model setup.",tags:[],type:{name:"LightSetup",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/LightSetup.ts#L17"},typeParams:[]},{id:3322,name:"prepare",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L157",comment:"Prepare the light model for rendering.",tags:[],type:{name:"void"},params:[{id:3324,name:"gl",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[],comment:"The webgl context to use"}],typeParams:[]},{id:3308,name:"registerLightModel",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L123",comment:"Register a light model to this model.",tags:[],type:{name:"void"},params:[{id:3310,name:"model",type:{name:"AbstractLightModel",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/AbstractLightModel.ts#L14",data:{arguments:[{name:"Light",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L15"}]}},tags:[],comment:"The light model to register"}],typeParams:[]},{id:3319,name:"remove",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L151",comment:"Remove a light from the model.",tags:[],type:{name:"void"},params:[{id:3321,name:"l",type:{name:"Light",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L15"},tags:[],comment:"The light to remove"}],typeParams:[]},{id:3313,name:"setLightSetup",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L136",comment:"Set the light model setup.",tags:[],type:{name:"void"},params:[{id:3315,name:"ls",type:{name:"LightSetup",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/LightSetup.ts#L17"},tags:[],comment:"The light model setup to use"}],typeParams:[]}],extends:null,implements:{name:"ILightModel",lib:"nanogl-pbr",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/ILightModel.ts#L10"}},{id:1450,name:"StandardPass",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L32",comment:"This class manages the standard pass of a material.",tags:[],constructors:[{id:1451,name:"StandardPass",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L91",tags:[],type:{name:"StandardPass",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L32",data:{arguments:[{name:"TSurface"}]}},params:[{id:1454,name:"name",type:{name:"string"},tags:[],comment:"The name of the pass",defaultValue:"'gltf-std-pass'"}],typeParams:[{id:1453,name:"TSurface",type:{name:"PbrSurface",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L14"},tags:[],comment:"The type of the PBR surface to use for this pass",default:{name:"PbrSurface",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L14"}}]}],properties:[{id:1458,name:"alpha",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L41",comment:"The alpha value",type:{name:"Input",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664"},tags:[]},{id:1460,name:"alphaCutoff",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L45",comment:"The alpha cutoff",type:{name:"Input",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664"},tags:[]},{id:1459,name:"alphaFactor",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L43",comment:"The alpha factor",type:{name:"Input",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664"},tags:[]},{id:1469,name:"alphaMode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L67",comment:"The alpha rendering mode",type:{name:"AlphaModeEnum",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/AlphaModeEnum.ts#L17"},tags:[]},{id:1471,name:"doubleSided",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L72",comment:"Whether the backface of the geometry should be rendered or not",type:{name:"Flag",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Flag.ts#L13",data:{arguments:[{name:"string"}]}},tags:[]},{id:1461,name:"emissive",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L47",comment:"The emissive color",type:{name:"Input",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664"},tags:[]},{id:1462,name:"emissiveFactor",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L49",comment:"The emissive factor",type:{name:"Input",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664"},tags:[]},{id:1470,name:"gammaMode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L69",comment:"The gamma correction mode",type:{name:"GammaModeEnum",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/GammaModeEnum.ts#L22"},tags:[]},{id:1473,name:"glossNearest",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L79",comment:`Whether glossiness should use the nearest env map blur level or a lerp between
the higher and lower levels`,type:{name:"Flag",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Flag.ts#L13",data:{arguments:[{name:"string"}]}},tags:[]},{id:1468,name:"iExposure",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L64",comment:"The exposure multiplier",type:{name:"Input",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664"},tags:[]},{id:1467,name:"iGamma",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L62",comment:"The gamma value for gamma correction\n(only used if gammaMode is set to `GAMMA_STD`)",type:{name:"Input",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664"},tags:[]},{id:1463,name:"normal",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L51",comment:"The normal map",type:{name:"Input",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664"},tags:[]},{id:1464,name:"normalScale",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L53",comment:"The normal scale",type:{name:"Input",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664"},tags:[]},{id:1465,name:"occlusion",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L55",comment:"The occlusion value",type:{name:"Input",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664"},tags:[]},{id:1466,name:"occlusionStrength",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L57",comment:"The occlusion strength",type:{name:"Input",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664"},tags:[]},{id:1474,name:"perVertexIrrad",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L81",comment:"Whether the irradiance should be computed per vertex or per fragment",type:{name:"Flag",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Flag.ts#L13",data:{arguments:[{name:"string"}]}},tags:[]},{id:1456,name:"precision",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L37",comment:"The shader float precision",type:{name:"ShaderPrecision",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ShaderPrecision.ts#L14"},tags:[]},{id:1457,name:"shaderid",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L39",comment:"The id for the shader",type:{name:"Flag",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Flag.ts#L13",data:{arguments:[{name:"string"}]}},tags:[]},{id:1475,name:"surface",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L83",comment:"The PBR surface used for this pass",type:{name:"TSurface"},tags:["optional"]},{id:1455,name:"version",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L35",comment:"The glsl version",type:{name:"ShaderVersion",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ShaderVersion.ts#L15"},tags:[]}],accessors:[],methods:[{id:1482,name:"prepare",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L157",comment:"Prepare the given program for this pass.",tags:[],type:{name:"void"},params:[{id:1484,name:"prg",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[],comment:"The program to setup"},{id:1485,name:"node",type:{name:"Node",lib:"nanogl-node",kind:"Class",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L18"},tags:[],comment:"The node to use for transforms"},{id:1486,name:"camera",type:{name:"Camera",lib:"nanogl-camera",kind:"Class",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/index.ts#L18",data:{arguments:[{name:"ICameraLens",lib:"nanogl-camera",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ICameraLens.ts#L4"}]}},tags:[],comment:"The camera to use for projection"}],typeParams:[]},{id:1479,name:"setLightSetup",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L152",comment:"Set the light setup to use for this pass.",tags:[],type:{name:"void"},params:[{id:1481,name:"setup",type:{name:"LightSetup",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/LightSetup.ts#L17"},tags:[],comment:"The light setup to use for this pass"}],typeParams:[]},{id:1476,name:"setSurface",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L140",comment:"Set the PBR surface to use for this pass.",tags:[],type:{name:"void"},params:[{id:1478,name:"surface",type:{name:"TSurface"},tags:[],comment:"The surface to use for this pass"}],typeParams:[]}],extends:[{name:"MaterialPass",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MaterialPass.ts#L14"}],implements:null},{id:1493,name:"StandardSpecular",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L185",comment:"This class manages the standard pass of a specular material.",tags:[],constructors:[{id:1494,name:"StandardSpecular",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L192",tags:[],type:{name:"StandardSpecular",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L185"},params:[{id:1496,name:"name",type:{name:"string"},tags:[],comment:"The name of the pass",defaultValue:"'gltf-std-pass'"}],typeParams:[]}],properties:[{id:1497,name:"surface",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L187",comment:"The PBR surface used for this pass",type:{name:"SpecularSurface",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L110"},tags:["readonly"]}],accessors:[],methods:[],extends:[{name:"StandardPass",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/StandardPass.ts#L32"},{name:"MaterialPass",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MaterialPass.ts#L14"}],implements:null},{id:1692,name:"StaticTexCoord",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L335",comment:`This class manages the code generation for
static texture coordinates in a shader chunk.

The transformation cannot be changed after creation.`,tags:[],constructors:[{id:1707,name:"StaticTexCoord",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L351",tags:[],type:{name:"StaticTexCoord",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L335"},params:[{id:1709,name:"attrib",type:{name:"string"},tags:["optional"],comment:"The name of the attribute for the texture coordinates",optional:!0,defaultValue:"_DefaultTexCoord"},{id:1710,name:"matrix",type:{name:"mat3"},tags:[],comment:"The transformation matrix to use"}],typeParams:[]}],properties:[{id:1714,name:"_rotateScalesConst",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L345",comment:"The shader constant attached to the input for rotation & scale",type:{name:"Constant",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L573"},tags:["private","optional"]},{id:1712,name:"_rotateScalesInput",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L340",comment:"The shader input for rotation & scale",type:{name:"Input",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664"},tags:["private","optional"]},{id:1713,name:"_translateConst",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L343",comment:"The shader constant attached to the input for translation",type:{name:"Constant",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L573"},tags:["private","optional"]},{id:1711,name:"_translateInput",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L338",comment:"The shader input for translation",type:{name:"Input",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664"},tags:["private","optional"]}],accessors:[],methods:[{id:1717,name:"getTransformCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L379",comment:"Get the code for the texture coords transformation.",tags:[],type:{name:"string"},typeParams:[]},{id:1715,name:"varying",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L374",comment:"Get the varying name for the texture coords.",tags:[],type:{name:"string"},typeParams:[]}],extends:[{name:"TexCoord",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L153"},{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12"}],implements:null},{id:1771,name:"TexCoord",originalName:"default",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L153",comment:`This class is the base class for texture coordinates.

It manages the code generation for texture coordinates in a shader chunk.`,tags:["abstract"],constructors:[{id:1786,name:"TexCoord",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L204",tags:[],type:{name:"TexCoord",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L153"},params:[{id:1788,name:"attrib",type:{name:"string"},tags:["optional"],comment:"The name of the attribute for the texture coordinates",optional:!0,defaultValue:"_DefaultTexCoord"},{id:1789,name:"hasSetup",type:{name:"boolean"},tags:[],comment:"Whether the chunk needs program setup (for uniforms) or not"}],typeParams:[]}],properties:[{id:1790,name:"_transform",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L193",comment:"The transformation of the texture coordinates",type:{name:"TexCoordTransform",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L97"},tags:["readonly"]},{id:1792,name:"_uid",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L198",comment:"The unique id of the texture coords",defaultValue:"''",type:{name:"string"},tags:["protected"]},{id:1791,name:"attrib",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L196",comment:"The name of the attribute for the texture coordinates",type:{name:"string"},tags:["readonly"]}],accessors:[],methods:[{id:1797,name:"_genCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L219",comment:"Generate the shader code for this TexCoord.",tags:[],type:{name:"void"},params:[{id:1799,name:"slots",type:{name:"ChunksSlots",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L88"},tags:[],comment:"The slots to add the code to"}],typeParams:[]},{id:1795,name:"getTransformCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L213",comment:"Get the code for the texture coords transformation.",tags:["abstract"],type:{name:"string"},typeParams:[]},{id:1793,name:"varying",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L211",comment:"Get the varying name for the texture coords.",tags:["abstract"],type:{name:"string"},typeParams:[]},{id:1772,name:"create",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L158",comment:"Create static texture coordinates without transformation",tags:["static"],type:{name:"StaticTexCoord",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L335"},params:[{id:1774,name:"attrib",type:{name:"string"},tags:["optional"],comment:"The name of the attribute for the texture coordinates",optional:!0}],typeParams:[]},{id:1779,name:"createFromTRS",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L176",comment:"Create static texture coordinates with transformation options",tags:["static"],type:{name:"StaticTexCoord",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L335"},params:[{id:1781,name:"attrib",type:{name:"string"},tags:["optional"],comment:"The name of the attribute for the texture coordinates",optional:!0},{id:1782,name:"trsOpt",type:{name:"TRSOpts",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L47"},tags:["optional"],comment:"The transformation options to use",optional:!0,defaultValue:"{}"}],typeParams:[]},{id:1775,name:"createTransformed",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L167",comment:"Create static texture coordinates with transformation matrix",tags:["static"],type:{name:"StaticTexCoord",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L335"},params:[{id:1777,name:"attrib",type:{name:"string"},tags:["optional"],comment:"The name of the attribute for the texture coordinates",optional:!0},{id:1778,name:"matrix",type:{name:"mat3"},tags:["optional"],comment:"The transformation matrix to use",optional:!0,defaultValue:"M3_IDENTITY"}],typeParams:[]},{id:1783,name:"createTransformedDynamic",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L188",comment:"Create dynamic texture coordinates",tags:["static"],type:{name:"DynamicTexCoord",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L233"},params:[{id:1785,name:"attrib",type:{name:"string"},tags:["optional"],comment:"The name of the attribute for the texture coordinates",optional:!0}],typeParams:[]}],extends:[{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12"}],implements:null},{id:1583,name:"TexCoordTransform",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L97",comment:"This class handles the transformation of texture coordinates.",tags:[],constructors:[{id:1584,name:"TexCoordTransform",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L97",tags:[],type:{name:"TexCoordTransform",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L97"},typeParams:[]}],properties:[{id:1586,name:"buffer",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L101",comment:"The transform data buffer",type:{name:"Float32Array"},tags:["readonly"]},{id:1589,name:"rotation",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L108",comment:"The rotation of the texcoords",type:{name:"Float32Array"},tags:["readonly"]},{id:1588,name:"scale",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L106",comment:"The scale of the texcoords",type:{name:"vec2"},tags:["readonly"]},{id:1587,name:"translation",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L104",comment:"The translation of the texcoords",type:{name:"vec2"},tags:["readonly"]}],accessors:[],methods:[{id:1593,name:"composeMat2",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L128",comment:"Compose a matrix from the rotation and scale components.",tags:[],type:{name:"Float32Array"},typeParams:[]},{id:1590,name:"decomposeMatrix",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L116",comment:`Decompose given matrix in transform components.
This will set the translation, scale and rotation properties.`,tags:[],type:{name:"void"},params:[{id:1592,name:"m",type:{name:"mat3"},tags:[],comment:"The matrix to decompose"}],typeParams:[]},{id:1595,name:"getTransformHash",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L141",comment:"Get the hashed transform data.",tags:[],type:{name:"number"},typeParams:[]}],extends:null,implements:null},{id:548,name:"Uniform",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L334",comment:`This class manages uniform input parameters
for shaders.

It handles the declaration of a uniform, and its colorspace.`,tags:[],constructors:[{id:555,name:"Uniform",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L400",tags:[],type:{name:"Uniform",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L334"},params:[{id:557,name:"name",type:{name:"string"},tags:[],comment:"The name of the uniform param"},{id:558,name:"size",type:{name:"InputSize",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L30"},tags:[],comment:"The size of the uniform param value"}],typeParams:[]}],properties:[{id:563,name:"_value",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L343",comment:"The value of the uniform",type:{name:"Float32Array"},tags:["private"]},{id:560,name:"name",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L338",comment:"The name of the input param",type:{name:"string"},tags:["readonly"]},{id:559,name:"ptype",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L336",comment:"The type of the input param",defaultValue:"ParamType.UNIFORM",type:{name:"UNIFORM",lib:"nanogl-pbr",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L101",parent:{kind:"Enumeration",name:"ParamType"}},tags:["readonly"]},{id:561,name:"size",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L339",comment:"The size of the input param value",type:{name:"InputSize",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L30"},tags:["readonly"]},{id:562,name:"token",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L340",comment:`The name of the variable created for this input param,
used to access the value in the shader code.`,type:{name:"string"},tags:[]}],accessors:[{id:564,name:"value",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L346",getter:{name:"get value",comment:"Get the current value of the uniform",tags:[],type:{name:"Float32Array"},typeParams:[]}},{id:578,name:"w",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L373",setter:{name:"set w",comment:`Set the w value of the uniform,
for vectors of size 4.`,tags:[],type:{name:"void"},params:[{id:581,name:"v",type:{name:"number"},tags:[],comment:"The new value"}],typeParams:[]},getter:{name:"get w",comment:`Get the w value of the uniform,
for vectors of size 4.`,tags:[],type:{name:"number"},typeParams:[]}},{id:566,name:"x",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L355",setter:{name:"set x",comment:`Set the x value of the uniform,
for vectors of size 1, 2, 3 or 4.`,tags:[],type:{name:"void"},params:[{id:569,name:"v",type:{name:"number"},tags:[],comment:"The new value"}],typeParams:[]},getter:{name:"get x",comment:`Get the x value of the uniform,
for vectors of size 1, 2, 3 or 4.`,tags:[],type:{name:"number"},typeParams:[]}},{id:570,name:"y",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L361",setter:{name:"set y",comment:`Set the y value of the uniform,
for vectors of size 2, 3 or 4.`,tags:[],type:{name:"void"},params:[{id:573,name:"v",type:{name:"number"},tags:[],comment:"The new value"}],typeParams:[]},getter:{name:"get y",comment:`Get the y value of the uniform,
for vectors of size 2, 3 or 4.`,tags:[],type:{name:"number"},typeParams:[]}},{id:574,name:"z",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L367",setter:{name:"set z",comment:`Set the z value of the uniform,
for vectors of size 3 or 4.`,tags:[],type:{name:"void"},params:[{id:577,name:"v",type:{name:"number"},tags:[],comment:"The new value"}],typeParams:[]},getter:{name:"get z",comment:`Get the z value of the uniform,
for vectors of size 3 or 4.`,tags:[],type:{name:"number"},typeParams:[]}}],methods:[{id:585,name:"_genCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L427",comment:"This method is not used for input params.",tags:["protected"],type:{name:"void"},params:[{id:587,name:"slots",type:{name:"ChunksSlots",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L88"},tags:[]}],typeParams:[]},{id:588,name:"genInputCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L440",comment:`Generate the shader code for this uniform param and
add it to the given slots in the input attached shader type.

The uniform can be accessed with the name of the input param in the shader.
The uniform value, with transformed colorspace,
can be accessed with the token of the input param in the shader.`,tags:[],type:{name:"void"},params:[{id:590,name:"slots",type:{name:"ChunksSlots",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L88"},tags:[],comment:"The slots to add the code to"},{id:591,name:"input",type:{name:"Input",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664"},tags:[],comment:"The input this param is attached to"}],typeParams:[]},{id:582,name:"set",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L417",comment:"Set the value of the uniform.",tags:[],type:{name:"void"},params:[{id:584,name:"args",type:{name:"number",isArray:!0},tags:[],comment:"The new value"}],typeParams:[]},{id:592,name:"setup",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L453",comment:"Setup the given program for this uniform param.",tags:[],type:{name:"void"},params:[{id:594,name:"prg",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[],comment:"The program to setup"}],typeParams:[]},{id:549,name:"colorSpaceTransformCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L465",comment:"Generate the shader code for the colorspace transform of a uniform param variable.",tags:["static"],type:{name:"string"},params:[{id:551,name:"from",type:{name:"ColorSpace",lib:"nanogl-pbr",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ColorSpace.ts#L4"},tags:[],comment:"The colorspace the variable is in"},{id:552,name:"to",type:{name:"ColorSpace",lib:"nanogl-pbr",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ColorSpace.ts#L4"},tags:[],comment:"The colorspace we want to transform to"},{id:553,name:"d",type:{name:"string"},tags:[],comment:"The name of the variable to create for the transformed value"},{id:554,name:"v",type:{name:"string"},tags:[],comment:"The access to the variable to transform"}],typeParams:[]}],extends:[{name:"BaseParams",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L150"},{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12"}],implements:{name:"IInputParam",lib:"nanogl-pbr",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L115"}},{id:1847,name:"UnlitPass",originalName:"default",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/UnlitPass.ts#L31",comment:"This class manages the unlit pass of a material.",tags:[],constructors:[{id:1848,name:"UnlitPass",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/UnlitPass.ts#L61",tags:[],type:{name:"UnlitPass",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/UnlitPass.ts#L31"},params:[{id:1850,name:"name",type:{name:"string"},tags:[],comment:"The name of the pass",defaultValue:"'unlit-pass'"}],typeParams:[]}],properties:[{id:1856,name:"alpha",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/UnlitPass.ts#L44",comment:"The alpha value",type:{name:"Input",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664"},tags:[]},{id:1858,name:"alphaCutoff",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/UnlitPass.ts#L48",comment:"The alpha cutoff",type:{name:"Input",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664"},tags:[]},{id:1857,name:"alphaFactor",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/UnlitPass.ts#L46",comment:"The alpha factor",type:{name:"Input",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664"},tags:[]},{id:1859,name:"alphaMode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/UnlitPass.ts#L51",comment:"The alpha rendering mode",type:{name:"AlphaModeEnum",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/AlphaModeEnum.ts#L17"},tags:[]},{id:1854,name:"baseColor",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/UnlitPass.ts#L40",comment:"The base color",type:{name:"Input",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664"},tags:[]},{id:1855,name:"baseColorFactor",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/UnlitPass.ts#L42",comment:"The base color factor",type:{name:"Input",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664"},tags:[]},{id:1860,name:"doubleSided",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/UnlitPass.ts#L54",comment:"Whether the backface of the geometry should be rendered or not",type:{name:"Flag",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Flag.ts#L13",data:{arguments:[{name:"string"}]}},tags:[]},{id:1852,name:"precision",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/UnlitPass.ts#L36",comment:"The shader float precision",type:{name:"ShaderPrecision",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ShaderPrecision.ts#L14"},tags:[]},{id:1853,name:"shaderid",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/UnlitPass.ts#L38",comment:"The id for the shader",type:{name:"Flag",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Flag.ts#L13",data:{arguments:[{name:"string"}]}},tags:[]},{id:1851,name:"version",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/UnlitPass.ts#L34",comment:"The glsl version",type:{name:"ShaderVersion",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ShaderVersion.ts#L15"},tags:[]}],accessors:[],methods:[{id:1864,name:"prepare",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/UnlitPass.ts#L100",comment:"Prepare the given program for this pass.",tags:[],type:{name:"void"},params:[{id:1866,name:"prg",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[],comment:"The program to setup"},{id:1867,name:"node",type:{name:"Node",lib:"nanogl-node",kind:"Class",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L18"},tags:[],comment:"The node to use for transforms"},{id:1868,name:"camera",type:{name:"Camera",lib:"nanogl-camera",kind:"Class",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/index.ts#L18",data:{arguments:[{name:"ICameraLens",lib:"nanogl-camera",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ICameraLens.ts#L4"}]}},tags:[],comment:"The camera to use for projection"}],typeParams:[]},{id:1861,name:"setLightSetup",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/UnlitPass.ts#L97",comment:`Set the light setup to use for this pass.
Does nothing for an unlit pass.`,tags:[],type:{name:"void"},params:[{id:1863,name:"setup",type:{name:"LightSetup",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/LightSetup.ts#L17"},tags:[],comment:"The light setup to use for this pass"}],typeParams:[]}],extends:[{name:"MaterialPass",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MaterialPass.ts#L14"}],implements:null}],functions:[{id:355,name:"hashNumber",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Hash.ts#L111",comment:`Hash a number.
If a hash is provided, the new hash will be merged into the previous one.`,tags:[],type:{name:"Hash",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Hash.ts#L2"},params:[{id:357,name:"n",type:{name:"number"},tags:[],comment:"The number to hash"},{id:358,name:"hash",type:{name:"number"},tags:["optional"],comment:"The previous hash",optional:!0,defaultValue:"0"}],typeParams:[]},{id:351,name:"hashString",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Hash.ts#L88",comment:`Hash a string.
If a hash is provided, the new hash will be merged into the previous one.`,tags:[],type:{name:"Hash",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Hash.ts#L2"},params:[{id:353,name:"str",type:{name:"string"},tags:[],comment:"The string to hash"},{id:354,name:"hash",type:{name:"number"},tags:["optional"],comment:"The previous hash",optional:!0,defaultValue:"0"}],typeParams:[]},{id:363,name:"hashView",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Hash.ts#L137",comment:`Hash an ArrayBufferView.
If a hash is provided, the new hash will be merged into the previous one.`,tags:[],type:{name:"Hash",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Hash.ts#L2"},params:[{id:365,name:"a",type:{name:"ArrayBufferView"},tags:[],comment:"The ArrayBufferView to hash"},{id:366,name:"hash",type:{name:"number"},tags:["optional"],comment:"The previous hash",optional:!0,defaultValue:"0"}],typeParams:[]},{id:2450,name:"lightIsShadowMappedLight",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L29",comment:"Know whether a given light is a shadow mapped light or not.",tags:[],type:{name:"light",data:{useAsserts:!1,targetType:{name:"ShadowMappedLight",lib:"nanogl-pbr",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L36"}}},params:[{id:2452,name:"light",type:{name:"Light",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L15"},tags:[],comment:"The light to test"}],typeParams:[]},{id:359,name:"mergeHash",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Hash.ts#L124",comment:"Merge a Hash into another Hash.",tags:[],type:{name:"number"},params:[{id:361,name:"h1",type:{name:"number"},tags:[],comment:"The Hash to merge into"},{id:362,name:"h2",type:{name:"number"},tags:[],comment:"The Hash to merge"}],typeParams:[]},{id:367,name:"stringifyHash",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Hash.ts#L160",comment:"Stringify a Hash.",tags:[],type:{name:"string"},params:[{id:369,name:"h",type:{name:"number"},tags:[],comment:"The Hash to stringify"}],typeParams:[]}],interfaces:[{id:400,name:"IInputParam",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L115",comment:`An input parameter for shaders.

They handle the declaration of sampler, uniform, attribute
and constant input parameters for shaders.`,tags:[],properties:[{id:402,name:"name",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L119",comment:"The name of the input param",type:{name:"string"},tags:[]},{id:401,name:"ptype",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L117",comment:"The type of the input param",type:{name:"ParamType",lib:"nanogl-pbr",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L97"},tags:["readonly"]},{id:403,name:"size",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L121",comment:"The size of the input param value",type:{name:"InputSize",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L30"},tags:[]},{id:404,name:"token",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L126",comment:`The name of the variable created for this input param,
used to access the value in the shader code.`,type:{name:"string"},tags:[]}],accessors:[],methods:[{id:405,name:"genInputCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L133",comment:"Generate the shader code for this input param.",tags:[],type:{name:"void"},params:[{id:407,name:"slots",type:{name:"ChunksSlots",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L88"},tags:[],comment:"The slots to add the code to"},{id:408,name:"input",type:{name:"Input",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L664"},tags:[],comment:"The input this param is attached to"}],typeParams:[]}],extends:null,implemented:[{name:"Attribute",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L496"},{name:"Constant",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L573"},{name:"Sampler",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L207"},{name:"Uniform",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L334"}]},{id:1907,name:"ILightModel",originalName:"default",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/ILightModel.ts#L10",comment:"This interface represents a global light model.",tags:[],properties:[],accessors:[],methods:[{id:1913,name:"add",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/ILightModel.ts#L25",comment:"Add a light to the model.",tags:[],type:{name:"void"},params:[{id:1915,name:"l",type:{name:"Light",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L15"},tags:[],comment:"The light to add"}],typeParams:[]},{id:1922,name:"getChunks",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/ILightModel.ts#L40",comment:"Get the shader chunks for the light model.",tags:[],type:{name:"Chunk",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Chunk.ts#L12",isArray:!0},typeParams:[]},{id:1911,name:"getLightSetup",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/ILightModel.ts#L19",comment:"Get the light model setup.",tags:[],type:{name:"LightSetup",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/LightSetup.ts#L17"},typeParams:[]},{id:1919,name:"prepare",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/ILightModel.ts#L36",comment:"Prepare the light model for rendering.",tags:[],type:{name:"void"},params:[{id:1921,name:"gl",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[],comment:"The webgl context to use"}],typeParams:[]},{id:1916,name:"remove",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/ILightModel.ts#L30",comment:"Remove a light from the model.",tags:[],type:{name:"void"},params:[{id:1918,name:"l",type:{name:"Light",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L15"},tags:[],comment:"The light to remove"}],typeParams:[]},{id:1908,name:"setLightSetup",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/ILightModel.ts#L15",comment:"Set the light model setup.",tags:[],type:{name:"void"},params:[{id:1910,name:"ls",type:{name:"LightSetup",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/LightSetup.ts#L17"},tags:[],comment:"The light model setup to use"}],typeParams:[]}],extends:null,implemented:[{name:"StandardModel",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/StandardModel.ts#L62"}]},{id:1895,name:"ILightModelCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/ILightModel.ts#L47",comment:"This interface represents the code for a global light model.",tags:[],properties:[{id:1899,name:"dirLightCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/ILightModel.ts#L56",comment:"The shader code for directional lighting.",type:{name:"GlslCode",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/GlslCode.ts#L2"},tags:[]},{id:1896,name:"dirPreCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/ILightModel.ts#L49",comment:"The shader pre-code for directional lighting.",type:{name:"GlslCode",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/GlslCode.ts#L2"},tags:[]},{id:1906,name:"iblCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/ILightModel.ts#L72",comment:"The shader code for IBL.",type:{name:"GlslCode",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/GlslCode.ts#L2"},tags:[]},{id:1905,name:"iblPreCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/ILightModel.ts#L70",comment:"The shader pre-code for IBL.",type:{name:"GlslCode",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/GlslCode.ts#L2"},tags:[]},{id:1901,name:"pointLightCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/ILightModel.ts#L60",comment:"The shader code for point lighting.",type:{name:"GlslCode",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/GlslCode.ts#L2"},tags:[]},{id:1898,name:"pointPreCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/ILightModel.ts#L53",comment:"The shader pre-code for point lighting.",type:{name:"GlslCode",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/GlslCode.ts#L2"},tags:[]},{id:1904,name:"postLightCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/ILightModel.ts#L67",comment:"The shader code for setup after lighting.",type:{name:"GlslCode",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/GlslCode.ts#L2"},tags:[]},{id:1903,name:"preLightCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/ILightModel.ts#L65",comment:"The shader code for setup before lighting.",type:{name:"GlslCode",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/GlslCode.ts#L2"},tags:[]},{id:1902,name:"shadPreCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/ILightModel.ts#L63",comment:"The shader pre-code for shadow maps.",type:{name:"GlslCode",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/GlslCode.ts#L2"},tags:[]},{id:1900,name:"spotLightCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/ILightModel.ts#L58",comment:"The shader code for spot lighting.",type:{name:"GlslCode",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/GlslCode.ts#L2"},tags:[]},{id:1897,name:"spotPreCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/ILightModel.ts#L51",comment:"The shader pre-code for spot lighting.",type:{name:"GlslCode",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/GlslCode.ts#L2"},tags:[]}],accessors:[],methods:[],extends:null,implemented:null},{id:1939,name:"IProgramSource",originalName:"default",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/IProgramSource.ts#L16",comment:"This interface represents a source for a shader program.",tags:[],properties:[{id:1940,name:"shaderSource",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/IProgramSource.ts#L18",comment:"The source of the shader",type:{name:"ShaderSource",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/IProgramSource.ts#L4"},tags:[]},{id:1941,name:"slots",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/IProgramSource.ts#L20",comment:"The slots for the shader chunks",type:{name:"ChunksSlots",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ChunksSlots.ts#L88"},tags:[]}],accessors:[],methods:[],extends:null,implemented:null},{id:2453,name:"ShadowMappedLight",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L36",comment:"This interface represents a light that supports shadow mapping.",tags:[],properties:[{id:2454,name:"castShadows",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L38",comment:"Enable or disable shadow casting",type:{name:"boolean"},tags:[]},{id:2455,name:"shadowmapSize",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L40",comment:"The size of the shadow map created by the light",type:{name:"number"},tags:[]}],accessors:[],methods:[{id:2464,name:"bindShadowmap",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L64",comment:"Prepare and bind the shadowmap's FBO in order to render shadow casters.",tags:[],type:{name:"void"},typeParams:[]},{id:2470,name:"getCamera",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L79",comment:"Get the camera suitable to render the shadowmap.",tags:[],type:{name:"Camera",lib:"nanogl-camera",kind:"Class",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/index.ts#L18",data:{arguments:[{name:"ICameraLens",lib:"nanogl-camera",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ICameraLens.ts#L4"}]}},typeParams:[]},{id:2472,name:"getShadowProjection",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L85",comment:"Get the projection matrix for the shadowmap.",tags:[],type:{name:"mat4"},params:[{id:2474,name:"bounds",type:{name:"Bounds",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Bounds.ts#L46"},tags:[],comment:"The bounds to use for the projection"}],typeParams:[]},{id:2462,name:"getShadowmap",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L59",comment:`Get the light shadowmap texture.
It can be an RGB texture or a Depth texture if supported.`,tags:[],type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"Texture2D",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-2d.ts#L9"}]},typeParams:[]},{id:2468,name:"getTexelBiasVector",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L74",comment:"Get the texel bias vector used to sample the shadowmap.",tags:[],type:{name:"Float32Array"},typeParams:[]},{id:2466,name:"hasDepthShadowmap",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L69",comment:"Know whether the shadowmap is a native Depth texture or not.",tags:[],type:{name:"boolean"},typeParams:[]},{id:2459,name:"initShadowmap",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L53",comment:"Create the FBO resource used as target when rendering the shadowmap.",tags:[],type:{name:"void"},params:[{id:2461,name:"gl",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[],comment:"The webgl context to use"}],typeParams:[]},{id:2456,name:"projectionFromBounds",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L47",comment:`Adjust the camera's projection of the light's shadowmap
to fit the given bounds.`,tags:[],type:{name:"void"},params:[{id:2458,name:"bounds",type:{name:"Bounds",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Bounds.ts#L46"},tags:[],comment:"The bounds to use"}],typeParams:[]}],extends:[{name:"Light",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/Light.ts#L15"},{name:"Node",lib:"nanogl-node",kind:"Class",source:"https://github.com/evanmartiin/nanogl-node/blob/533bd98/src/index.ts#L18"}],implemented:[{name:"DirectionalLight",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/DirectionalLight.ts#L15"},{name:"SpotLight",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/SpotLight.ts#L15"}]}],enumerations:[{id:181,name:"ColorSpace",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ColorSpace.ts#L4",tags:[],comment:"The color space modes.",members:[{id:182,name:"AUTO",tags:[],type:{name:"'auto'",data:{literalType:"string"}}},{id:183,name:"SRGB",tags:[],type:{name:"'srgb'",data:{literalType:"string"}}},{id:184,name:"LINEAR",tags:[],type:{name:"'linear'",data:{literalType:"string"}}}]},{id:2621,name:"LightType",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/LightType.ts#L2",tags:[],comment:"The type of lighting.",members:[{id:2622,name:"UNKNOWN",tags:[],type:{name:"0",data:{literalType:"number"}}},{id:2623,name:"DIRECTIONAL",tags:[],type:{name:"1",data:{literalType:"number"}}},{id:2624,name:"SPOT",tags:[],type:{name:"2",data:{literalType:"number"}}},{id:2625,name:"POINT",tags:[],type:{name:"4",data:{literalType:"number"}}},{id:2626,name:"IBL",tags:[],type:{name:"5",data:{literalType:"number"}}}]},{id:395,name:"ParamType",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L97",tags:[],comment:"The type of an input parameter.",members:[{id:396,name:"SAMPLER",comment:"A sampler input param",tags:[],type:{name:"0",data:{literalType:"number"}}},{id:397,name:"UNIFORM",comment:"A uniform input param",tags:[],type:{name:"1",data:{literalType:"number"}}},{id:398,name:"ATTRIBUTE",comment:"An attribute input param",tags:[],type:{name:"2",data:{literalType:"number"}}},{id:399,name:"CONSTANT",comment:"An constant input param",tags:[],type:{name:"3",data:{literalType:"number"}}}]},{id:1030,name:"PbrWorkflowType",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L7",tags:[],comment:"The types PBR worflows.",members:[{id:1031,name:"NONE",tags:[],type:{name:"'NONE'",data:{literalType:"string"}}},{id:1032,name:"METALNESS",tags:[],type:{name:"'METALNESS'",data:{literalType:"string"}}},{id:1033,name:"SPECULAR",tags:[],type:{name:"'SPECULAR'",data:{literalType:"string"}}}]},{id:390,name:"ShaderType",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L23",tags:[],comment:"The types of shaders.",members:[{id:391,name:"FRAGMENT",tags:[],type:{name:"1",data:{literalType:"number"}}},{id:392,name:"VERTEX",tags:[],type:{name:"2",data:{literalType:"number"}}},{id:393,name:"ALL",tags:[],type:{name:"3",data:{literalType:"number"}}}]}],types:[{id:3,name:"AlphaModeEnum",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/AlphaModeEnum.ts#L17",tags:[],type:{name:"Enum",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Enum.ts#L20",data:{arguments:[{listType:"tuple",list:[{name:"'OPAQUE'",data:{literalType:"string"}},{name:"'MASK'",data:{literalType:"string"}},{name:"'BLEND'",data:{literalType:"string"}}],data:{operator:"readonly"}}]}},comment:"An Enum for the alpha rendering modes.",params:[]},{id:186,name:"ColorSpaceEnum",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ColorSpace.ts#L20",tags:[],type:{name:"Enum",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Enum.ts#L20",data:{arguments:[{listType:"tuple",list:[{name:"SRGB",lib:"nanogl-pbr",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ColorSpace.ts#L6",parent:{kind:"Enumeration",name:"ColorSpace"}},{name:"LINEAR",lib:"nanogl-pbr",kind:"Enumeration Member",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ColorSpace.ts#L7",parent:{kind:"Enumeration",name:"ColorSpace"}}],data:{operator:"readonly"}}]}},comment:"An Enum for the color space modes.",params:[]},{id:189,name:"DepthFormatEnum",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/DepthFormatEnum.ts#L16",tags:[],type:{name:"Enum",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Enum.ts#L20",data:{arguments:[{listType:"tuple",list:[{name:"'D_RGB'",data:{literalType:"string"}},{name:"'D_DEPTH'",data:{literalType:"string"}}],data:{operator:"readonly"}}]}},comment:"An Enum for the depth pass formats.",params:[]},{id:349,name:"GammaModeEnum",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/GammaModeEnum.ts#L22",tags:[],type:{name:"Enum",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Enum.ts#L20",data:{arguments:[{listType:"tuple",list:[{name:"'GAMMA_NONE'",data:{literalType:"string"}},{name:"'GAMMA_STD'",data:{literalType:"string"}},{name:"'GAMMA_2_2'",data:{literalType:"string"}},{name:"'GAMMA_TB'",data:{literalType:"string"}}],data:{operator:"readonly"}}]}},comment:"An Enum for the gamma correction modes.",params:[]},{id:1888,name:"GlslCode",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/GlslCode.ts#L2",tags:[],type:{name:"function",data:{function:{type:{name:"string"},params:[{id:1891,name:"o",type:{name:"any"},tags:[]}]}}},comment:"A function that returns shader code.",params:[]},{id:1893,name:"GlslPrecision",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/GlslPrecision.ts#L2",tags:[],type:{listType:"union",list:[{name:"'highp'",data:{literalType:"string"}},{name:"'mediump'",data:{literalType:"string"}},{name:"'lowp'",data:{literalType:"string"}}]},comment:"GLSL shader float precision.",params:[]},{id:1306,name:"GlslVersion",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ShaderVersion.ts#L7",tags:[],type:{listType:"union",list:[{name:"'100'",data:{literalType:"string"}},{name:"'300 es'",data:{literalType:"string"}}]},comment:"GLSL version.",params:[]},{id:370,name:"Hash",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Hash.ts#L2",tags:[],type:{name:"number"},comment:"A number created from hashing a value.",params:[]},{id:2365,name:"HdrEncoding",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/IblModel.ts#L57",tags:[],type:{listType:"tuple",list:[{name:"'RGBM'",data:{literalType:"string"}},{name:"'RGBD'",data:{literalType:"string"}},{name:"'RGBE'",data:{literalType:"string"}}],data:{operator:"readonly",indexType:{name:"number"}},isIndexed:!0},comment:"An HDR (High Dynamic Range) encoding mode.",params:[]},{id:2363,name:"IblFormat",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/IblModel.ts#L47",tags:[],type:{listType:"tuple",list:[{name:"'OCTA'",data:{literalType:"string"}},{name:"'PMREM'",data:{literalType:"string"}}],data:{operator:"readonly",indexType:{name:"number"}},isIndexed:!0},comment:"An IBL (Image Based Lighting) format.",params:[]},{id:409,name:"InputParam",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L138",tags:[],type:{listType:"union",list:[{name:"Sampler",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L207"},{name:"Uniform",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L334"},{name:"Attribute",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L496"},{name:"Constant",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L573"}]},comment:"An input parameter of a [ParamType](/api/nanogl-pbr/enumerations/ParamType) type.",params:[]},{id:394,name:"InputSize",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Input.ts#L30",tags:[],type:{listType:"union",list:[{name:"1",data:{literalType:"number"}},{name:"2",data:{literalType:"number"}},{name:"3",data:{literalType:"number"}},{name:"4",data:{literalType:"number"}}]},comment:"The size of an input value (`1` for float, `2` for vec2, etc.)",params:[]},{id:928,name:"MaterialPassId",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MaterialPass.ts#L9",tags:[],type:{listType:"union",list:[{name:"'color'",data:{literalType:"string"}},{name:"'depth'",data:{literalType:"string"}},{name:"string"}]},comment:"An id for a material pass.",params:[]},{useInterface:!0,id:947,name:"MorphAttribInfos",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MorphCode.ts#L25",comment:"The definition of a morph attribute.",example:`\`\`\`js
{
   type:  'vec3'
   name : 'position'
   attributes : [
     'aPosition_morph0',
     'aPosition_morph1',
     'aPosition_morph2'
   ]
}
\`\`\``,tags:[],properties:[{id:951,name:"attributes",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MorphCode.ts#L31",comment:"The list of attributes names for the morph targets",type:{name:"string",isArray:!0},tags:[]},{id:950,name:"name",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MorphCode.ts#L29",comment:"The name of the attribute to morph",type:{name:"MorphAttributeName",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MorphCode.ts#L9"},tags:[]},{id:949,name:"type",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MorphCode.ts#L27",comment:"The type of the attribute to morph",type:{name:"MorphAttributeType",lib:"nanogl-pbr",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MorphCode.ts#L7"},tags:[]}],accessors:[],methods:[],extends:null,implemented:null},{id:946,name:"MorphAttributeName",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MorphCode.ts#L9",tags:[],type:{listType:"union",list:[{name:"'position'",data:{literalType:"string"}},{name:"'normal'",data:{literalType:"string"}},{name:"'tangent'",data:{literalType:"string"}}]},comment:"A name of morph attribute.",params:[]},{id:945,name:"MorphAttributeType",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/MorphCode.ts#L7",tags:[],type:{listType:"union",list:[{name:"'float'",data:{literalType:"string"}},{name:"'vec2'",data:{literalType:"string"}},{name:"'vec3'",data:{literalType:"string"}},{name:"'vec4'",data:{literalType:"string"}}]},comment:"A type of morph attribute.",params:[]},{id:1034,name:"PbrSurface",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L14",tags:[],type:{listType:"union",list:[{name:"MetalnessSurface",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L57"},{name:"SpecularSurface",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/PbrSurface.ts#L110"}]},comment:"A PBR surface.",params:[]},{id:2364,name:"ShFormat",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/lighting/IblModel.ts#L52",tags:[],type:{listType:"tuple",list:[{name:"'SH9'",data:{literalType:"string"}},{name:"'SH7'",data:{literalType:"string"}}],data:{operator:"readonly",indexType:{name:"number"}},isIndexed:!0},comment:"A SH (Spherical Harmonics) format.",params:[]},{useInterface:!0,id:1934,name:"ShaderSource",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/IProgramSource.ts#L4",comment:"A source for a shader.",tags:[],properties:[{id:1937,name:"frag",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/IProgramSource.ts#L8",comment:"The fragment shader code",type:{name:"string"},tags:[]},{id:1938,name:"uid",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/IProgramSource.ts#L10",comment:"The unique id of the shader",type:{name:"string"},tags:[]},{id:1936,name:"vert",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/interfaces/IProgramSource.ts#L6",comment:"The vertex shader code",type:{name:"string"},tags:[]}],accessors:[],methods:[],extends:null,implemented:null},{id:1371,name:"ShadowFilteringEnum",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/ShadowFilteringEnum.ts#L19",tags:[],type:{name:"Enum",lib:"nanogl-pbr",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Enum.ts#L20",data:{arguments:[{listType:"tuple",list:[{name:"'PCFNONE'",data:{literalType:"string"}},{name:"'PCF4x1'",data:{literalType:"string"}},{name:"'PCF4x4'",data:{literalType:"string"}},{name:"'PCF2x2'",data:{literalType:"string"}}],data:{operator:"readonly"}}]}},comment:"An Enum for the shadow filtering modes.",params:[]},{useInterface:!0,id:1382,name:"SkinAttributeSet",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/SkinDeformer.ts#L19",comment:"The definition of a skin attribute.",example:"```js\n{\n   weightsAttrib:  'aSkinWeights'\n   jointsAttrib : 'aSkinJoints'\n   numComponents : 3\n}\n```",tags:[],properties:[{id:1385,name:"jointsAttrib",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/SkinDeformer.ts#L23",comment:"The name of the attribute for joints data",type:{name:"string"},tags:[]},{id:1386,name:"numComponents",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/SkinDeformer.ts#L25",comment:"The size of the attribute (`1` for float, `2` for vec2, etc.)",type:{listType:"union",list:[{name:"1",data:{literalType:"number"}},{name:"2",data:{literalType:"number"}},{name:"3",data:{literalType:"number"}},{name:"4",data:{literalType:"number"}}]},tags:[]},{id:1384,name:"weightsAttrib",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/SkinDeformer.ts#L21",comment:"The name of the attribute for weights data",type:{name:"string"},tags:[]}],accessors:[],methods:[],extends:null,implemented:null},{id:1576,name:"Swizzle",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/Swizzle.ts#L2",tags:[],type:{listType:"union",list:[{name:"'xxxx'",data:{literalType:"string"}},{name:"'xxx'",data:{literalType:"string"}},{name:"'xx'",data:{literalType:"string"}},{name:"'x'",data:{literalType:"string"}},{name:"'yxxx'",data:{literalType:"string"}},{name:"'yxx'",data:{literalType:"string"}},{name:"'yx'",data:{literalType:"string"}},{name:"'zxxx'",data:{literalType:"string"}},{name:"'zxx'",data:{literalType:"string"}},{name:"'zx'",data:{literalType:"string"}},{name:"'wxxx'",data:{literalType:"string"}},{name:"'wxx'",data:{literalType:"string"}},{name:"'wx'",data:{literalType:"string"}},{name:"'xyxx'",data:{literalType:"string"}},{name:"'xyx'",data:{literalType:"string"}},{name:"'yyxx'",data:{literalType:"string"}},{name:"'yyx'",data:{literalType:"string"}},{name:"'zyxx'",data:{literalType:"string"}},{name:"'zyx'",data:{literalType:"string"}},{name:"'wyxx'",data:{literalType:"string"}},{name:"'wyx'",data:{literalType:"string"}},{name:"' xx'",data:{literalType:"string"}},{name:"'xzx'",data:{literalType:"string"}},{name:"'yzxx'",data:{literalType:"string"}},{name:"'yzx'",data:{literalType:"string"}},{name:"'zzxx'",data:{literalType:"string"}},{name:"'zzx'",data:{literalType:"string"}},{name:"'wzxx'",data:{literalType:"string"}},{name:"'wzx'",data:{literalType:"string"}},{name:"'xwxx'",data:{literalType:"string"}},{name:"'xwx'",data:{literalType:"string"}},{name:"'ywxx'",data:{literalType:"string"}},{name:"'ywx'",data:{literalType:"string"}},{name:"'zwxx'",data:{literalType:"string"}},{name:"'zwx'",data:{literalType:"string"}},{name:"'wwxx'",data:{literalType:"string"}},{name:"'wwx'",data:{literalType:"string"}},{name:"'xxyx'",data:{literalType:"string"}},{name:"'yxyx'",data:{literalType:"string"}},{name:"'zxyx'",data:{literalType:"string"}},{name:"'wxyx'",data:{literalType:"string"}},{name:"'xyyx'",data:{literalType:"string"}},{name:"'yyyx'",data:{literalType:"string"}},{name:"'zyyx'",data:{literalType:"string"}},{name:"'wyyx'",data:{literalType:"string"}},{name:"'xzyx'",data:{literalType:"string"}},{name:"'yzyx'",data:{literalType:"string"}},{name:"'zzyx'",data:{literalType:"string"}},{name:"'wzyx'",data:{literalType:"string"}},{name:"'xwyx'",data:{literalType:"string"}},{name:"'ywyx'",data:{literalType:"string"}},{name:"'zwyx'",data:{literalType:"string"}},{name:"'wwyx'",data:{literalType:"string"}},{name:"'xxzx'",data:{literalType:"string"}},{name:"'yxzx'",data:{literalType:"string"}},{name:"'zxzx'",data:{literalType:"string"}},{name:"'wxzx'",data:{literalType:"string"}},{name:"'xyzx'",data:{literalType:"string"}},{name:"'yyzx'",data:{literalType:"string"}},{name:"'zyzx'",data:{literalType:"string"}},{name:"'wyzx'",data:{literalType:"string"}},{name:"'xzzx'",data:{literalType:"string"}},{name:"'yzzx'",data:{literalType:"string"}},{name:"'zzzx'",data:{literalType:"string"}},{name:"'wzzx'",data:{literalType:"string"}},{name:"'xwzx'",data:{literalType:"string"}},{name:"'ywzx'",data:{literalType:"string"}},{name:"'zwzx'",data:{literalType:"string"}},{name:"'wwzx'",data:{literalType:"string"}},{name:"'xxwx'",data:{literalType:"string"}},{name:"'yxwx'",data:{literalType:"string"}},{name:"'zxwx'",data:{literalType:"string"}},{name:"'wxwx'",data:{literalType:"string"}},{name:"'xywx'",data:{literalType:"string"}},{name:"'yywx'",data:{literalType:"string"}},{name:"'zywx'",data:{literalType:"string"}},{name:"'wywx'",data:{literalType:"string"}},{name:"'xzwx'",data:{literalType:"string"}},{name:"'yzwx'",data:{literalType:"string"}},{name:"'zzwx'",data:{literalType:"string"}},{name:"'wzwx'",data:{literalType:"string"}},{name:"'xwwx'",data:{literalType:"string"}},{name:"'ywwx'",data:{literalType:"string"}},{name:"'zwwx'",data:{literalType:"string"}},{name:"'wwwx'",data:{literalType:"string"}},{name:"'xxxy'",data:{literalType:"string"}},{name:"'yxxy'",data:{literalType:"string"}},{name:"'zxxy'",data:{literalType:"string"}},{name:"'wxxy'",data:{literalType:"string"}},{name:"'xyxy'",data:{literalType:"string"}},{name:"'yyxy'",data:{literalType:"string"}},{name:"'zyxy'",data:{literalType:"string"}},{name:"'wyxy'",data:{literalType:"string"}},{name:"'xzxy'",data:{literalType:"string"}},{name:"'yzxy'",data:{literalType:"string"}},{name:"'zzxy'",data:{literalType:"string"}},{name:"'wzxy'",data:{literalType:"string"}},{name:"'xwxy'",data:{literalType:"string"}},{name:"'ywxy'",data:{literalType:"string"}},{name:"'zwxy'",data:{literalType:"string"}},{name:"'wwxy'",data:{literalType:"string"}},{name:"'xxyy'",data:{literalType:"string"}},{name:"'xxy'",data:{literalType:"string"}},{name:"'yxyy'",data:{literalType:"string"}},{name:"'yxy'",data:{literalType:"string"}},{name:"'zxyy'",data:{literalType:"string"}},{name:"'zxy'",data:{literalType:"string"}},{name:"'wxyy'",data:{literalType:"string"}},{name:"'wxy'",data:{literalType:"string"}},{name:"'xyyy'",data:{literalType:"string"}},{name:"'xyy'",data:{literalType:"string"}},{name:"'xy'",data:{literalType:"string"}},{name:"'yyyy'",data:{literalType:"string"}},{name:"'yyy'",data:{literalType:"string"}},{name:"'yy'",data:{literalType:"string"}},{name:"'y'",data:{literalType:"string"}},{name:"'zyyy'",data:{literalType:"string"}},{name:"'zyy'",data:{literalType:"string"}},{name:"'zy'",data:{literalType:"string"}},{name:"'wyyy'",data:{literalType:"string"}},{name:"'wyy'",data:{literalType:"string"}},{name:"'wy'",data:{literalType:"string"}},{name:"'xzyy'",data:{literalType:"string"}},{name:"'xzy'",data:{literalType:"string"}},{name:"'yzyy'",data:{literalType:"string"}},{name:"'yzy'",data:{literalType:"string"}},{name:"'zzyy'",data:{literalType:"string"}},{name:"'zzy'",data:{literalType:"string"}},{name:"'wzyy'",data:{literalType:"string"}},{name:"'wzy'",data:{literalType:"string"}},{name:"'xwyy'",data:{literalType:"string"}},{name:"'xwy'",data:{literalType:"string"}},{name:"'ywyy'",data:{literalType:"string"}},{name:"'ywy'",data:{literalType:"string"}},{name:"'zwyy'",data:{literalType:"string"}},{name:"'zwy'",data:{literalType:"string"}},{name:"'wwyy'",data:{literalType:"string"}},{name:"'wwy'",data:{literalType:"string"}},{name:"'xxzy'",data:{literalType:"string"}},{name:"'yxzy'",data:{literalType:"string"}},{name:"'zxzy'",data:{literalType:"string"}},{name:"'wxzy'",data:{literalType:"string"}},{name:"'xyzy'",data:{literalType:"string"}},{name:"'yyzy'",data:{literalType:"string"}},{name:"'zyzy'",data:{literalType:"string"}},{name:"'wyzy'",data:{literalType:"string"}},{name:"'xzzy'",data:{literalType:"string"}},{name:"'yzzy'",data:{literalType:"string"}},{name:"'zzzy'",data:{literalType:"string"}},{name:"'wzzy'",data:{literalType:"string"}},{name:"'xwzy'",data:{literalType:"string"}},{name:"'ywzy'",data:{literalType:"string"}},{name:"'zwzy'",data:{literalType:"string"}},{name:"'wwzy'",data:{literalType:"string"}},{name:"'xxwy'",data:{literalType:"string"}},{name:"'yxwy'",data:{literalType:"string"}},{name:"'zxwy'",data:{literalType:"string"}},{name:"'wxwy'",data:{literalType:"string"}},{name:"'xywy'",data:{literalType:"string"}},{name:"'yywy'",data:{literalType:"string"}},{name:"'zywy'",data:{literalType:"string"}},{name:"'wywy'",data:{literalType:"string"}},{name:"'xzwy'",data:{literalType:"string"}},{name:"'yzwy'",data:{literalType:"string"}},{name:"'zzwy'",data:{literalType:"string"}},{name:"'wzwy'",data:{literalType:"string"}},{name:"'xwwy'",data:{literalType:"string"}},{name:"'ywwy'",data:{literalType:"string"}},{name:"'zwwy'",data:{literalType:"string"}},{name:"'wwwy'",data:{literalType:"string"}},{name:"'xxxz'",data:{literalType:"string"}},{name:"'yxxz'",data:{literalType:"string"}},{name:"'zxxz'",data:{literalType:"string"}},{name:"'wxxz'",data:{literalType:"string"}},{name:"'xyxz'",data:{literalType:"string"}},{name:"'yyxz'",data:{literalType:"string"}},{name:"'zyxz'",data:{literalType:"string"}},{name:"'wyxz'",data:{literalType:"string"}},{name:"'xzxz'",data:{literalType:"string"}},{name:"'yzxz'",data:{literalType:"string"}},{name:"'zzxz'",data:{literalType:"string"}},{name:"'wzxz'",data:{literalType:"string"}},{name:"'xwxz'",data:{literalType:"string"}},{name:"'ywxz'",data:{literalType:"string"}},{name:"'zwxz'",data:{literalType:"string"}},{name:"'wwxz'",data:{literalType:"string"}},{name:"'xxyz'",data:{literalType:"string"}},{name:"'yxyz'",data:{literalType:"string"}},{name:"'zxyz'",data:{literalType:"string"}},{name:"'wxyz'",data:{literalType:"string"}},{name:"'xyyz'",data:{literalType:"string"}},{name:"'yyyz'",data:{literalType:"string"}},{name:"'zyyz'",data:{literalType:"string"}},{name:"'wyyz'",data:{literalType:"string"}},{name:"'xzyz'",data:{literalType:"string"}},{name:"'yzyz'",data:{literalType:"string"}},{name:"'zzyz'",data:{literalType:"string"}},{name:"'wzyz'",data:{literalType:"string"}},{name:"'xwyz'",data:{literalType:"string"}},{name:"'ywyz'",data:{literalType:"string"}},{name:"'zwyz'",data:{literalType:"string"}},{name:"'wwyz'",data:{literalType:"string"}},{name:"'xxzz'",data:{literalType:"string"}},{name:"'xxz'",data:{literalType:"string"}},{name:"'yxzz'",data:{literalType:"string"}},{name:"'yxz'",data:{literalType:"string"}},{name:"'zxzz'",data:{literalType:"string"}},{name:"'zxz'",data:{literalType:"string"}},{name:"'wxzz'",data:{literalType:"string"}},{name:"'wxz'",data:{literalType:"string"}},{name:"'xyzz'",data:{literalType:"string"}},{name:"'xyz'",data:{literalType:"string"}},{name:"'yyzz'",data:{literalType:"string"}},{name:"'yyz'",data:{literalType:"string"}},{name:"'zyzz'",data:{literalType:"string"}},{name:"'zyz'",data:{literalType:"string"}},{name:"'wyzz'",data:{literalType:"string"}},{name:"'wyz'",data:{literalType:"string"}},{name:"'xzzz'",data:{literalType:"string"}},{name:"'xzz'",data:{literalType:"string"}},{name:"'xz'",data:{literalType:"string"}},{name:"'yzzz'",data:{literalType:"string"}},{name:"'yzz'",data:{literalType:"string"}},{name:"'yz'",data:{literalType:"string"}},{name:"'zzzz'",data:{literalType:"string"}},{name:"'zzz'",data:{literalType:"string"}},{name:"'zz'",data:{literalType:"string"}},{name:"'z'",data:{literalType:"string"}},{name:"'wzzz'",data:{literalType:"string"}},{name:"'wzz'",data:{literalType:"string"}},{name:"'wz'",data:{literalType:"string"}},{name:"'xwzz'",data:{literalType:"string"}},{name:"'xwz'",data:{literalType:"string"}},{name:"'ywzz'",data:{literalType:"string"}},{name:"'ywz'",data:{literalType:"string"}},{name:"'zwzz'",data:{literalType:"string"}},{name:"'zwz'",data:{literalType:"string"}},{name:"'wwzz'",data:{literalType:"string"}},{name:"'wwz'",data:{literalType:"string"}},{name:"'xxwz'",data:{literalType:"string"}},{name:"'yxwz'",data:{literalType:"string"}},{name:"'zxwz'",data:{literalType:"string"}},{name:"'wxwz'",data:{literalType:"string"}},{name:"'xywz'",data:{literalType:"string"}},{name:"'yywz'",data:{literalType:"string"}},{name:"'zywz'",data:{literalType:"string"}},{name:"'wywz'",data:{literalType:"string"}},{name:"'xzwz'",data:{literalType:"string"}},{name:"'yzwz'",data:{literalType:"string"}},{name:"'zzwz'",data:{literalType:"string"}},{name:"'wzwz'",data:{literalType:"string"}},{name:"'xwwz'",data:{literalType:"string"}},{name:"'ywwz'",data:{literalType:"string"}},{name:"'zwwz'",data:{literalType:"string"}},{name:"'wwwz'",data:{literalType:"string"}},{name:"'xxxw'",data:{literalType:"string"}},{name:"'yxxw'",data:{literalType:"string"}},{name:"'zxxw'",data:{literalType:"string"}},{name:"'wxxw'",data:{literalType:"string"}},{name:"'xyxw'",data:{literalType:"string"}},{name:"'yyxw'",data:{literalType:"string"}},{name:"'zyxw'",data:{literalType:"string"}},{name:"'wyxw'",data:{literalType:"string"}},{name:"'xzxw'",data:{literalType:"string"}},{name:"'yzxw'",data:{literalType:"string"}},{name:"'zzxw'",data:{literalType:"string"}},{name:"'wzxw'",data:{literalType:"string"}},{name:"'xwxw'",data:{literalType:"string"}},{name:"'ywxw'",data:{literalType:"string"}},{name:"'zwxw'",data:{literalType:"string"}},{name:"'wwxw'",data:{literalType:"string"}},{name:"'xxyw'",data:{literalType:"string"}},{name:"'yxyw'",data:{literalType:"string"}},{name:"'zxyw'",data:{literalType:"string"}},{name:"'wxyw'",data:{literalType:"string"}},{name:"'xyyw'",data:{literalType:"string"}},{name:"'yyyw'",data:{literalType:"string"}},{name:"'zyyw'",data:{literalType:"string"}},{name:"'wyyw'",data:{literalType:"string"}},{name:"'xzyw'",data:{literalType:"string"}},{name:"'yzyw'",data:{literalType:"string"}},{name:"'zzyw'",data:{literalType:"string"}},{name:"'wzyw'",data:{literalType:"string"}},{name:"'xwyw'",data:{literalType:"string"}},{name:"'ywyw'",data:{literalType:"string"}},{name:"'zwyw'",data:{literalType:"string"}},{name:"'wwyw'",data:{literalType:"string"}},{name:"'xxzw'",data:{literalType:"string"}},{name:"'yxzw'",data:{literalType:"string"}},{name:"'zxzw'",data:{literalType:"string"}},{name:"'wxzw'",data:{literalType:"string"}},{name:"'xyzw'",data:{literalType:"string"}},{name:"'yyzw'",data:{literalType:"string"}},{name:"'zyzw'",data:{literalType:"string"}},{name:"'wyzw'",data:{literalType:"string"}},{name:"'xzzw'",data:{literalType:"string"}},{name:"'yzzw'",data:{literalType:"string"}},{name:"'zzzw'",data:{literalType:"string"}},{name:"'wzzw'",data:{literalType:"string"}},{name:"'xwzw'",data:{literalType:"string"}},{name:"'ywzw'",data:{literalType:"string"}},{name:"'zwzw'",data:{literalType:"string"}},{name:"'wwzw'",data:{literalType:"string"}},{name:"'xxww'",data:{literalType:"string"}},{name:"'xxw'",data:{literalType:"string"}},{name:"'yxww'",data:{literalType:"string"}},{name:"'yxw'",data:{literalType:"string"}},{name:"'zxww'",data:{literalType:"string"}},{name:"'zxw'",data:{literalType:"string"}},{name:"'wxww'",data:{literalType:"string"}},{name:"'wxw'",data:{literalType:"string"}},{name:"'xyww'",data:{literalType:"string"}},{name:"'xyw'",data:{literalType:"string"}},{name:"'yyww'",data:{literalType:"string"}},{name:"'yyw'",data:{literalType:"string"}},{name:"'zyww'",data:{literalType:"string"}},{name:"'zyw'",data:{literalType:"string"}},{name:"'wyww'",data:{literalType:"string"}},{name:"'wyw'",data:{literalType:"string"}},{name:"'xzww'",data:{literalType:"string"}},{name:"'xzw'",data:{literalType:"string"}},{name:"'yzww'",data:{literalType:"string"}},{name:"'yzw'",data:{literalType:"string"}},{name:"'zzww'",data:{literalType:"string"}},{name:"'zzw'",data:{literalType:"string"}},{name:"'wzww'",data:{literalType:"string"}},{name:"'wzw'",data:{literalType:"string"}},{name:"'xwww'",data:{literalType:"string"}},{name:"'xww'",data:{literalType:"string"}},{name:"'xw'",data:{literalType:"string"}},{name:"'ywww'",data:{literalType:"string"}},{name:"'yww'",data:{literalType:"string"}},{name:"'yw'",data:{literalType:"string"}},{name:"'zwww'",data:{literalType:"string"}},{name:"'zww'",data:{literalType:"string"}},{name:"'zw'",data:{literalType:"string"}},{name:"'wwww'",data:{literalType:"string"}},{name:"'www'",data:{literalType:"string"}},{name:"'ww'",data:{literalType:"string"}},{name:"'w'",data:{literalType:"string"}},{name:"'rrrr'",data:{literalType:"string"}},{name:"'rrr'",data:{literalType:"string"}},{name:"'rr'",data:{literalType:"string"}},{name:"'r'",data:{literalType:"string"}},{name:"'grrr'",data:{literalType:"string"}},{name:"'grr'",data:{literalType:"string"}},{name:"'gr'",data:{literalType:"string"}},{name:"'brrr'",data:{literalType:"string"}},{name:"'brr'",data:{literalType:"string"}},{name:"'br'",data:{literalType:"string"}},{name:"'arrr'",data:{literalType:"string"}},{name:"'arr'",data:{literalType:"string"}},{name:"'ar'",data:{literalType:"string"}},{name:"'rgrr'",data:{literalType:"string"}},{name:"'rgr'",data:{literalType:"string"}},{name:"'ggrr'",data:{literalType:"string"}},{name:"'ggr'",data:{literalType:"string"}},{name:"'bgrr'",data:{literalType:"string"}},{name:"'bgr'",data:{literalType:"string"}},{name:"'agrr'",data:{literalType:"string"}},{name:"'agr'",data:{literalType:"string"}},{name:"'rbrr'",data:{literalType:"string"}},{name:"'rbr'",data:{literalType:"string"}},{name:"'gbrr'",data:{literalType:"string"}},{name:"'gbr'",data:{literalType:"string"}},{name:"'bbrr'",data:{literalType:"string"}},{name:"'bbr'",data:{literalType:"string"}},{name:"'abrr'",data:{literalType:"string"}},{name:"'abr'",data:{literalType:"string"}},{name:"'rarr'",data:{literalType:"string"}},{name:"'rar'",data:{literalType:"string"}},{name:"'garr'",data:{literalType:"string"}},{name:"'gar'",data:{literalType:"string"}},{name:"'barr'",data:{literalType:"string"}},{name:"'bar'",data:{literalType:"string"}},{name:"'aarr'",data:{literalType:"string"}},{name:"'aar'",data:{literalType:"string"}},{name:"'rrgr'",data:{literalType:"string"}},{name:"'grgr'",data:{literalType:"string"}},{name:"'brgr'",data:{literalType:"string"}},{name:"'argr'",data:{literalType:"string"}},{name:"'rggr'",data:{literalType:"string"}},{name:"'gggr'",data:{literalType:"string"}},{name:"'bggr'",data:{literalType:"string"}},{name:"'aggr'",data:{literalType:"string"}},{name:"'rbgr'",data:{literalType:"string"}},{name:"'gbgr'",data:{literalType:"string"}},{name:"'bbgr'",data:{literalType:"string"}},{name:"'abgr'",data:{literalType:"string"}},{name:"'ragr'",data:{literalType:"string"}},{name:"'gagr'",data:{literalType:"string"}},{name:"'bagr'",data:{literalType:"string"}},{name:"'aagr'",data:{literalType:"string"}},{name:"'rrbr'",data:{literalType:"string"}},{name:"'grbr'",data:{literalType:"string"}},{name:"'brbr'",data:{literalType:"string"}},{name:"'arbr'",data:{literalType:"string"}},{name:"'rgbr'",data:{literalType:"string"}},{name:"'ggbr'",data:{literalType:"string"}},{name:"'bgbr'",data:{literalType:"string"}},{name:"'agbr'",data:{literalType:"string"}},{name:"'rbbr'",data:{literalType:"string"}},{name:"'gbbr'",data:{literalType:"string"}},{name:"'bbbr'",data:{literalType:"string"}},{name:"'abbr'",data:{literalType:"string"}},{name:"'rabr'",data:{literalType:"string"}},{name:"'gabr'",data:{literalType:"string"}},{name:"'babr'",data:{literalType:"string"}},{name:"'aabr'",data:{literalType:"string"}},{name:"'rrar'",data:{literalType:"string"}},{name:"'grar'",data:{literalType:"string"}},{name:"'brar'",data:{literalType:"string"}},{name:"'arar'",data:{literalType:"string"}},{name:"'rgar'",data:{literalType:"string"}},{name:"'ggar'",data:{literalType:"string"}},{name:"'bgar'",data:{literalType:"string"}},{name:"'agar'",data:{literalType:"string"}},{name:"'rbar'",data:{literalType:"string"}},{name:"'gbar'",data:{literalType:"string"}},{name:"'bbar'",data:{literalType:"string"}},{name:"'abar'",data:{literalType:"string"}},{name:"'raar'",data:{literalType:"string"}},{name:"'gaar'",data:{literalType:"string"}},{name:"'baar'",data:{literalType:"string"}},{name:"'aaar'",data:{literalType:"string"}},{name:"'rrrg'",data:{literalType:"string"}},{name:"'grrg'",data:{literalType:"string"}},{name:"'brrg'",data:{literalType:"string"}},{name:"'arrg'",data:{literalType:"string"}},{name:"'rgrg'",data:{literalType:"string"}},{name:"'ggrg'",data:{literalType:"string"}},{name:"'bgrg'",data:{literalType:"string"}},{name:"'agrg'",data:{literalType:"string"}},{name:"'rbrg'",data:{literalType:"string"}},{name:"'gbrg'",data:{literalType:"string"}},{name:"'bbrg'",data:{literalType:"string"}},{name:"'abrg'",data:{literalType:"string"}},{name:"'rarg'",data:{literalType:"string"}},{name:"'garg'",data:{literalType:"string"}},{name:"'barg'",data:{literalType:"string"}},{name:"'aarg'",data:{literalType:"string"}},{name:"'rrgg'",data:{literalType:"string"}},{name:"'rrg'",data:{literalType:"string"}},{name:"'grgg'",data:{literalType:"string"}},{name:"'grg'",data:{literalType:"string"}},{name:"'brgg'",data:{literalType:"string"}},{name:"'brg'",data:{literalType:"string"}},{name:"'argg'",data:{literalType:"string"}},{name:"'arg'",data:{literalType:"string"}},{name:"'rggg'",data:{literalType:"string"}},{name:"'rgg'",data:{literalType:"string"}},{name:"'rg'",data:{literalType:"string"}},{name:"'gggg'",data:{literalType:"string"}},{name:"'ggg'",data:{literalType:"string"}},{name:"'gg'",data:{literalType:"string"}},{name:"'g'",data:{literalType:"string"}},{name:"'bggg'",data:{literalType:"string"}},{name:"'bgg'",data:{literalType:"string"}},{name:"'bg'",data:{literalType:"string"}},{name:"'aggg'",data:{literalType:"string"}},{name:"'agg'",data:{literalType:"string"}},{name:"'ag'",data:{literalType:"string"}},{name:"'rbgg'",data:{literalType:"string"}},{name:"'rbg'",data:{literalType:"string"}},{name:"'gbgg'",data:{literalType:"string"}},{name:"'gbg'",data:{literalType:"string"}},{name:"'bbgg'",data:{literalType:"string"}},{name:"'bbg'",data:{literalType:"string"}},{name:"'abgg'",data:{literalType:"string"}},{name:"'abg'",data:{literalType:"string"}},{name:"'ragg'",data:{literalType:"string"}},{name:"'rag'",data:{literalType:"string"}},{name:"'gagg'",data:{literalType:"string"}},{name:"'gag'",data:{literalType:"string"}},{name:"'bagg'",data:{literalType:"string"}},{name:"'bag'",data:{literalType:"string"}},{name:"'aagg'",data:{literalType:"string"}},{name:"'aag'",data:{literalType:"string"}},{name:"'rrbg'",data:{literalType:"string"}},{name:"'grbg'",data:{literalType:"string"}},{name:"'brbg'",data:{literalType:"string"}},{name:"'arbg'",data:{literalType:"string"}},{name:"'rgbg'",data:{literalType:"string"}},{name:"'ggbg'",data:{literalType:"string"}},{name:"'bgbg'",data:{literalType:"string"}},{name:"'agbg'",data:{literalType:"string"}},{name:"'rbbg'",data:{literalType:"string"}},{name:"'gbbg'",data:{literalType:"string"}},{name:"'bbbg'",data:{literalType:"string"}},{name:"'abbg'",data:{literalType:"string"}},{name:"'rabg'",data:{literalType:"string"}},{name:"'gabg'",data:{literalType:"string"}},{name:"'babg'",data:{literalType:"string"}},{name:"'aabg'",data:{literalType:"string"}},{name:"'rrag'",data:{literalType:"string"}},{name:"'grag'",data:{literalType:"string"}},{name:"'brag'",data:{literalType:"string"}},{name:"'arag'",data:{literalType:"string"}},{name:"'rgag'",data:{literalType:"string"}},{name:"'ggag'",data:{literalType:"string"}},{name:"'bgag'",data:{literalType:"string"}},{name:"'agag'",data:{literalType:"string"}},{name:"'rbag'",data:{literalType:"string"}},{name:"'gbag'",data:{literalType:"string"}},{name:"'bbag'",data:{literalType:"string"}},{name:"'abag'",data:{literalType:"string"}},{name:"'raag'",data:{literalType:"string"}},{name:"'gaag'",data:{literalType:"string"}},{name:"'baag'",data:{literalType:"string"}},{name:"'aaag'",data:{literalType:"string"}},{name:"'rrrb'",data:{literalType:"string"}},{name:"'grrb'",data:{literalType:"string"}},{name:"'brrb'",data:{literalType:"string"}},{name:"'arrb'",data:{literalType:"string"}},{name:"'rgrb'",data:{literalType:"string"}},{name:"'ggrb'",data:{literalType:"string"}},{name:"'bgrb'",data:{literalType:"string"}},{name:"'agrb'",data:{literalType:"string"}},{name:"'rbrb'",data:{literalType:"string"}},{name:"'gbrb'",data:{literalType:"string"}},{name:"'bbrb'",data:{literalType:"string"}},{name:"'abrb'",data:{literalType:"string"}},{name:"'rarb'",data:{literalType:"string"}},{name:"'garb'",data:{literalType:"string"}},{name:"'barb'",data:{literalType:"string"}},{name:"'aarb'",data:{literalType:"string"}},{name:"'rrgb'",data:{literalType:"string"}},{name:"'grgb'",data:{literalType:"string"}},{name:"'brgb'",data:{literalType:"string"}},{name:"'argb'",data:{literalType:"string"}},{name:"'rggb'",data:{literalType:"string"}},{name:"'gggb'",data:{literalType:"string"}},{name:"'bggb'",data:{literalType:"string"}},{name:"'aggb'",data:{literalType:"string"}},{name:"'rbgb'",data:{literalType:"string"}},{name:"'gbgb'",data:{literalType:"string"}},{name:"'bbgb'",data:{literalType:"string"}},{name:"'abgb'",data:{literalType:"string"}},{name:"'ragb'",data:{literalType:"string"}},{name:"'gagb'",data:{literalType:"string"}},{name:"'bagb'",data:{literalType:"string"}},{name:"'aagb'",data:{literalType:"string"}},{name:"'rrbb'",data:{literalType:"string"}},{name:"'rrb'",data:{literalType:"string"}},{name:"'grbb'",data:{literalType:"string"}},{name:"'grb'",data:{literalType:"string"}},{name:"'brbb'",data:{literalType:"string"}},{name:"'brb'",data:{literalType:"string"}},{name:"'arbb'",data:{literalType:"string"}},{name:"'arb'",data:{literalType:"string"}},{name:"'rgbb'",data:{literalType:"string"}},{name:"'rgb'",data:{literalType:"string"}},{name:"'ggbb'",data:{literalType:"string"}},{name:"'ggb'",data:{literalType:"string"}},{name:"'bgbb'",data:{literalType:"string"}},{name:"'bgb'",data:{literalType:"string"}},{name:"'agbb'",data:{literalType:"string"}},{name:"'agb'",data:{literalType:"string"}},{name:"'rbbb'",data:{literalType:"string"}},{name:"'rbb'",data:{literalType:"string"}},{name:"'rb'",data:{literalType:"string"}},{name:"'gbbb'",data:{literalType:"string"}},{name:"'gbb'",data:{literalType:"string"}},{name:"'gb'",data:{literalType:"string"}},{name:"'bbbb'",data:{literalType:"string"}},{name:"'bbb'",data:{literalType:"string"}},{name:"'bb'",data:{literalType:"string"}},{name:"'b'",data:{literalType:"string"}},{name:"'abbb'",data:{literalType:"string"}},{name:"'abb'",data:{literalType:"string"}},{name:"'ab'",data:{literalType:"string"}},{name:"'rabb'",data:{literalType:"string"}},{name:"'rab'",data:{literalType:"string"}},{name:"'gabb'",data:{literalType:"string"}},{name:"'gab'",data:{literalType:"string"}},{name:"'babb'",data:{literalType:"string"}},{name:"'bab'",data:{literalType:"string"}},{name:"'aabb'",data:{literalType:"string"}},{name:"'aab'",data:{literalType:"string"}},{name:"'rrab'",data:{literalType:"string"}},{name:"'grab'",data:{literalType:"string"}},{name:"'brab'",data:{literalType:"string"}},{name:"'arab'",data:{literalType:"string"}},{name:"'rgab'",data:{literalType:"string"}},{name:"'ggab'",data:{literalType:"string"}},{name:"'bgab'",data:{literalType:"string"}},{name:"'agab'",data:{literalType:"string"}},{name:"'rbab'",data:{literalType:"string"}},{name:"'gbab'",data:{literalType:"string"}},{name:"'bbab'",data:{literalType:"string"}},{name:"'abab'",data:{literalType:"string"}},{name:"'raab'",data:{literalType:"string"}},{name:"'gaab'",data:{literalType:"string"}},{name:"'baab'",data:{literalType:"string"}},{name:"'aaab'",data:{literalType:"string"}},{name:"'rrra'",data:{literalType:"string"}},{name:"'grra'",data:{literalType:"string"}},{name:"'brra'",data:{literalType:"string"}},{name:"'arra'",data:{literalType:"string"}},{name:"'rgra'",data:{literalType:"string"}},{name:"'ggra'",data:{literalType:"string"}},{name:"'bgra'",data:{literalType:"string"}},{name:"'agra'",data:{literalType:"string"}},{name:"'rbra'",data:{literalType:"string"}},{name:"'gbra'",data:{literalType:"string"}},{name:"'bbra'",data:{literalType:"string"}},{name:"'abra'",data:{literalType:"string"}},{name:"'rara'",data:{literalType:"string"}},{name:"'gara'",data:{literalType:"string"}},{name:"'bara'",data:{literalType:"string"}},{name:"'aara'",data:{literalType:"string"}},{name:"'rrga'",data:{literalType:"string"}},{name:"'grga'",data:{literalType:"string"}},{name:"'brga'",data:{literalType:"string"}},{name:"'arga'",data:{literalType:"string"}},{name:"'rgga'",data:{literalType:"string"}},{name:"'ggga'",data:{literalType:"string"}},{name:"'bgga'",data:{literalType:"string"}},{name:"'agga'",data:{literalType:"string"}},{name:"'rbga'",data:{literalType:"string"}},{name:"'gbga'",data:{literalType:"string"}},{name:"'bbga'",data:{literalType:"string"}},{name:"'abga'",data:{literalType:"string"}},{name:"'raga'",data:{literalType:"string"}},{name:"'gaga'",data:{literalType:"string"}},{name:"'baga'",data:{literalType:"string"}},{name:"'aaga'",data:{literalType:"string"}},{name:"'rrba'",data:{literalType:"string"}},{name:"'grba'",data:{literalType:"string"}},{name:"'brba'",data:{literalType:"string"}},{name:"'arba'",data:{literalType:"string"}},{name:"'rgba'",data:{literalType:"string"}},{name:"'ggba'",data:{literalType:"string"}},{name:"'bgba'",data:{literalType:"string"}},{name:"'agba'",data:{literalType:"string"}},{name:"'rbba'",data:{literalType:"string"}},{name:"'gbba'",data:{literalType:"string"}},{name:"'bbba'",data:{literalType:"string"}},{name:"'abba'",data:{literalType:"string"}},{name:"'raba'",data:{literalType:"string"}},{name:"'gaba'",data:{literalType:"string"}},{name:"'baba'",data:{literalType:"string"}},{name:"'aaba'",data:{literalType:"string"}},{name:"'rraa'",data:{literalType:"string"}},{name:"'rra'",data:{literalType:"string"}},{name:"'graa'",data:{literalType:"string"}},{name:"'gra'",data:{literalType:"string"}},{name:"'braa'",data:{literalType:"string"}},{name:"'bra'",data:{literalType:"string"}},{name:"'araa'",data:{literalType:"string"}},{name:"'ara'",data:{literalType:"string"}},{name:"'rgaa'",data:{literalType:"string"}},{name:"'rga'",data:{literalType:"string"}},{name:"'ggaa'",data:{literalType:"string"}},{name:"'gga'",data:{literalType:"string"}},{name:"'bgaa'",data:{literalType:"string"}},{name:"'bga'",data:{literalType:"string"}},{name:"'agaa'",data:{literalType:"string"}},{name:"'aga'",data:{literalType:"string"}},{name:"'rbaa'",data:{literalType:"string"}},{name:"'rba'",data:{literalType:"string"}},{name:"'gbaa'",data:{literalType:"string"}},{name:"'gba'",data:{literalType:"string"}},{name:"'bbaa'",data:{literalType:"string"}},{name:"'bba'",data:{literalType:"string"}},{name:"'abaa'",data:{literalType:"string"}},{name:"'aba'",data:{literalType:"string"}},{name:"'raaa'",data:{literalType:"string"}},{name:"'raa'",data:{literalType:"string"}},{name:"'ra'",data:{literalType:"string"}},{name:"'gaaa'",data:{literalType:"string"}},{name:"'gaa'",data:{literalType:"string"}},{name:"'ga'",data:{literalType:"string"}},{name:"'baaa'",data:{literalType:"string"}},{name:"'baa'",data:{literalType:"string"}},{name:"'ba'",data:{literalType:"string"}},{name:"'aaaa'",data:{literalType:"string"}},{name:"'aaa'",data:{literalType:"string"}},{name:"'aa'",data:{literalType:"string"}},{name:"'a'",data:{literalType:"string"}}]},comment:"A swizzle operator for vectors.",params:[]},{useInterface:!0,id:1578,name:"TRSOpts",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L47",comment:"Transformation options.",tags:[],properties:[{id:1581,name:"rotation",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L51",comment:"The wanted rotation",type:{name:"number"},tags:["optional"]},{id:1582,name:"scale",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L53",comment:"The wanted scale",type:{name:"number"},tags:["optional"]},{id:1580,name:"translation",source:"https://github.com/evanmartiin/nanogl-pbr/blob/7e45d74/src/TexCoord.ts#L49",comment:"The wanted translation",type:{listType:"tuple",list:[{name:"number"},{name:"number"}]},tags:["optional"]}],accessors:[],methods:[],extends:null,implemented:null}]},{name:"nanogl-pf",description:"Provide pixel format related capabilities",classes:[{id:6,name:"PixelFormats",originalName:"default",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L19",comment:"This class provides various pixel-format related capabilities.",tags:[],constructors:[{id:10,name:"PixelFormats",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L89",tags:[],type:{name:"PixelFormats",lib:"nanogl-pf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L19"},params:[{id:12,name:"gl",type:{listType:"union",list:[{name:"WebGLRenderingContext"},{name:"WebGL2RenderingContext"}]},tags:[],comment:"The webgl context this PixelFormats belongs to"}],typeParams:[]}],properties:[{id:29,name:"A2B10G10R10",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L83",comment:"Pixel format preset for A2B10G10R10",type:{name:"FormatDesc",lib:"nanogl-pf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L2"},tags:["readonly"]},{id:18,name:"EXT_color_buffer_float",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L47",comment:`The EXT_color_buffer_float webgl extension :
adds the ability to render a variety of floating point formats`,type:{name:"any"},tags:[]},{id:19,name:"EXT_color_buffer_half_float",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L52",comment:`The EXT_color_buffer_half_float webgl extension :
adds the ability to render to 16-bit floating-point color buffers`,type:{name:"any"},tags:[]},{id:14,name:"EXT_texture_float",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L27",comment:`The OES_texture_float webgl extension :
exposes floating-point pixel types for textures`,type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"OES_texture_float"}]},tags:[]},{id:17,name:"EXT_texture_float_linear",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L42",comment:`The OES_texture_float_linear webgl extension :
allows linear filtering with floating-point pixel types for textures`,type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"OES_texture_float_linear"}]},tags:[]},{id:15,name:"EXT_texture_half_float",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L32",comment:`The OES_texture_half_float webgl extension :
adds texture formats with 16- and 32-bit floating-point components`,type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"OES_texture_half_float"}]},tags:[]},{id:16,name:"EXT_texture_half_float_linear",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L37",comment:`The OES_texture_half_float_linear webgl extension :
allows linear filtering with half floating-point pixel types for textures`,type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"OES_texture_half_float_linear"}]},tags:[]},{id:27,name:"RGB16F",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L79",comment:"Pixel format preset for RGB16F",type:{name:"FormatDesc",lib:"nanogl-pf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L2"},tags:["readonly"]},{id:25,name:"RGB32F",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L75",comment:"Pixel format preset for RGB32F",type:{name:"FormatDesc",lib:"nanogl-pf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L2"},tags:["readonly"]},{id:23,name:"RGB8",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L71",comment:"Pixel format preset for RGB8",type:{name:"FormatDesc",lib:"nanogl-pf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L2"},tags:["readonly"]},{id:28,name:"RGBA16F",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L81",comment:"Pixel format preset for RGBA16F",type:{name:"FormatDesc",lib:"nanogl-pf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L2"},tags:["readonly"]},{id:26,name:"RGBA32F",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L77",comment:"Pixel format preset for RGBA32F",type:{name:"FormatDesc",lib:"nanogl-pf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L2"},tags:["readonly"]},{id:24,name:"RGBA8",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L73",comment:"Pixel format preset for RGBA8",type:{name:"FormatDesc",lib:"nanogl-pf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L2"},tags:["readonly"]},{id:20,name:"WEBGL_depth_texture",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L57",comment:`The depth texture webgl extension :
defines 2D depth and depth-stencil textures`,type:{name:"any"},tags:[]},{id:21,name:"_availables",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L63",comment:`List of pixel formats that have already been tested for texture allocation
to be possible or not, and the corresponding result`,type:{name:"Record",data:{arguments:[{name:"string"},{name:"boolean"}]}},tags:["private","readonly"]},{id:22,name:"_renderables",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L68",comment:`List of pixel formats that have already been tested
to be color renderable or not, and the corresponding result`,type:{name:"Record",data:{arguments:[{name:"string"},{name:"boolean"}]}},tags:["private","readonly"]},{id:13,name:"gl",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L21",comment:"The webgl context this ArrayBuffer belongs to",type:{listType:"union",list:[{name:"WebGLRenderingContext"},{name:"WebGL2RenderingContext"}]},tags:["readonly"]}],accessors:[],methods:[{id:47,name:"_testAvailable",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L274",comment:`Test if texture allocation with given pixel format is possible or throws gl error.

Used by [isAvailable](/api/nanogl-pf/classes/PixelFormats#item-34)

**Important :** Using this method can change bound texture.`,tags:["private"],type:{name:"boolean"},params:[{id:49,name:"format",type:{name:"number"},tags:["optional"],comment:"The pixel format (`GL_RGB`, `GL_RGBA`, etc.) to test",optional:!0},{id:50,name:"type",type:{name:"number"},tags:["optional"],comment:"The pixel data type (`GL_UNSIGNED_BYTE`, `GL_FLOAT`, etc.) to test",optional:!0},{id:51,name:"internal",type:{name:"number"},tags:["optional"],comment:"The pixel internal format to test, defaults to the `format` parameter value",optional:!0}],typeParams:[]},{id:52,name:"_testRenderable",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L300",comment:`Test if given format is color renderable or not.

Used by [isRenderable](/api/nanogl-pf/classes/PixelFormats#item-39)

**Important :** Using this method can change bound framebuffer and texture.`,tags:["private"],type:{name:"boolean"},params:[{id:54,name:"format",type:{name:"number"},tags:["optional"],comment:"The pixel format (`GL_RGB`, `GL_RGBA`, etc.) to test",optional:!0},{id:55,name:"type",type:{name:"number"},tags:["optional"],comment:"The pixel data type (`GL_UNSIGNED_BYTE`, `GL_FLOAT`, etc.) to test",optional:!0},{id:56,name:"internal",type:{name:"number"},tags:["optional"],comment:"The pixel internal format to test, defaults to the `format` parameter value",optional:!0}],typeParams:[]},{id:30,name:"dispose",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L163",comment:`Release this instance and its reference in the webgl context.
Also release all extensions.`,tags:[],type:{name:"void"},typeParams:[]},{id:44,name:"getRenderableFormat",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L250",comment:`Get the first color-renderable format from given list or null if there is none.

**Important :** Using this method can change bound framebuffer and texture.`,tags:[],type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"FormatDesc",lib:"nanogl-pf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L2"}]},params:[{id:46,name:"configs",type:{name:"FormatDesc",lib:"nanogl-pf",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L2",isArray:!0},tags:[],comment:"The list of formats to test"}],typeParams:[]},{id:32,name:"hasDepthTexture",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L184",comment:"Know whether a texture with depth pixel format can be created or not.",tags:[],type:{name:"boolean"},typeParams:[]},{id:34,name:"isAvailable",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L201",comment:`Know whether texture allocation with given pixel format is possible or throws gl error.

**Important :** Using this method can change bound texture.`,tags:[],type:{name:"boolean"},params:[{id:36,name:"format",type:{name:"number"},tags:["optional"],comment:"The pixel format (`GL_RGB`, `GL_RGBA`, etc.) to test",optional:!0},{id:37,name:"type",type:{name:"number"},tags:["optional"],comment:"The pixel data type (`GL_UNSIGNED_BYTE`, `GL_FLOAT`, etc.) to test",optional:!0},{id:38,name:"internal",type:{name:"number"},tags:["optional"],comment:"The pixel internal format to test, defaults to the `format` parameter value",optional:!0,defaultValue:"format"}],typeParams:[]},{id:39,name:"isRenderable",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L227",comment:`Know whether given format is color renderable or not.

The result will be positive if an FBO to which we attach a texture that is using the given format has status \`GL_FRAMEBUFFER_COMPLETE\`.

**Important :** Using this method can change bound framebuffer and texture.`,tags:[],type:{name:"boolean"},params:[{id:41,name:"format",type:{name:"number"},tags:["optional"],comment:"The pixel format (`GL_RGB`, `GL_RGBA`, etc.) to test",optional:!0},{id:42,name:"type",type:{name:"number"},tags:["optional"],comment:"The pixel data type (`GL_UNSIGNED_BYTE`, `GL_FLOAT`, etc.) to test",optional:!0},{id:43,name:"internal",type:{name:"number"},tags:["optional"],comment:"The pixel internal format to test, defaults to the `format` parameter value",optional:!0,defaultValue:"format"}],typeParams:[]},{id:7,name:"getInstance",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L146",comment:"Create a PixelFormats instance or return the existing one for given webgl context.",tags:["static"],type:{name:"PixelFormats",lib:"nanogl-pf",kind:"Class",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L19"},params:[{id:9,name:"gl",type:{listType:"union",list:[{name:"WebGLRenderingContext"},{name:"WebGL2RenderingContext"}]},tags:[],comment:"The webgl context"}],typeParams:[]}],extends:null,implements:null}],functions:[],interfaces:[],enumerations:[],types:[{useInterface:!0,id:1,name:"FormatDesc",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L2",comment:"The description of a pixel format.",tags:[],properties:[{id:3,name:"format",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L4",comment:"The pixel format (`GL_RGB`, `GL_RGBA`, etc.)",type:{name:"GLenum"},tags:[]},{id:4,name:"internal",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L6",comment:"The pixel internal format",type:{name:"GLenum"},tags:[]},{id:5,name:"type",source:"https://github.com/evanmartiin/nanogl-pf/blob/7f646c6/src/index.ts#L8",comment:"The pixel data type (`GL_UNSIGNED_BYTE`, `GL_FLOAT`, etc.)",type:{name:"GLenum"},tags:[]}],accessors:[],methods:[],extends:null,implemented:null}]},{name:"nanogl-post",description:"Post-processing for nanogl",classes:[{id:6,name:"BaseEffect",originalName:"default",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/base-effect.ts#L21",comment:"This class is the base for all post-processing effects.",tags:["abstract"],constructors:[{id:7,name:"BaseEffect",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/base-effect.ts#L32",tags:[],type:{name:"BaseEffect",lib:"nanogl-post",kind:"Class",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/base-effect.ts#L21"},typeParams:[]}],properties:[{id:9,name:"_flags",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/base-effect.ts#L26",comment:`The dependencies this effect needs :
depth pass, linear filtering`,type:{name:"EffectDependency",lib:"nanogl-post",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/base-effect.ts#L5"},tags:[]},{id:10,name:"post",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/base-effect.ts#L28",comment:"The Post this effect belongs to",type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"Post",lib:"nanogl-post",kind:"Class",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/post.ts#L18"}]},tags:[]}],accessors:[],methods:[{id:11,name:"_init",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/base-effect.ts#L43",comment:"Setup the effect with the given post.",tags:[],type:{name:"void"},params:[{id:13,name:"post",type:{name:"Post",lib:"nanogl-post",kind:"Class",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/post.ts#L18"},tags:[],comment:"The Post this effect belongs to"}],typeParams:[]},{id:20,name:"genCode",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/base-effect.ts#L68",comment:`Add the shader pre-code (uniforms, attributes, functions, etc.)
& code for this effect to the given lists.`,tags:["abstract"],type:{name:"void"},params:[{id:22,name:"precode",type:{name:"string",isArray:!0},tags:[],comment:"The list of shader pre-code to add to"},{id:23,name:"code",type:{name:"string",isArray:!0},tags:[],comment:"The list of shader code to add to"}],typeParams:[]},{id:14,name:"init",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/base-effect.ts#L53",comment:"Initialize the effect.",tags:["abstract"],type:{name:"void"},typeParams:[]},{id:18,name:"preRender",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/base-effect.ts#L61",comment:"Prepare this effect for render.",tags:["abstract"],type:{name:"void"},typeParams:[]},{id:16,name:"release",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/base-effect.ts#L57",comment:"Delete all webgl objects related to this effect.",tags:["abstract"],type:{name:"void"},typeParams:[]},{id:27,name:"resize",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/base-effect.ts#L79",comment:"Resize this effect.",tags:["abstract"],type:{name:"void"},params:[{id:29,name:"w",type:{name:"number"},tags:[],comment:"The new width"},{id:30,name:"h",type:{name:"number"},tags:[],comment:"The new height"}],typeParams:[]},{id:24,name:"setupProgram",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/base-effect.ts#L73",comment:"Setup the given program for this effect.",tags:["abstract"],type:{name:"void"},params:[{id:26,name:"prg",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[],comment:"The program to setup"}],typeParams:[]}],extends:null,implements:null},{id:32,name:"Bloom",originalName:"default",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/bloom.ts#L23",comment:"This class implements a bloom effect.",tags:[],constructors:[{id:33,name:"Bloom",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/bloom.ts#L57",tags:[],type:{name:"Bloom",lib:"nanogl-post",kind:"Class",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/bloom.ts#L23"},params:[{id:35,name:"color",type:{name:"ArrayLike",data:{arguments:[{name:"number"}]}},tags:[],comment:"The color of the bloom effect"},{id:36,name:"size",type:{name:"number"},tags:[],comment:"The size of the bloom effect"}],typeParams:[]}],properties:[{id:44,name:"_code",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/bloom.ts#L46",comment:"The shader code for this effect",type:{name:"string"},tags:[]},{id:43,name:"_preCode",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/bloom.ts#L44",comment:`The shader pre-code (uniforms, attributes, functions, etc.)
for this effect`,type:{name:"string"},tags:[]},{id:42,name:"bloomKernel",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/bloom.ts#L38",comment:"The kernel used to create the bloom effect",type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"Float32Array"}]},tags:[]},{id:41,name:"bloomSamples",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/bloom.ts#L36",comment:"The number of samples used to create the bloom effect",type:{name:"number"},tags:[]},{id:40,name:"bloomTargets",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/bloom.ts#L33",comment:"The FBOs used to create the bloom effect",type:{name:"Fbo",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L105",isArray:!0},tags:[]},{id:37,name:"color",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/bloom.ts#L27",comment:"The color of the bloom effect",type:{name:"ArrayLike",data:{arguments:[{name:"number"}]}},tags:[]},{id:45,name:"prcPrg",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/bloom.ts#L51",comment:`The program used for the intermediate steps
to create the bloom effect`,type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"}]},tags:[]},{id:38,name:"size",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/bloom.ts#L29",comment:"The size of the bloom effect",type:{name:"number"},tags:[]}],accessors:[],methods:[{id:63,name:"computeKernel",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/bloom.ts#L203",comment:`Compute the kernel used to offset the
texture coordinates for the bloom effect.`,tags:[],type:{name:"void"},typeParams:[]},{id:54,name:"genCode",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/bloom.ts#L148",comment:`Add the shader pre-code (uniforms, attributes, functions, etc.)
& code for this effect to the given lists.`,tags:[],type:{name:"void"},params:[{id:56,name:"precode",type:{name:"string",isArray:!0},tags:[],comment:"The list of shader pre-code to add to"},{id:57,name:"code",type:{name:"string",isArray:!0},tags:[],comment:"The list of shader code to add to"}],typeParams:[]},{id:46,name:"init",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/bloom.ts#L79",comment:"Initialize the effect.",tags:[],type:{name:"void"},typeParams:[]},{id:58,name:"preRender",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/bloom.ts#L155",comment:"Prepare this effect for render.",tags:[],type:{name:"void"},typeParams:[]},{id:52,name:"release",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/bloom.ts#L133",comment:"Delete all webgl objects related to this effect.",tags:[],type:{name:"void"},typeParams:[]},{id:48,name:"resize",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/bloom.ts#L127",comment:"Resize this effect.",tags:[],type:{name:"void"},params:[{id:50,name:"w",type:{name:"number"},tags:[],comment:"The new width"},{id:51,name:"h",type:{name:"number"},tags:[],comment:"The new height"}],typeParams:[]},{id:60,name:"setupProgram",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/bloom.ts#L181",comment:"Setup the given program for this effect.",tags:[],type:{name:"void"},params:[{id:62,name:"prg",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[],comment:"The program to setup"}],typeParams:[]},{id:65,name:"transposeKernel",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/bloom.ts#L234",comment:"Transpose the bloom kernel based on the render aspect ratio.",tags:[],type:{name:"void"},typeParams:[]}],extends:[{name:"BaseEffect",lib:"nanogl-post",kind:"Class",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/base-effect.ts#L21"}],implements:null},{id:73,name:"Contrast",originalName:"default",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/contrast.ts#L12",comment:"This class implements a contrast effect.",tags:[],constructors:[{id:74,name:"Contrast",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/contrast.ts#L49",tags:[],type:{name:"Contrast",lib:"nanogl-post",kind:"Class",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/contrast.ts#L12"},params:[{id:76,name:"contrast",type:{name:"number"},tags:[],comment:"The contrast amount"},{id:77,name:"brightness",type:{name:"number"},tags:[],comment:"The brightness amount"},{id:78,name:"bias",type:{name:"number"},tags:[],comment:"The bias amount"}],typeParams:[]}],properties:[{id:86,name:"_code",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/contrast.ts#L42",comment:"The shader code for this effect",type:{name:"string"},tags:[]},{id:85,name:"_preCode",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/contrast.ts#L40",comment:`The shader pre-code (uniforms, attributes, functions, etc.)
for this effect`,type:{name:"string"},tags:[]},{id:81,name:"bias",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/contrast.ts#L18",comment:"The bias amount",type:{name:"number"},tags:[]},{id:84,name:"biasTint",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/contrast.ts#L34",comment:"The tint color for the bias",defaultValue:"[1, 1, 1]",type:{name:"number",isArray:!0},tags:[]},{id:80,name:"brightness",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/contrast.ts#L16",comment:"The brightness amount",type:{name:"number"},tags:[]},{id:83,name:"brightnessTint",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/contrast.ts#L29",comment:"The tint color for the brightness",defaultValue:"[1, 1, 1]",type:{name:"number",isArray:!0},tags:[]},{id:79,name:"contrast",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/contrast.ts#L14",comment:"The contrast amount",type:{name:"number"},tags:[]},{id:82,name:"contrastTint",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/contrast.ts#L24",comment:"The tint color for the contrast",defaultValue:"[1, 1, 1]",type:{name:"number",isArray:!0},tags:[]}],accessors:[],methods:[{id:87,name:"genCode",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/contrast.ts#L69",comment:`Add the shader pre-code (uniforms, attributes, functions, etc.)
& code for this effect to the given lists.`,tags:[],type:{name:"void"},params:[{id:89,name:"precode",type:{name:"string",isArray:!0},tags:[],comment:"The list of shader pre-code to add to"},{id:90,name:"code",type:{name:"string",isArray:!0},tags:[],comment:"The list of shader code to add to"}],typeParams:[]},{id:94,name:"init",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/contrast.ts#L99",comment:"Initialize the effect.",tags:[],type:{name:"void"},typeParams:[]},{id:98,name:"preRender",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/contrast.ts#L101",comment:"Prepare this effect for render.",tags:[],type:{name:"void"},typeParams:[]},{id:96,name:"release",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/contrast.ts#L100",comment:"Delete all webgl objects related to this effect.",tags:[],type:{name:"void"},typeParams:[]},{id:100,name:"resize",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/contrast.ts#L102",comment:"Resize this effect.",tags:[],type:{name:"void"},params:[{id:102,name:"w",type:{name:"number"},tags:[],comment:"The new width"},{id:103,name:"h",type:{name:"number"},tags:[],comment:"The new height"}],typeParams:[]},{id:91,name:"setupProgram",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/contrast.ts#L75",comment:"Setup the given program for this effect.",tags:[],type:{name:"void"},params:[{id:93,name:"prg",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[],comment:"The program to setup"}],typeParams:[]}],extends:[{name:"BaseEffect",lib:"nanogl-post",kind:"Class",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/base-effect.ts#L21"}],implements:null},{id:110,name:"Dof",originalName:"default",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/dof.ts#L44",comment:"This class implements a depth of field effect.",tags:[],constructors:[{id:111,name:"Dof",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/dof.ts#L134",tags:[],type:{name:"Dof",lib:"nanogl-post",kind:"Class",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/dof.ts#L44"},params:[{id:113,name:"camera",type:{name:"Camera",lib:"nanogl-camera",kind:"Class",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/index.ts#L18",data:{arguments:[{name:"ICameraLens",lib:"nanogl-camera",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ICameraLens.ts#L4"}]}},tags:[],comment:"The camera used to render the scene"}],typeParams:[]}],properties:[{id:115,name:"_available",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/dof.ts#L48",comment:"Whether this effect is available or not",type:{name:"boolean"},tags:[]},{id:130,name:"_code",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/dof.ts#L115",comment:"The shader code for this effect",type:{name:"string"},tags:[]},{id:129,name:"_preCode",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/dof.ts#L113",comment:`The shader pre-code (uniforms, attributes, functions, etc.)
for this effect`,type:{name:"string"},tags:[]},{id:124,name:"blurKernel",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/dof.ts#L98",comment:"The kernel used to create the blur effect",type:{name:"Float32Array"},tags:[]},{id:123,name:"blurSamples",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/dof.ts#L96",comment:"The number of samples used to create the blur effect",defaultValue:"2",type:{name:"number"},tags:[]},{id:114,name:"camera",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/dof.ts#L46",comment:"The camera used to render the scene",type:{name:"Camera",lib:"nanogl-camera",kind:"Class",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/index.ts#L18",data:{arguments:[{name:"ICameraLens",lib:"nanogl-camera",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-camera/blob/33a1548/src/ICameraLens.ts#L4"}]}},tags:[]},{id:121,name:"d0",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/dof.ts#L82",comment:"The distance where the fade from\nthe unblurred sample to the small blur happens\n\n(`this.d0 + this.d1` must be less than `1`)",defaultValue:"0.2",type:{name:"number"},tags:[]},{id:122,name:"d1",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/dof.ts#L91",comment:"The distance where the fade from\nthe the small blur to the medium blur happens\n\n(`this.d0 + this.d1` must be less than `1`)",defaultValue:"0.2",type:{name:"number"},tags:[]},{id:136,name:"depthSampler",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/dof.ts#L129",comment:"The depth sampler",type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"Sampler",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/sampler.ts#L8"}]},tags:[]},{id:118,name:"far",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/dof.ts#L63",comment:"The far depth for this effect",defaultValue:"4",type:{name:"number"},tags:[]},{id:120,name:"farBlur",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/dof.ts#L73",comment:"The ratio of the far to the near blur radius",defaultValue:"0.5",type:{name:"number"},tags:[]},{id:133,name:"fboBlurH",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/dof.ts#L122",comment:"The FBO used for the horizontal blur",type:{name:"Fbo",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L105"},tags:[]},{id:132,name:"fboBlurV",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/dof.ts#L120",comment:"The FBO used for the vertical blur",type:{name:"Fbo",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L105"},tags:[]},{id:134,name:"fboCoc",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/dof.ts#L124",comment:"The FBO used for the near CoC",type:{name:"Fbo",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L105"},tags:[]},{id:131,name:"fboDS",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/dof.ts#L118",comment:"The FBO used for the down sampling",type:{name:"Fbo",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L105"},tags:[]},{id:135,name:"fboMed",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/dof.ts#L126",comment:"The FBO used for the med blur 3x3",type:{name:"Fbo",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L105"},tags:[]},{id:116,name:"focus",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/dof.ts#L53",comment:"The focus depth for this effect",defaultValue:"1.3",type:{name:"number"},tags:[]},{id:117,name:"focusRange",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/dof.ts#L58",comment:"The range of focus for this effect",defaultValue:"0",type:{name:"number"},tags:[]},{id:119,name:"near",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/dof.ts#L68",comment:"The near depth for this effect",defaultValue:"1",type:{name:"number"},tags:[]},{id:126,name:"prgBlur",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/dof.ts#L103",comment:"The program used for the blur",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[]},{id:127,name:"prgCoc",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/dof.ts#L105",comment:"The program used for the near CoC",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[]},{id:125,name:"prgDS",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/dof.ts#L101",comment:"The program used for the downsampling",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[]},{id:128,name:"prgMed",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/dof.ts#L107",comment:"The program used for the med blur 3x3",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[]}],accessors:[],methods:[{id:158,name:"computeKernel",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/dof.ts#L449",comment:`Compute the kernel used to offset the
texture coordinates for the blur effect.`,tags:[],type:{name:"void"},params:[{id:160,name:"h",type:{name:"boolean"},tags:[],comment:"Whether the kernel is horizontal or not"}],typeParams:[]},{id:145,name:"genCode",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/dof.ts#L268",comment:`Add the shader pre-code (uniforms, attributes, functions, etc.)
& code for this effect to the given lists.`,tags:[],type:{name:"void"},params:[{id:147,name:"precode",type:{name:"string",isArray:!0},tags:[],comment:"The list of shader pre-code to add to"},{id:148,name:"code",type:{name:"string",isArray:!0},tags:[],comment:"The list of shader code to add to"}],typeParams:[]},{id:137,name:"genFbo",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/dof.ts#L179",comment:"Generate a framebuffer that can be used for this effect.",tags:[],type:{name:"Fbo",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L105"},typeParams:[]},{id:151,name:"getFarEq",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/dof.ts#L298",comment:`Get the far equation used to compute the depth of field effect.
The z value is the ratio of the far to the near blur radius.`,tags:[],type:{name:"vec3"},typeParams:[]},{id:149,name:"getNearEq",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/dof.ts#L276",comment:"Get the near equation used to compute the depth of field effect.",tags:[],type:{name:"Float32Array"},typeParams:[]},{id:139,name:"init",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/dof.ts#L191",comment:"Initialize the effect.",tags:[],type:{name:"void"},typeParams:[]},{id:153,name:"preRender",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/dof.ts#L319",comment:"Prepare this effect for render.",tags:[],type:{name:"void"},typeParams:[]},{id:143,name:"release",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/dof.ts#L250",comment:"Delete all webgl objects related to this effect.",tags:[],type:{name:"void"},typeParams:[]},{id:141,name:"resize",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/dof.ts#L232",comment:"Resize this effect.",tags:[],type:{name:"void"},typeParams:[]},{id:155,name:"setupProgram",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/dof.ts#L414",comment:"Setup the given program for this effect.",tags:[],type:{name:"void"},params:[{id:157,name:"prg",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[],comment:"The program to setup"}],typeParams:[]}],extends:[{name:"BaseEffect",lib:"nanogl-post",kind:"Class",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/base-effect.ts#L21"}],implements:null},{id:167,name:"Fetch",originalName:"default",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/fetch.ts#L14",comment:"This class implements a fetch effect.\n\nIt is used to set the current color as the rendered scene texture.\nYou can use this before applying effects that modify the current color\nsuch as `Sharpen` or `Saturation`.",tags:[],constructors:[{id:168,name:"Fetch",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/fetch.ts#L19",tags:[],type:{name:"Fetch",lib:"nanogl-post",kind:"Class",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/fetch.ts#L14"},typeParams:[]}],properties:[{id:170,name:"_code",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/fetch.ts#L17",comment:"The shader code for this effect",type:{name:"string"},tags:[]}],accessors:[],methods:[{id:171,name:"genCode",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/fetch.ts#L28",comment:`Add the shader pre-code (uniforms, attributes, functions, etc.)
& code for this effect to the given lists.`,tags:[],type:{name:"void"},params:[{id:173,name:"precode",type:{name:"string",isArray:!0},tags:[],comment:"The list of shader pre-code to add to"},{id:174,name:"code",type:{name:"string",isArray:!0},tags:[],comment:"The list of shader code to add to"}],typeParams:[]},{id:175,name:"init",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/fetch.ts#L33",comment:"Initialize the effect.",tags:[],type:{name:"void"},typeParams:[]},{id:179,name:"preRender",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/fetch.ts#L35",comment:"Prepare this effect for render.",tags:[],type:{name:"void"},typeParams:[]},{id:177,name:"release",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/fetch.ts#L34",comment:"Delete all webgl objects related to this effect.",tags:[],type:{name:"void"},typeParams:[]},{id:184,name:"resize",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/fetch.ts#L37",comment:"Resize this effect.",tags:[],type:{name:"void"},params:[{id:186,name:"w",type:{name:"number"},tags:[],comment:"The new width"},{id:187,name:"h",type:{name:"number"},tags:[],comment:"The new height"}],typeParams:[]},{id:181,name:"setupProgram",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/fetch.ts#L36",comment:"Setup the given program for this effect.",tags:[],type:{name:"void"},params:[{id:183,name:"prg",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[],comment:"The program to setup"}],typeParams:[]}],extends:[{name:"BaseEffect",lib:"nanogl-post",kind:"Class",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/base-effect.ts#L21"}],implements:null},{id:194,name:"GammaCorrection",originalName:"default",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/gamma_correction.ts#L11",comment:`This class implements gamma correction.

**Note :** Gamma correction may be applied directly within *nanogl-pbr*'s shader`,tags:[],constructors:[{id:195,name:"GammaCorrection",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/gamma_correction.ts#L18",tags:[],type:{name:"GammaCorrection",lib:"nanogl-post",kind:"Class",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/gamma_correction.ts#L11"},params:[{id:197,name:"gamma",type:{name:"number"},tags:[],comment:"The gamma value"}],typeParams:[]}],properties:[{id:198,name:"_code",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/gamma_correction.ts#L13",comment:"The shader code for this effect",type:{name:"string"},tags:[]}],accessors:[],methods:[{id:199,name:"genCode",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/gamma_correction.ts#L24",comment:`Add the shader pre-code (uniforms, attributes, functions, etc.)
& code for this effect to the given lists.`,tags:[],type:{name:"void"},params:[{id:201,name:"precode",type:{name:"string",isArray:!0},tags:[],comment:"The list of shader pre-code to add to"},{id:202,name:"code",type:{name:"string",isArray:!0},tags:[],comment:"The list of shader code to add to"}],typeParams:[]},{id:203,name:"init",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/gamma_correction.ts#L29",comment:"Initialize the effect.",tags:[],type:{name:"void"},typeParams:[]},{id:207,name:"preRender",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/gamma_correction.ts#L31",comment:"Prepare this effect for render.",tags:[],type:{name:"void"},typeParams:[]},{id:205,name:"release",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/gamma_correction.ts#L30",comment:"Delete all webgl objects related to this effect.",tags:[],type:{name:"void"},typeParams:[]},{id:212,name:"resize",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/gamma_correction.ts#L33",comment:"Resize this effect.",tags:[],type:{name:"void"},params:[{id:214,name:"w",type:{name:"number"},tags:[],comment:"The new width"},{id:215,name:"h",type:{name:"number"},tags:[],comment:"The new height"}],typeParams:[]},{id:209,name:"setupProgram",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/gamma_correction.ts#L32",comment:"Setup the given program for this effect.",tags:[],type:{name:"void"},params:[{id:211,name:"prg",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[],comment:"The program to setup"}],typeParams:[]}],extends:[{name:"BaseEffect",lib:"nanogl-post",kind:"Class",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/base-effect.ts#L21"}],implements:null},{id:222,name:"GammaTB",originalName:"default",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/gamma_tb.ts#L11",comment:`This class implements an alternative gamma correction, using the gamma curve from Marmoset Toolbag.

**Note :** Gamma correction may be applied directly within *nanogl-pbr*'s shader`,tags:[],constructors:[{id:223,name:"GammaTB",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/gamma_tb.ts#L15",tags:[],type:{name:"GammaTB",lib:"nanogl-post",kind:"Class",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/gamma_tb.ts#L11"},typeParams:[]}],properties:[{id:225,name:"_code",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/gamma_tb.ts#L13",comment:"The shader code for this effect",type:{name:"string"},tags:[]}],accessors:[],methods:[{id:226,name:"genCode",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/gamma_tb.ts#L21",comment:`Add the shader pre-code (uniforms, attributes, functions, etc.)
& code for this effect to the given lists.`,tags:[],type:{name:"void"},params:[{id:228,name:"precode",type:{name:"string",isArray:!0},tags:[],comment:"The list of shader pre-code to add to"},{id:229,name:"code",type:{name:"string",isArray:!0},tags:[],comment:"The list of shader code to add to"}],typeParams:[]},{id:230,name:"init",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/gamma_tb.ts#L26",comment:"Initialize the effect.",tags:[],type:{name:"void"},typeParams:[]},{id:234,name:"preRender",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/gamma_tb.ts#L28",comment:"Prepare this effect for render.",tags:[],type:{name:"void"},typeParams:[]},{id:232,name:"release",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/gamma_tb.ts#L27",comment:"Delete all webgl objects related to this effect.",tags:[],type:{name:"void"},typeParams:[]},{id:239,name:"resize",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/gamma_tb.ts#L30",comment:"Resize this effect.",tags:[],type:{name:"void"},params:[{id:241,name:"w",type:{name:"number"},tags:[],comment:"The new width"},{id:242,name:"h",type:{name:"number"},tags:[],comment:"The new height"}],typeParams:[]},{id:236,name:"setupProgram",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/gamma_tb.ts#L29",comment:"Setup the given program for this effect.",tags:[],type:{name:"void"},params:[{id:238,name:"prg",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[],comment:"The program to setup"}],typeParams:[]}],extends:[{name:"BaseEffect",lib:"nanogl-post",kind:"Class",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/base-effect.ts#L21"}],implements:null},{id:262,name:"Grain",originalName:"default",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/grain.ts#L29",comment:"This class implements a grain effect.",tags:[],constructors:[{id:263,name:"Grain",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/grain.ts#L51",tags:[],type:{name:"Grain",lib:"nanogl-post",kind:"Class",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/grain.ts#L29"},params:[{id:265,name:"amount",type:{name:"number"},tags:[],comment:"The amount of grain"},{id:266,name:"sharpness",type:{name:"number"},tags:[],comment:"The sharpness of the grain"}],typeParams:[]}],properties:[{id:271,name:"_code",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/grain.ts#L45",comment:"The shader code for this effect",type:{name:"string"},tags:["private"]},{id:269,name:"_noiseTex",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/grain.ts#L38",comment:"The noise texture used for the grain",type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"Texture",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-base.ts#L18"}]},tags:["private"]},{id:270,name:"_preCode",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/grain.ts#L43",comment:`The shader pre-code (uniforms, attributes, functions, etc.)
for this effect`,type:{name:"string"},tags:["private"]},{id:267,name:"amount",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/grain.ts#L32",comment:"The amount of grain",type:{name:"number"},tags:[]},{id:268,name:"sharpness",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/grain.ts#L34",comment:"The sharpness of the grain",type:{name:"number"},tags:[]}],accessors:[],methods:[{id:272,name:"genCode",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/grain.ts#L67",comment:`Add the shader pre-code (uniforms, attributes, functions, etc.)
& code for this effect to the given lists.`,tags:[],type:{name:"void"},params:[{id:274,name:"precode",type:{name:"string",isArray:!0},tags:[],comment:"The list of shader pre-code to add to"},{id:275,name:"code",type:{name:"string",isArray:!0},tags:[],comment:"The list of shader code to add to"}],typeParams:[]},{id:276,name:"init",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/grain.ts#L73",comment:"Initialize the effect.",tags:[],type:{name:"void"},typeParams:[]},{id:283,name:"preRender",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/grain.ts#L112",comment:"Prepare this effect for render.",tags:[],type:{name:"void"},typeParams:[]},{id:278,name:"release",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/grain.ts#L80",comment:"Delete all webgl objects related to this effect.",tags:[],type:{name:"void"},typeParams:[]},{id:285,name:"resize",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/grain.ts#L113",comment:"Resize this effect.",tags:[],type:{name:"void"},params:[{id:287,name:"w",type:{name:"number"},tags:[],comment:"The new width"},{id:288,name:"h",type:{name:"number"},tags:[],comment:"The new height"}],typeParams:[]},{id:280,name:"setupProgram",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/grain.ts#L87",comment:"Setup the given program for this effect.",tags:[],type:{name:"void"},params:[{id:282,name:"prg",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[],comment:"The program to setup"}],typeParams:[]}],extends:[{name:"BaseEffect",lib:"nanogl-post",kind:"Class",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/base-effect.ts#L21"}],implements:null},{id:295,name:"Hejl",originalName:"default",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/hejl.ts#L9",comment:"This class implements Hejl tone mapping.",tags:[],constructors:[{id:296,name:"Hejl",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/hejl.ts#L13",tags:[],type:{name:"Hejl",lib:"nanogl-post",kind:"Class",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/hejl.ts#L9"},typeParams:[]}],properties:[{id:298,name:"_code",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/hejl.ts#L11",comment:"The shader code for this effect",type:{name:"string"},tags:[]}],accessors:[],methods:[{id:299,name:"genCode",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/hejl.ts#L18",comment:`Add the shader pre-code (uniforms, attributes, functions, etc.)
& code for this effect to the given lists.`,tags:[],type:{name:"void"},params:[{id:301,name:"precode",type:{name:"string",isArray:!0},tags:[],comment:"The list of shader pre-code to add to"},{id:302,name:"code",type:{name:"string",isArray:!0},tags:[],comment:"The list of shader code to add to"}],typeParams:[]},{id:303,name:"init",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/hejl.ts#L22",comment:"Initialize the effect.",tags:[],type:{name:"void"},typeParams:[]},{id:307,name:"preRender",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/hejl.ts#L24",comment:"Prepare this effect for render.",tags:[],type:{name:"void"},typeParams:[]},{id:305,name:"release",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/hejl.ts#L23",comment:"Delete all webgl objects related to this effect.",tags:[],type:{name:"void"},typeParams:[]},{id:312,name:"resize",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/hejl.ts#L26",comment:"Resize this effect.",tags:[],type:{name:"void"},params:[{id:314,name:"w",type:{name:"number"},tags:[],comment:"The new width"},{id:315,name:"h",type:{name:"number"},tags:[],comment:"The new height"}],typeParams:[]},{id:309,name:"setupProgram",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/hejl.ts#L25",comment:"Setup the given program for this effect.",tags:[],type:{name:"void"},params:[{id:311,name:"prg",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[],comment:"The program to setup"}],typeParams:[]}],extends:[{name:"BaseEffect",lib:"nanogl-post",kind:"Class",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/base-effect.ts#L21"}],implements:null},{id:322,name:"LUT",originalName:"default",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/lut.ts#L11",comment:"This class implements color grading with a lookup table (LUT).",tags:[],constructors:[{id:323,name:"LUT",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/lut.ts#L32",tags:[],type:{name:"LUT",lib:"nanogl-post",kind:"Class",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/lut.ts#L11"},params:[{id:325,name:"lut",type:{name:"ArrayLike",data:{arguments:[{name:"number"}]}},tags:[],comment:"The lookup table to use"}],typeParams:[]}],properties:[{id:330,name:"_code",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/lut.ts#L27",comment:"The shader code for this effect",type:{name:"string"},tags:["private"]},{id:328,name:"_invalidTex",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/lut.ts#L19",comment:"Whether the LUT texture is invalid or not",type:{name:"boolean"},tags:["private"]},{id:326,name:"_lut",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/lut.ts#L14",comment:"The lookup table to use",type:{name:"ArrayLike",data:{arguments:[{name:"number"}]}},tags:["private"]},{id:327,name:"_lutTex",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/lut.ts#L16",comment:"The texture created from the LUT data",type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"Texture",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-base.ts#L18"}]},tags:["private"]},{id:329,name:"_preCode",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/lut.ts#L25",comment:`The shader pre-code (uniforms, attributes, functions, etc.)
for this effect`,type:{name:"string"},tags:["private"]}],accessors:[],methods:[{id:339,name:"_updateTex",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/lut.ts#L68",comment:"Update the LUT texture from the LUT data.",tags:[],type:{name:"void"},typeParams:[]},{id:335,name:"genCode",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/lut.ts#L60",comment:`Add the shader pre-code (uniforms, attributes, functions, etc.)
& code for this effect to the given lists.`,tags:[],type:{name:"void"},params:[{id:337,name:"precode",type:{name:"string",isArray:!0},tags:[],comment:"The list of shader pre-code to add to"},{id:338,name:"code",type:{name:"string",isArray:!0},tags:[],comment:"The list of shader code to add to"}],typeParams:[]},{id:331,name:"init",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/lut.ts#L47",comment:"Initialize the effect.",tags:[],type:{name:"void"},typeParams:[]},{id:344,name:"preRender",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/lut.ts#L90",comment:"Prepare this effect for render.",tags:[],type:{name:"void"},typeParams:[]},{id:333,name:"release",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/lut.ts#L53",comment:"Delete all webgl objects related to this effect.",tags:[],type:{name:"void"},typeParams:[]},{id:346,name:"resize",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/lut.ts#L91",comment:"Resize this effect.",tags:[],type:{name:"void"},params:[{id:348,name:"w",type:{name:"number"},tags:[],comment:"The new width"},{id:349,name:"h",type:{name:"number"},tags:[],comment:"The new height"}],typeParams:[]},{id:341,name:"setupProgram",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/lut.ts#L80",comment:"Setup the given program for this effect.",tags:[],type:{name:"void"},params:[{id:343,name:"prg",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[],comment:"The program to setup"}],typeParams:[]}],extends:[{name:"BaseEffect",lib:"nanogl-post",kind:"Class",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/base-effect.ts#L21"}],implements:null},{id:480,name:"Post",originalName:"default",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/post.ts#L18",comment:"This class manages post-processing effects.",tags:[],constructors:[{id:481,name:"Post",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/post.ts#L87",tags:[],type:{name:"Post",lib:"nanogl-post",kind:"Class",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/post.ts#L18"},params:[{id:483,name:"gl",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[],comment:"The webgl context this Post belongs to"},{id:484,name:"mipmap",type:{name:"boolean"},tags:["optional"],comment:"Whether to generate mipmaps or not",optional:!0,defaultValue:"false"}],typeParams:[]}],properties:[{id:486,name:"_effects",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/post.ts#L23",comment:"The list of post-processing effects",type:{name:"BaseEffect",lib:"nanogl-post",kind:"Class",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/base-effect.ts#L21",isArray:!0},tags:[]},{id:487,name:"_flags",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/post.ts#L28",comment:`The dependencies the effects need :
depth pass, linear filtering`,type:{name:"EffectDependency",lib:"nanogl-post",kind:"Enumeration",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/base-effect.ts#L5"},tags:[]},{id:488,name:"_shaderInvalid",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/post.ts#L30",comment:"Whether the program is invalid or not",type:{name:"boolean"},tags:[]},{id:492,name:"bufferHeight",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/post.ts#L39",comment:"The height of the buffer",type:{name:"number"},tags:[]},{id:491,name:"bufferWidth",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/post.ts#L37",comment:"The width of the buffer",type:{name:"number"},tags:[]},{id:499,name:"color_buffer_float",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/post.ts#L70",comment:`The EXT_color_buffer_float webgl extension :
adds the ability to render a variety of floating point formats`,type:{name:"any"},tags:[]},{id:493,name:"enabled",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/post.ts#L42",comment:"Whether the post-processing is enabled or not",type:{name:"boolean"},tags:[]},{id:495,name:"float_texture_ext",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/post.ts#L50",comment:`The OES_texture_float webgl extension :
exposes floating-point pixel types for textures`,type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"OES_texture_float"}]},tags:[]},{id:497,name:"float_texture_ext_l",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/post.ts#L60",comment:`The OES_texture_half_float_linear webgl extension :
allows linear filtering with half floating-point pixel types for textures`,type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"OES_texture_half_float_linear"}]},tags:[]},{id:504,name:"fsPlane",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/post.ts#L81",comment:"The full-screen quad used to render all effects",type:{name:"ArrayBuffer",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/arraybuffer.ts#L34"},tags:[]},{id:485,name:"gl",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/post.ts#L20",comment:"The webgl context this Post belongs to",type:{name:"GLContext",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/types.ts#L2"},tags:[]},{id:496,name:"halfFloat",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/post.ts#L55",comment:`The OES_texture_half_float webgl extension :
adds texture formats with 16- and 32-bit floating-point components`,type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"OES_texture_half_float"}]},tags:[]},{id:498,name:"halfFloat_l",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/post.ts#L65",comment:`The OES_texture_float_linear webgl extension :
allows linear filtering with floating-point pixel types for textures`,type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"OES_texture_float_linear"}]},tags:[]},{id:500,name:"hasDepthTexture",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/post.ts#L72",comment:"Whether a texture with depth pixel format can be created or not",type:{name:"boolean"},tags:[]},{id:502,name:"mainColor",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/post.ts#L77",comment:"The color texture of the main FBO",type:{name:"Texture",lib:"nanogl",kind:"Type alias",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/texture-base.ts#L18"},tags:[]},{id:501,name:"mainFbo",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/post.ts#L75",comment:"The main framebuffer",type:{name:"Fbo",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L105"},tags:[]},{id:494,name:"mipmap",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/post.ts#L44",comment:"Whether to generate mipmaps or not",type:{name:"boolean"},tags:[]},{id:503,name:"prg",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/post.ts#L79",comment:"The program used to render all effects",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[]},{id:490,name:"renderHeight",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/post.ts#L35",comment:"The height to render",type:{name:"number"},tags:[]},{id:489,name:"renderWidth",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/post.ts#L33",comment:"The width to render",type:{name:"number"},tags:[]}],accessors:[],methods:[{id:507,name:"_needDepth",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/post.ts#L160",comment:"Know whether the effects need a depth pass or not.",tags:[],type:{name:"boolean"},typeParams:[]},{id:509,name:"_needLinear",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/post.ts#L167",comment:"Know whether the effects need linear filtering or not.",tags:[],type:{name:"boolean"},typeParams:[]},{id:513,name:"add",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/post.ts#L236",comment:"Add a post-processing effect to the list.",tags:[],type:{name:"void"},params:[{id:515,name:"effect",type:{name:"BaseEffect",lib:"nanogl-post",kind:"Class",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/base-effect.ts#L21"},tags:[],comment:"The effect to add"}],typeParams:[]},{id:529,name:"bindColor",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/post.ts#L339",comment:`Bind the main framebuffer (or the default FBO if
post-processing is not enabled) and prepare the viewport.

Call this method before rendering the scene.`,tags:[],type:{name:"void"},typeParams:[]},{id:538,name:"buildProgram",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/post.ts#L455",comment:"Build the program used to render all the effects.",tags:[],type:{name:"void"},typeParams:[]},{id:505,name:"dispose",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/post.ts#L151",comment:"Delete all webgl objects related to this Post.",tags:[],type:{name:"void"},typeParams:[]},{id:534,name:"fillScreen",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/post.ts#L438",comment:"Draw the full-screen quad with the given program.",tags:[],type:{name:"void"},params:[{id:536,name:"prg",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[],comment:"The program to use"},{id:537,name:"fullframe",type:{name:"boolean"},tags:["optional"],comment:"Whether to render the full frame or not",optional:!0,defaultValue:"false"}],typeParams:[]},{id:511,name:"genFbo",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/post.ts#L174",comment:"Generate a framebuffer that can be used to render the effects.",tags:[],type:{name:"Fbo",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L105"},typeParams:[]},{id:527,name:"needDepthPass",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/post.ts#L314",comment:"Know whether this Post needs a depth pass or not.",tags:[],type:{name:"boolean"},typeParams:[]},{id:523,name:"preRender",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/post.ts#L293",comment:"Prepare this post for render.",tags:[],type:{name:"void"},params:[{id:525,name:"w",type:{name:"number"},tags:[],comment:"The width to render"},{id:526,name:"h",type:{name:"number"},tags:[],comment:"The height to render"}],typeParams:[]},{id:516,name:"remove",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/post.ts#L250",comment:"Remove a post-processing effect from the list.",tags:[],type:{name:"void"},params:[{id:518,name:"effect",type:{name:"BaseEffect",lib:"nanogl-post",kind:"Class",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/base-effect.ts#L21"},tags:[],comment:"The effect to remove"}],typeParams:[]},{id:531,name:"render",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/post.ts#L367",comment:`Render the effects.

**Important :** The scene should be rendered to the main FBO before calling this method.
You can use [bindColor](/api/nanogl-post/classes/Post#item-529) before rendering the scene to do so.`,tags:[],type:{name:"void"},params:[{id:533,name:"toFbo",type:{name:"Fbo",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/fbo.ts#L105"},tags:["optional"],comment:"The framebuffer to render to. If not specified, render to the screen.",optional:!0}],typeParams:[]},{id:519,name:"resize",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/post.ts#L275",comment:"Resize the buffers and effects.",tags:[],type:{name:"void"},params:[{id:521,name:"w",type:{name:"number"},tags:[],comment:"The new width"},{id:522,name:"h",type:{name:"number"},tags:[],comment:"The new height"}],typeParams:[]}],extends:null,implements:null},{id:356,name:"Reinhard",originalName:"default",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/reinhard.ts#L10",comment:"This class implements Reinhard tone mapping.",tags:[],constructors:[{id:357,name:"Reinhard",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/reinhard.ts#L14",tags:[],type:{name:"Reinhard",lib:"nanogl-post",kind:"Class",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/reinhard.ts#L10"},typeParams:[]}],properties:[{id:359,name:"_code",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/reinhard.ts#L12",comment:"The shader code for this effect",type:{name:"string"},tags:[]}],accessors:[],methods:[{id:360,name:"genCode",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/reinhard.ts#L19",comment:`Add the shader pre-code (uniforms, attributes, functions, etc.)
& code for this effect to the given lists.`,tags:[],type:{name:"void"},params:[{id:362,name:"precode",type:{name:"string",isArray:!0},tags:[],comment:"The list of shader pre-code to add to"},{id:363,name:"code",type:{name:"string",isArray:!0},tags:[],comment:"The list of shader code to add to"}],typeParams:[]},{id:364,name:"init",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/reinhard.ts#L23",comment:"Initialize the effect.",tags:[],type:{name:"void"},typeParams:[]},{id:368,name:"preRender",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/reinhard.ts#L25",comment:"Prepare this effect for render.",tags:[],type:{name:"void"},typeParams:[]},{id:366,name:"release",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/reinhard.ts#L24",comment:"Delete all webgl objects related to this effect.",tags:[],type:{name:"void"},typeParams:[]},{id:373,name:"resize",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/reinhard.ts#L27",comment:"Resize this effect.",tags:[],type:{name:"void"},params:[{id:375,name:"w",type:{name:"number"},tags:[],comment:"The new width"},{id:376,name:"h",type:{name:"number"},tags:[],comment:"The new height"}],typeParams:[]},{id:370,name:"setupProgram",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/reinhard.ts#L26",comment:"Setup the given program for this effect.",tags:[],type:{name:"void"},params:[{id:372,name:"prg",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[],comment:"The program to setup"}],typeParams:[]}],extends:[{name:"BaseEffect",lib:"nanogl-post",kind:"Class",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/base-effect.ts#L21"}],implements:null},{id:383,name:"Saturation",originalName:"default",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/saturation.ts#L10",comment:"This class implements a saturation effect.",tags:[],constructors:[{id:384,name:"Saturation",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/saturation.ts#L30",tags:[],type:{name:"Saturation",lib:"nanogl-post",kind:"Class",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/saturation.ts#L10"},params:[{id:386,name:"amount",type:{name:"number"},tags:[],comment:"The saturation amount"}],typeParams:[]}],properties:[{id:390,name:"_code",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/saturation.ts#L25",comment:"The shader code for this effect",type:{name:"string"},tags:["private"]},{id:389,name:"_preCode",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/saturation.ts#L23",comment:`The shader pre-code (uniforms, attributes, functions, etc.)
for this effect`,type:{name:"string"},tags:["private"]},{id:388,name:"amount",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/saturation.ts#L17",comment:"The saturation amount",type:{name:"number"},tags:[]},{id:387,name:"tint",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/saturation.ts#L15",comment:"The tint color for the saturation",defaultValue:"[1, 1, 1]",type:{name:"number",isArray:!0},tags:[]}],accessors:[],methods:[{id:391,name:"genCode",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/saturation.ts#L41",comment:`Add the shader pre-code (uniforms, attributes, functions, etc.)
& code for this effect to the given lists.`,tags:[],type:{name:"void"},params:[{id:393,name:"precode",type:{name:"string",isArray:!0},tags:[],comment:"The list of shader pre-code to add to"},{id:394,name:"code",type:{name:"string",isArray:!0},tags:[],comment:"The list of shader code to add to"}],typeParams:[]},{id:398,name:"init",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/saturation.ts#L59",comment:"Initialize the effect.",tags:[],type:{name:"void"},typeParams:[]},{id:402,name:"preRender",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/saturation.ts#L61",comment:"Prepare this effect for render.",tags:[],type:{name:"void"},typeParams:[]},{id:400,name:"release",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/saturation.ts#L60",comment:"Delete all webgl objects related to this effect.",tags:[],type:{name:"void"},typeParams:[]},{id:404,name:"resize",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/saturation.ts#L62",comment:"Resize this effect.",tags:[],type:{name:"void"},params:[{id:406,name:"w",type:{name:"number"},tags:[],comment:"The new width"},{id:407,name:"h",type:{name:"number"},tags:[],comment:"The new height"}],typeParams:[]},{id:395,name:"setupProgram",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/saturation.ts#L47",comment:"Setup the given program for this effect.",tags:[],type:{name:"void"},params:[{id:397,name:"prg",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[],comment:"The program to setup"}],typeParams:[]}],extends:[{name:"BaseEffect",lib:"nanogl-post",kind:"Class",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/base-effect.ts#L21"}],implements:null},{id:414,name:"Sharpen",originalName:"default",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/sharpen.ts#L10",comment:"This class implements a sharpness effect.",tags:[],constructors:[{id:415,name:"Sharpen",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/sharpen.ts#L28",tags:[],type:{name:"Sharpen",lib:"nanogl-post",kind:"Class",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/sharpen.ts#L10"},params:[{id:417,name:"amount",type:{name:"number"},tags:[],comment:"The sharpness amount"},{id:418,name:"limit",type:{name:"number"},tags:[],comment:"The sharpness limit"}],typeParams:[]}],properties:[{id:422,name:"_code",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/sharpen.ts#L22",comment:"The shader code for this effect",type:{name:"string"},tags:[]},{id:421,name:"_preCode",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/sharpen.ts#L20",comment:`The shader pre-code (uniforms, attributes, functions, etc.)
for this effect`,type:{name:"string"},tags:[]},{id:419,name:"amount",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/sharpen.ts#L13",comment:"The sharpness amount",type:{name:"number"},tags:[]},{id:420,name:"limit",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/sharpen.ts#L15",comment:"The sharpness limit",type:{name:"number"},tags:[]}],accessors:[],methods:[{id:423,name:"genCode",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/sharpen.ts#L39",comment:`Add the shader pre-code (uniforms, attributes, functions, etc.)
& code for this effect to the given lists.`,tags:[],type:{name:"void"},params:[{id:425,name:"precode",type:{name:"string",isArray:!0},tags:[],comment:"The list of shader pre-code to add to"},{id:426,name:"code",type:{name:"string",isArray:!0},tags:[],comment:"The list of shader code to add to"}],typeParams:[]},{id:430,name:"init",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/sharpen.ts#L64",comment:"Initialize the effect.",tags:[],type:{name:"void"},typeParams:[]},{id:434,name:"preRender",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/sharpen.ts#L66",comment:"Prepare this effect for render.",tags:[],type:{name:"void"},typeParams:[]},{id:432,name:"release",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/sharpen.ts#L65",comment:"Delete all webgl objects related to this effect.",tags:[],type:{name:"void"},typeParams:[]},{id:436,name:"resize",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/sharpen.ts#L67",comment:"Resize this effect.",tags:[],type:{name:"void"},params:[{id:438,name:"w",type:{name:"number"},tags:[],comment:"The new width"},{id:439,name:"h",type:{name:"number"},tags:[],comment:"The new height"}],typeParams:[]},{id:427,name:"setupProgram",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/sharpen.ts#L45",comment:"Setup the given program for this effect.",tags:[],type:{name:"void"},params:[{id:429,name:"prg",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[],comment:"The program to setup"}],typeParams:[]}],extends:[{name:"BaseEffect",lib:"nanogl-post",kind:"Class",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/base-effect.ts#L21"}],implements:null},{id:446,name:"Vignette",originalName:"default",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/vignette.ts#L10",comment:"This class implements a vignette effect.",tags:[],constructors:[{id:447,name:"Vignette",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/vignette.ts#L33",tags:[],type:{name:"Vignette",lib:"nanogl-post",kind:"Class",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/vignette.ts#L10"},params:[{id:449,name:"color",type:{name:"ArrayLike",data:{arguments:[{name:"number"}]}},tags:[],comment:"The vignette color"},{id:450,name:"strength",type:{name:"number"},tags:[],comment:"The vignette strength"},{id:451,name:"curve",type:{name:"number"},tags:[],comment:"How rounded the vignette is (between `0` & `1`)"}],typeParams:[]}],properties:[{id:456,name:"_code",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/vignette.ts#L26",comment:"The shader code for this effect",type:{name:"string"},tags:["private"]},{id:455,name:"_preCode",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/vignette.ts#L24",comment:`The shader pre-code (uniforms, attributes, functions, etc.)
for this effect`,type:{name:"string"},tags:["private"]},{id:452,name:"color",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/vignette.ts#L13",comment:"The vignette color",type:{name:"ArrayLike",data:{arguments:[{name:"number"}]}},tags:[]},{id:453,name:"curve",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/vignette.ts#L16",comment:"How rounded the vignette is",type:{name:"number"},tags:[]},{id:454,name:"strength",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/vignette.ts#L18",comment:"The vignette strength",type:{name:"number"},tags:[]}],accessors:[],methods:[{id:457,name:"genCode",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/vignette.ts#L45",comment:`Add the shader pre-code (uniforms, attributes, functions, etc.)
& code for this effect to the given lists.`,tags:[],type:{name:"void"},params:[{id:459,name:"precode",type:{name:"string",isArray:!0},tags:[],comment:"The list of shader pre-code to add to"},{id:460,name:"code",type:{name:"string",isArray:!0},tags:[],comment:"The list of shader code to add to"}],typeParams:[]},{id:464,name:"init",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/vignette.ts#L78",comment:"Initialize the effect.",tags:[],type:{name:"void"},typeParams:[]},{id:468,name:"preRender",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/vignette.ts#L80",comment:"Prepare this effect for render.",tags:[],type:{name:"void"},typeParams:[]},{id:466,name:"release",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/vignette.ts#L79",comment:"Delete all webgl objects related to this effect.",tags:[],type:{name:"void"},typeParams:[]},{id:470,name:"resize",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/vignette.ts#L81",comment:"Resize this effect.",tags:[],type:{name:"void"},params:[{id:472,name:"w",type:{name:"number"},tags:[],comment:"The new width"},{id:473,name:"h",type:{name:"number"},tags:[],comment:"The new height"}],typeParams:[]},{id:461,name:"setupProgram",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/vignette.ts#L51",comment:"Setup the given program for this effect.",tags:[],type:{name:"void"},params:[{id:463,name:"prg",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[],comment:"The program to setup"}],typeParams:[]}],extends:[{name:"BaseEffect",lib:"nanogl-post",kind:"Class",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/base-effect.ts#L21"}],implements:null}],functions:[],interfaces:[],enumerations:[{id:2,name:"EffectDependency",source:"https://github.com/evanmartiin/nanogl-post/blob/2918dd7/src/effects/base-effect.ts#L5",tags:[],comment:"The dependencies an effect needs.",members:[{id:3,name:"NONE",comment:"No dependency",tags:[],type:{name:"0",data:{literalType:"number"}}},{id:4,name:"DEPTH",comment:"The effect needs the scene's depth texture",tags:[],type:{name:"2",data:{literalType:"number"}}},{id:5,name:"LINEAR",comment:"The effect needs a linear sampler for the input color",tags:[],type:{name:"4",data:{literalType:"number"}}}]}],types:[]},{name:"nanogl-state",description:"Efficient webgl state management",classes:[{id:2,name:"ConfigStack",originalName:"default",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/ConfigStack.ts#L26",comment:"This class manages the GLConfig stack.",tags:[],constructors:[{id:3,name:"ConfigStack",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/ConfigStack.ts#L62",tags:[],type:{name:"ConfigStack",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/ConfigStack.ts#L26"},typeParams:[]}],properties:[{id:9,name:"_headPos",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/ConfigStack.ts#L55",comment:'The position in the stack of the last "commit"',type:{name:"number"},tags:["private"]},{id:8,name:"_ptr",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/ConfigStack.ts#L50",comment:"The current position in the stack",type:{name:"number"},tags:["private"]},{id:6,name:"_sets",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/ConfigStack.ts#L39",comment:"The list of the bitmask set of all the configs in the stack",type:{name:"Uint32Array"},tags:["private"]},{id:7,name:"_size",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/ConfigStack.ts#L45",comment:"The allocated size of the stack",type:{name:"number"},tags:["private"]},{id:5,name:"_stack",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/ConfigStack.ts#L33",comment:`The values of the configs at each position in the stack.
The stack is a 2d array where each row is a config.`,type:{name:"Uint16Array"},tags:["private"]},{id:10,name:"_wcfg",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/ConfigStack.ts#L60",comment:'The position in the stack of the last "commit"',type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},tags:["private","readonly"]}],accessors:[],methods:[{id:28,name:"_grow",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/ConfigStack.ts#L225",comment:"Grow the allocated size of stack.",tags:["private"],type:{name:"void"},typeParams:[]},{id:21,name:"commit",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/ConfigStack.ts#L181",comment:"Copy the current stack state to the given patch config and mark HEAD as the current position.",tags:[],type:{name:"void"},params:[{id:23,name:"patch",type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},tags:[],comment:"The config to copy to"}],typeParams:[]},{id:24,name:"copyConfig",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/ConfigStack.ts#L209",comment:"Copy a row in the stack to the given config.\n\nThis will copy the row from `_stack` to the config `_dat`\nand the row from `_set` to the config `_set`.",tags:[],type:{name:"void"},params:[{id:26,name:"at",type:{name:"number"},tags:[],comment:"The position in the stack to copy from"},{id:27,name:"cfg",type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},tags:[],comment:"The config to copy to"}],typeParams:[]},{id:19,name:"flush",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/ConfigStack.ts#L171",comment:"Remove all configs from the stack.",tags:[],type:{name:"void"},typeParams:[]},{id:11,name:"initFromGL",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/ConfigStack.ts#L81",comment:`Setup initial config from to match the config the
given webgl context is currently in, and set the
first config of the stack to this config.`,tags:[],type:{name:"void"},params:[{id:13,name:"gl",type:{name:"WebGLRenderingContext"},tags:[],comment:"The webgl context to match"}],typeParams:[]},{id:17,name:"pop",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/ConfigStack.ts#L158",comment:`Remove the last config from the stack.

If the HEAD position is ahead of the current position in the stack,
the current position config set is unioned with the removed config set.`,tags:[],type:{name:"void"},typeParams:[]},{id:14,name:"push",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/ConfigStack.ts#L120",comment:`Add a config to the stack.

The input config is applied to the previous config in the stack,
and the resulting config is added to the stack.`,example:`If the previous config in the stack is:

\`\`\`js
[A, B, C, D, E, F, G] // previous row in _stack
[1, 0, 0, 1, 1, 1, 0] // previous row in _sets
\`\`\`

And the input config is :

\`\`\`js
[?, ?, X, D, E, ?, ?] // cfg _dat
[0, 0, 1, 1, 1, 0, 0] // cfg _set
\`\`\`

Then the new config in the stack is:

\`\`\`js
[A, B, X, D, E, F, G] // new row in _stack
[1, 0, 1, 1, 1, 1, 0] // new row in _sets
\`\`\``,tags:[],type:{name:"void"},params:[{id:16,name:"cfg",type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},tags:[],comment:"The config to add to the stack"}],typeParams:[]}],extends:null,implements:null},{id:117,name:"GLConfig",originalName:"default",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377",comment:"This class manages configs for the webgl context.",tags:[],constructors:[{id:124,name:"GLConfig",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L401",tags:[],type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},typeParams:[]}],properties:[{id:126,name:"_dat",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L395",comment:"The values of the config. Each value is stored in a specific slot of the array.",type:{name:"Uint16Array"},tags:["readonly"]},{id:127,name:"_set",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L399",comment:"The bitmask set of the config. It indicates which values are set.",type:{name:"number"},tags:[]}],accessors:[],methods:[{id:162,name:"blendColor",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L977",comment:"Set blending color for this config.\n\nThe params values should be floats between `0` and `1`.",tags:[],type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},params:[{id:164,name:"r",type:{name:"number"},tags:[],comment:"The value for the red component"},{id:165,name:"g",type:{name:"number"},tags:[],comment:"The value for the green component"},{id:166,name:"b",type:{name:"number"},tags:[],comment:"The value for the blue component"},{id:167,name:"a",type:{name:"number"},tags:[],comment:"The value for the alpha component"}],typeParams:[]},{id:155,name:"blendEquation",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L943",comment:"Set the blending equation for this config.\n\nThe possible params values are :\n- `GL_FUNC_ADD`\n- `GL_FUNC_SUBTRACT`\n- `GL_FUNC_REVERSE_SUBTRACT`",tags:[],type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},params:[{id:157,name:"eq",type:{name:"number"},tags:[],comment:"The equation to use"}],typeParams:[]},{id:158,name:"blendEquationSeparate",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L960",comment:"Set the blending equation for RGB and alpha components separately for this config.\n\nThe possible params values are :\n- `GL_FUNC_ADD`\n- `GL_FUNC_SUBTRACT`\n- `GL_FUNC_REVERSE_SUBTRACT`",tags:[],type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},params:[{id:160,name:"rgbEq",type:{name:"number"},tags:[],comment:"The equation to use for the RGB components"},{id:161,name:"alphaEq",type:{name:"number"},tags:[],comment:"The equation to use for the alpha component"}],typeParams:[]},{id:145,name:"blendFunc",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L896",comment:"Set the blending function for this config.\n\nThe possible params values are :\n- `GL_ZERO`\n- `GL_ONE`\n- `GL_SRC_COLOR`\n- `GL_ONE_MINUS_SRC_COLOR`\n- `GL_SRC_ALPHA`\n- `GL_ONE_MINUS_SRC_ALPHA`\n- `GL_DST_ALPHA`\n- `GL_ONE_MINUS_DST_ALPHA`\n- `GL_DST_COLOR`\n- `GL_ONE_MINUS_DST_COLOR`\n- `GL_SRC_ALPHA_SATURATE`",tags:[],type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},params:[{id:147,name:"src",type:{name:"number"},tags:[],comment:"The multiplier for the source blending factors"},{id:148,name:"dst",type:{name:"number"},tags:[],comment:"The multiplier for the destination blending factors"}],typeParams:[]},{id:149,name:"blendFuncSeparate",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L924",comment:"Set the blending function for RGB and alpha components separately for this config.\n\nThe possible params values are :\n- `GL_ZERO`\n- `GL_ONE`\n- `GL_SRC_COLOR`\n- `GL_ONE_MINUS_SRC_COLOR`\n- `GL_SRC_ALPHA`\n- `GL_ONE_MINUS_SRC_ALPHA`\n- `GL_DST_ALPHA`\n- `GL_ONE_MINUS_DST_ALPHA`\n- `GL_DST_COLOR`\n- `GL_ONE_MINUS_DST_COLOR`\n- `GL_SRC_ALPHA_SATURATE`",tags:[],type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},params:[{id:151,name:"srcRgb",type:{name:"number"},tags:[],comment:"The multiplier for the RGB source blending factors"},{id:152,name:"dstRgb",type:{name:"number"},tags:[],comment:"The multiplier for the RGB destination blending factors"},{id:153,name:"srcAlpha",type:{name:"number"},tags:[],comment:"The multiplier for the alpha source blending factor"},{id:154,name:"dstAlpha",type:{name:"number"},tags:[],comment:"The multiplier for the alpha destination blending factor"}],typeParams:[]},{id:130,name:"clone",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L419",comment:"Returns a clone of this config.",tags:[],type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},typeParams:[]},{id:215,name:"colorMask",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L1178",comment:"Set which color components to enable or to disable for this config.",tags:[],type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},params:[{id:217,name:"r",type:{name:"boolean"},tags:[],comment:"Whether to enable the red component or not"},{id:218,name:"g",type:{name:"boolean"},tags:[],comment:"Whether to enable the green component or not"},{id:219,name:"b",type:{name:"boolean"},tags:[],comment:"Whether to enable the blue component or not"},{id:220,name:"a",type:{name:"boolean"},tags:[],comment:"Whether to enable the alpha component or not"}],typeParams:[]},{id:181,name:"cullFace",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L1058",comment:"Set the cull face mode for this config.\n\nThe possible params values are :\n- `GL_FRONT`\n- `GL_BACK`\n- `GL_FRONT_AND_BACK`",tags:[],type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},params:[{id:183,name:"mode",type:{name:"number"},tags:[],comment:"The mode to use"}],typeParams:[]},{id:168,name:"depthFunc",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L1003",comment:"Set the depth function for this config.\n\nThe possible params values are :\n- `GL_NEVER`\n- `GL_LESS`\n- `GL_EQUAL`\n- `GL_LEQUAL`\n- `GL_GREATER`\n- `GL_NOTEQUAL`\n- `GL_GEQUAL`\n- `GL_ALWAYS`",tags:[],type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},params:[{id:170,name:"func",type:{name:"number"},tags:[],comment:"The depth function to use"}],typeParams:[]},{id:212,name:"depthMask",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L1164",comment:"Enable or disable writing into the depth buffer for this config.",tags:[],type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},params:[{id:214,name:"flag",type:{name:"boolean"},tags:["optional"],comment:"Whether to enable the depth mask or not",optional:!0}],typeParams:[]},{id:174,name:"depthRange",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L1028",comment:"Set the depth range for this config.\n\nThe params values should be floats between `0` and `1`.",tags:[],type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},params:[{id:176,name:"near",type:{name:"number"},tags:[],comment:"The near value to use"},{id:177,name:"far",type:{name:"number"},tags:[],comment:"The far value to use"}],typeParams:[]},{id:142,name:"enableBlend",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L871",comment:"Enable or disable blending for this config.",tags:[],type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},params:[{id:144,name:"flag",type:{name:"boolean"},tags:["optional"],comment:"Whether to enable blending or not",optional:!0,defaultValue:"true"}],typeParams:[]},{id:184,name:"enableCullface",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L1069",comment:"Enable or disable culling for this config.",tags:[],type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},params:[{id:186,name:"flag",type:{name:"boolean"},tags:["optional"],comment:"Whether to enable culling or not",optional:!0,defaultValue:"true"}],typeParams:[]},{id:171,name:"enableDepthTest",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L1014",comment:"Enable or disable depth testing for this config.",tags:[],type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},params:[{id:173,name:"flag",type:{name:"boolean"},tags:["optional"],comment:"Whether to enable depth testing or not",optional:!0,defaultValue:"true"}],typeParams:[]},{id:209,name:"enableDither",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L1153",comment:"Enable or disable dithering for this config.",tags:[],type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},params:[{id:211,name:"flag",type:{name:"boolean"},tags:["optional"],comment:"Whether to enable dithering or not",optional:!0,defaultValue:"true"}],typeParams:[]},{id:191,name:"enablePolygonOffset",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L1095",comment:"Enable or disable polygon offset for this config.",tags:[],type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},params:[{id:193,name:"flag",type:{name:"boolean"},tags:["optional"],comment:"Whether to enable polygon offset or not",optional:!0,defaultValue:"true"}],typeParams:[]},{id:194,name:"enableScissor",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L1108",comment:"Enable or disable the scissor test for this config.",tags:[],type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},params:[{id:196,name:"flag",type:{name:"boolean"},tags:["optional"],comment:"Whether to enable the scissor test or not",optional:!0,defaultValue:"true"}],typeParams:[]},{id:224,name:"enableStencil",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L1226",comment:"Enable or disable stencil testing for this config.",tags:[],type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},params:[{id:226,name:"flag",type:{name:"boolean"},tags:["optional"],comment:"Whether to enable stencil testing or not",optional:!0,defaultValue:"true"}],typeParams:[]},{id:139,name:"fromGL",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L672",comment:`Setup this config to match the config the
given webgl context is currently in.`,tags:[],type:{name:"void"},params:[{id:141,name:"gl",type:{name:"WebGLRenderingContext"},tags:[],comment:"The webgl context to match"}],typeParams:[]},{id:221,name:"frontFace",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L1215",comment:"Set facing direction for this config.\n\nThe possible params values are :\n- `GL_CW`\n- `GL_CCW`",tags:[],type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},params:[{id:223,name:"dir",type:{name:"number"},tags:[],comment:"The winding orientation to use"}],typeParams:[]},{id:178,name:"lineWidth",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L1040",comment:"Set the line width of rasterized lines for this config.",tags:[],type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},params:[{id:180,name:"w",type:{name:"number"},tags:[],comment:"The width to use"}],typeParams:[]},{id:132,name:"patch",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L437",comment:`Apply this config to the input config.

It creates a new config that represents the difference
between the input config and this config.
If applied to a webgl context matching the input config,
the webgl context will now match this config.`,tags:[],type:{name:"void"},params:[{id:134,name:"cfg",type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},tags:[],comment:"The input config to apply this config to"},{id:135,name:"out",type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},tags:[],comment:"The config to store the difference config in"}],typeParams:[]},{id:187,name:"polygonOffset",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L1083",comment:"Set the polygon offset factor & units for this config.",tags:[],type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},params:[{id:189,name:"polyOffsetFactor",type:{name:"number"},tags:[],comment:"The scale factor for the variable depth offset for each polygon"},{id:190,name:"polyOffsetUnits",type:{name:"number"},tags:[],comment:"The multiplier by which an implementation-specific value is multiplied with to create a constant depth offset"}],typeParams:[]},{id:197,name:"scissor",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L1122",comment:"Set the scissor box for this config.",tags:[],type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},params:[{id:199,name:"x",type:{name:"number"},tags:[],comment:"The x coordinate of the lower left corner of the scissor box"},{id:200,name:"y",type:{name:"number"},tags:[],comment:"The y coordinate of the lower left corner of the scissor box"},{id:201,name:"w",type:{name:"number"},tags:[],comment:"The width of the scissor box"},{id:202,name:"h",type:{name:"number"},tags:[],comment:"The height of the scissor box"}],typeParams:[]},{id:136,name:"setupGL",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L475",comment:"Apply this config to a given webgl context.",tags:[],type:{name:"void"},params:[{id:138,name:"gl",type:{name:"WebGLRenderingContext"},tags:[],comment:"The webgl context to apply this config to"}],typeParams:[]},{id:227,name:"stencilFunc",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L1249",comment:"Set the stencil function for this config.\n\nThe possible func values are :\n- `GL_NEVER`\n- `GL_LESS`\n- `GL_EQUAL`\n- `GL_LEQUAL`\n- `GL_GREATER`\n- `GL_NOTEQUAL`\n- `GL_GEQUAL`\n- `GL_ALWAYS`",tags:[],type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},params:[{id:229,name:"func",type:{name:"number"},tags:[],comment:"The stencil test function to use"},{id:230,name:"ref",type:{name:"number"},tags:[],comment:"The reference value for the stencil test"},{id:231,name:"mask",type:{name:"number"},tags:[],comment:"The mask to use to `AND` the reference value and the stored stencil value when the test is done"}],typeParams:[]},{id:240,name:"stencilFuncSeparate",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L1314",comment:"Set the stencil function separatly for the front and back stencil for this config.\n\nThe possible func values are :\n- `GL_NEVER`\n- `GL_LESS`\n- `GL_EQUAL`\n- `GL_LEQUAL`\n- `GL_GREATER`\n- `GL_NOTEQUAL`\n- `GL_GEQUAL`\n- `GL_ALWAYS`",tags:[],type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},params:[{id:242,name:"func",type:{name:"number"},tags:[],comment:"The stencil test function to use for the front stencil"},{id:243,name:"ref",type:{name:"number"},tags:[],comment:"The reference value for the front stencil test"},{id:244,name:"mask",type:{name:"number"},tags:[],comment:"The mask to use to `AND` the reference value and the stored stencil value when the test is done for the front stencil"},{id:245,name:"funcback",type:{name:"number"},tags:[],comment:"The stencil test function to use for the back stencil"},{id:246,name:"refback",type:{name:"number"},tags:[],comment:"The reference value for the back stencil test"},{id:247,name:"maskback",type:{name:"number"},tags:[],comment:"The mask to use to `AND` the reference value and the stored stencil value when the test is done for the back stencil"}],typeParams:[]},{id:237,name:"stencilMask",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L1287",comment:"Set the stencil mask for this config.",tags:[],type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},params:[{id:239,name:"mask",type:{name:"number"},tags:[],comment:"The bit mask to enable or disable writing in the stencil planes"}],typeParams:[]},{id:256,name:"stencilMaskSeparate",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L1364",comment:"Set the stencil mask separatly for the front and back stencil for this config.",tags:[],type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},params:[{id:258,name:"mask",type:{name:"number"},tags:[],comment:"The bit mask to enable or disable writing in the stencil planes for the front stencil"},{id:259,name:"maskback",type:{name:"number"},tags:[],comment:"The bit mask to enable or disable writing in the stencil planes for the back stencil"}],typeParams:[]},{id:232,name:"stencilOp",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L1274",comment:"Set the stencil test actions for this config.\n\nThe possible params values are :\n- `GL_KEEP`\n- `GL_ZERO`\n- `GL_REPLACE`\n- `GL_INCR`\n- `GL_INCR_WRAP`\n- `GL_DECR`\n- `GL_DECR_WRAP`\n- `GL_INVERT`",tags:[],type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},params:[{id:234,name:"sfail",type:{name:"number"},tags:[],comment:"The function to use when the stencil test fails"},{id:235,name:"dpfail",type:{name:"number"},tags:[],comment:"The function to use when the stencil test passes, but the depth test fails"},{id:236,name:"dppass",type:{name:"number"},tags:[],comment:"The function to use when both the stencil test and the depth test pass"}],typeParams:[]},{id:248,name:"stencilOpSeparate",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L1346",comment:"Set the stencil test actions separatly for the front and back stencil for this config.\n\nThe possible params values are :\n- `GL_KEEP`\n- `GL_ZERO`\n- `GL_REPLACE`\n- `GL_INCR`\n- `GL_INCR_WRAP`\n- `GL_DECR`\n- `GL_DECR_WRAP`\n- `GL_INVERT`",tags:[],type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},params:[{id:250,name:"sfail",type:{name:"number"},tags:[],comment:"The function to use when the front stencil test fails"},{id:251,name:"dpfail",type:{name:"number"},tags:[],comment:"The function to use when the front stencil test passes, but the depth test fails"},{id:252,name:"dppass",type:{name:"number"},tags:[],comment:"The function to use when both the front stencil test and the depth test pass"},{id:253,name:"sfailback",type:{name:"number"},tags:[],comment:"The function to use when the back stencil test fails"},{id:254,name:"dpfailback",type:{name:"number"},tags:[],comment:"The function to use when the back stencil test passes, but the depth test fails"},{id:255,name:"dppassback",type:{name:"number"},tags:[],comment:"The function to use when both the back stencil test and the depth test pass"}],typeParams:[]},{id:128,name:"toDefault",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L411",comment:"Set this config to the default config.",tags:[],type:{name:"void"},typeParams:[]},{id:203,name:"viewport",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L1139",comment:"Set the viewport for this config.",tags:[],type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},params:[{id:205,name:"x",type:{name:"number"},tags:[],comment:"The x coordinate of the lower left corner of the viewport origin"},{id:206,name:"y",type:{name:"number"},tags:[],comment:"The y coordinate of the lower left corner of the viewport origin"},{id:207,name:"w",type:{name:"number"},tags:[],comment:"The width of the viewport"},{id:208,name:"h",type:{name:"number"},tags:[],comment:"The height of the viewport"}],typeParams:[]},{id:121,name:"decodeHalf",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L388",comment:"Decode Uint16 to float32",tags:["static"],type:{name:"number"},params:[{id:123,name:"u16",type:{name:"number"},tags:[]}],typeParams:[]},{id:118,name:"encodeHalf",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L381",comment:"Encode float32 to Uint16",tags:["static"],type:{name:"number"},params:[{id:120,name:"f32",type:{name:"number"},tags:[]}],typeParams:[]}],extends:null,implements:null},{id:408,name:"GLState",originalName:"default",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLState.ts#L14",comment:`This class manages the webgl state.

It is used to manage a stack of GLConfigs and apply the current state to the webgl context.`,tags:[],constructors:[{id:413,name:"GLState",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLState.ts#L43",tags:[],type:{name:"GLState",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLState.ts#L14"},params:[{id:415,name:"gl",type:{name:"WebGLRenderingContext"},tags:[],comment:"The webgl context this GLState belongs to"}],typeParams:[]}],properties:[{id:419,name:"_state",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLState.ts#L22",comment:"The current config",type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},tags:["private","readonly"]},{id:418,name:"_validCfg",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLState.ts#L20",comment:"Whether the config stack has been changed or not",type:{name:"boolean"},tags:["private"]},{id:417,name:"cfgStack",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLState.ts#L18",comment:"The config stack managing all GLConfigs",type:{name:"ConfigStack",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/ConfigStack.ts#L26"},tags:["readonly"]},{id:416,name:"gl",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLState.ts#L16",comment:"The webgl context this GLState belongs to",type:{name:"WebGLRenderingContext"},tags:["readonly"]},{id:409,name:"_instances",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLState.ts#L25",comment:"The list of every GLState instance created, indexed by the corresponding webgl context",type:{name:"WeakMap",data:{arguments:[{name:"WebGLRenderingContext"},{name:"GLState",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLState.ts#L14"}]}},tags:["private","static"]}],accessors:[],methods:[{id:425,name:"apply",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLState.ts#L75",comment:"Apply the current stack state to the webgl context.",tags:[],type:{name:"void"},typeParams:[]},{id:430,name:"config",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLState.ts#L98",comment:"Create a LocalConfig from this GLState.",tags:[],type:{name:"LocalConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLState.ts#L112"},typeParams:[]},{id:427,name:"now",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLState.ts#L89",comment:`Apply a config to the webgl context immediatly,
without keeping it in the stack.`,tags:[],type:{name:"void"},params:[{id:429,name:"cfg",type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},tags:[],comment:"The config to apply"}],typeParams:[]},{id:423,name:"pop",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLState.ts#L67",comment:"Remove the last config from the stack.",tags:[],type:{name:"void"},typeParams:[]},{id:420,name:"push",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLState.ts#L59",comment:"Push a config to the stack.",tags:[],type:{name:"void"},params:[{id:422,name:"cfg",type:{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"},tags:[],comment:"The config to push"}],typeParams:[]},{id:410,name:"get",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLState.ts#L31",comment:"Create a GLState instance or return the existing one for given webgl context.",tags:["static"],type:{name:"GLState",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLState.ts#L14"},params:[{id:412,name:"gl",type:{name:"WebGLRenderingContext"},tags:[],comment:"The webgl context"}],typeParams:[]}],extends:null,implements:null},{id:261,name:"LocalConfig",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLState.ts#L112",comment:`This class manages local configs.

It can be used for configs that will be applied directly,
and not pushed to the stack.`,tags:[],constructors:[{id:268,name:"LocalConfig",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLState.ts#L119",tags:[],type:{name:"LocalConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLState.ts#L112"},params:[{id:270,name:"state",type:{name:"GLState",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLState.ts#L14"},tags:[],comment:"The GLState for the webgl context this config belongs to"}],typeParams:[]}],properties:[{id:271,name:"state",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLState.ts#L114",comment:"The GLState for the webgl context this config belongs to",type:{name:"GLState",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLState.ts#L14"},tags:["private","readonly"]}],accessors:[],methods:[{id:272,name:"apply",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLState.ts#L127",comment:"Apply this config to the webgl context immediatly.",tags:[],type:{name:"void"},typeParams:[]}],extends:[{name:"GLConfig",lib:"nanogl-state",kind:"Class",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L377"}],implements:null}],functions:[],interfaces:[],enumerations:[{id:83,name:"SetsBits",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L67",tags:[],comment:"The bitmask for each config set.",members:[{id:84,name:"BLEND_ENABLE_SET",tags:[],type:{name:"1",data:{literalType:"number"}}},{id:85,name:"CULL_FACE_ENABLE_SET",tags:[],type:{name:"2",data:{literalType:"number"}}},{id:86,name:"DEPTH_ENABLE_SET",tags:[],type:{name:"4",data:{literalType:"number"}}},{id:87,name:"DITHER_ENABLE_SET",tags:[],type:{name:"8",data:{literalType:"number"}}},{id:88,name:"POLYOFF_ENABLE_SET",tags:[],type:{name:"16",data:{literalType:"number"}}},{id:89,name:"COVERAGE_ENABLE_SET",tags:[],type:{name:"32",data:{literalType:"number"}}},{id:90,name:"ACOVERAGE_ENABLE_SET",tags:[],type:{name:"64",data:{literalType:"number"}}},{id:91,name:"SCISSOR_ENABLE_SET",tags:[],type:{name:"128",data:{literalType:"number"}}},{id:92,name:"STENCIL_ENABLE_SET",tags:[],type:{name:"256",data:{literalType:"number"}}},{id:93,name:"BLEND_EQ_SET",tags:[],type:{name:"512",data:{literalType:"number"}}},{id:94,name:"BLEND_FUNC_SET",tags:[],type:{name:"1024",data:{literalType:"number"}}},{id:95,name:"BLEND_EQ_A_SET",tags:[],type:{name:"2048",data:{literalType:"number"}}},{id:96,name:"BLEND_FUNC_A_SET",tags:[],type:{name:"4096",data:{literalType:"number"}}},{id:97,name:"DEPTH_FUNC_SET",tags:[],type:{name:"8192",data:{literalType:"number"}}},{id:98,name:"CULL_MODE_SET",tags:[],type:{name:"16384",data:{literalType:"number"}}},{id:99,name:"FACE_DIR_SET",tags:[],type:{name:"32768",data:{literalType:"number"}}},{id:100,name:"STENCIL_FUNC_SET",tags:[],type:{name:"65536",data:{literalType:"number"}}},{id:101,name:"STENCIL_OP_SET",tags:[],type:{name:"131072",data:{literalType:"number"}}},{id:102,name:"STENCIL_MASK_SET",tags:[],type:{name:"262144",data:{literalType:"number"}}},{id:103,name:"STENCIL_B_FUNC_SET",tags:[],type:{name:"524288",data:{literalType:"number"}}},{id:104,name:"STENCIL_B_OP_SET",tags:[],type:{name:"1048576",data:{literalType:"number"}}},{id:105,name:"STENCIL_B_MASK_SET",tags:[],type:{name:"2097152",data:{literalType:"number"}}},{id:106,name:"SCISSOR_TEST_SET",tags:[],type:{name:"4194304",data:{literalType:"number"}}},{id:107,name:"POLYOFF_SET",tags:[],type:{name:"8388608",data:{literalType:"number"}}},{id:108,name:"COLOR_MASK_SET",tags:[],type:{name:"16777216",data:{literalType:"number"}}},{id:109,name:"DEPTH_MASK_SET",tags:[],type:{name:"33554432",data:{literalType:"number"}}},{id:110,name:"BLEND_COLOR_SET",tags:[],type:{name:"67108864",data:{literalType:"number"}}},{id:111,name:"VIEWPORT_SET",tags:[],type:{name:"134217728",data:{literalType:"number"}}},{id:112,name:"DEPTH_RANGE_SET",tags:[],type:{name:"268435456",data:{literalType:"number"}}},{id:113,name:"LINE_WIDTH_SET",tags:[],type:{name:"536870912",data:{literalType:"number"}}}]},{id:31,name:"Slots",source:"https://github.com/evanmartiin/nanogl-state/blob/e87e247/src/GLConfig.ts#L7",tags:[],comment:"The slot number for each config data.",members:[{id:32,name:"BLEND_ENABLE",tags:[],type:{name:"0",data:{literalType:"number"}}},{id:33,name:"BLEND_EQ_C",tags:[],type:{name:"1",data:{literalType:"number"}}},{id:34,name:"BLEND_FUNC_C_DST",tags:[],type:{name:"2",data:{literalType:"number"}}},{id:35,name:"BLEND_FUNC_C_SRC",tags:[],type:{name:"3",data:{literalType:"number"}}},{id:36,name:"BLEND_EQ_A",tags:[],type:{name:"4",data:{literalType:"number"}}},{id:37,name:"BLEND_FUNC_A_DST",tags:[],type:{name:"5",data:{literalType:"number"}}},{id:38,name:"BLEND_FUNC_A_SRC",tags:[],type:{name:"6",data:{literalType:"number"}}},{id:39,name:"DEPTH_ENABLE",tags:[],type:{name:"7",data:{literalType:"number"}}},{id:40,name:"DEPTH_FUNC",tags:[],type:{name:"8",data:{literalType:"number"}}},{id:41,name:"CULL_FACE_ENABLE",tags:[],type:{name:"9",data:{literalType:"number"}}},{id:42,name:"CULL_MODE",tags:[],type:{name:"10",data:{literalType:"number"}}},{id:43,name:"FACE_DIR",tags:[],type:{name:"11",data:{literalType:"number"}}},{id:44,name:"STENCIL_ENABLE",tags:[],type:{name:"12",data:{literalType:"number"}}},{id:45,name:"STENCIL_FUNC",tags:[],type:{name:"13",data:{literalType:"number"}}},{id:46,name:"STENCIL_REF",tags:[],type:{name:"14",data:{literalType:"number"}}},{id:47,name:"STENCIL_VALUE_MASK",tags:[],type:{name:"15",data:{literalType:"number"}}},{id:48,name:"STENCIL_WRITEMASK",tags:[],type:{name:"16",data:{literalType:"number"}}},{id:49,name:"STENCIL_OP_FAIL",tags:[],type:{name:"17",data:{literalType:"number"}}},{id:50,name:"STENCIL_OP_ZFAIL",tags:[],type:{name:"18",data:{literalType:"number"}}},{id:51,name:"STENCIL_OP_ZPASS",tags:[],type:{name:"19",data:{literalType:"number"}}},{id:52,name:"STENCIL_B_FUNC",tags:[],type:{name:"20",data:{literalType:"number"}}},{id:53,name:"STENCIL_B_REF",tags:[],type:{name:"21",data:{literalType:"number"}}},{id:54,name:"STENCIL_B_VALUE_MASK",tags:[],type:{name:"22",data:{literalType:"number"}}},{id:55,name:"STENCIL_B_WRITEMASK",tags:[],type:{name:"23",data:{literalType:"number"}}},{id:56,name:"STENCIL_B_OP_FAIL",tags:[],type:{name:"24",data:{literalType:"number"}}},{id:57,name:"STENCIL_B_OP_ZFAIL",tags:[],type:{name:"25",data:{literalType:"number"}}},{id:58,name:"STENCIL_B_OP_ZPASS",tags:[],type:{name:"26",data:{literalType:"number"}}},{id:59,name:"SCISSOR_ENABLE",tags:[],type:{name:"27",data:{literalType:"number"}}},{id:60,name:"SCISSOR_TEST_X",tags:[],type:{name:"28",data:{literalType:"number"}}},{id:61,name:"SCISSOR_TEST_Y",tags:[],type:{name:"29",data:{literalType:"number"}}},{id:62,name:"SCISSOR_TEST_W",tags:[],type:{name:"30",data:{literalType:"number"}}},{id:63,name:"SCISSOR_TEST_H",tags:[],type:{name:"31",data:{literalType:"number"}}},{id:64,name:"DITHER_ENABLE",tags:[],type:{name:"32",data:{literalType:"number"}}},{id:65,name:"POLYOFF_ENABLE",tags:[],type:{name:"33",data:{literalType:"number"}}},{id:66,name:"POLYOFF_FACTOR",tags:[],type:{name:"34",data:{literalType:"number"}}},{id:67,name:"POLYOFF_UNITS",tags:[],type:{name:"35",data:{literalType:"number"}}},{id:68,name:"COLOR_MASK",tags:[],type:{name:"38",data:{literalType:"number"}}},{id:69,name:"DEPTH_MASK",tags:[],type:{name:"39",data:{literalType:"number"}}},{id:70,name:"BLEND_COLOR_R",tags:[],type:{name:"40",data:{literalType:"number"}}},{id:71,name:"BLEND_COLOR_G",tags:[],type:{name:"41",data:{literalType:"number"}}},{id:72,name:"BLEND_COLOR_B",tags:[],type:{name:"42",data:{literalType:"number"}}},{id:73,name:"BLEND_COLOR_A",tags:[],type:{name:"43",data:{literalType:"number"}}},{id:74,name:"VIEWPORT_X",tags:[],type:{name:"44",data:{literalType:"number"}}},{id:75,name:"VIEWPORT_Y",tags:[],type:{name:"45",data:{literalType:"number"}}},{id:76,name:"VIEWPORT_W",tags:[],type:{name:"46",data:{literalType:"number"}}},{id:77,name:"VIEWPORT_H",tags:[],type:{name:"47",data:{literalType:"number"}}},{id:78,name:"DEPTH_RANGE_NEAR",tags:[],type:{name:"48",data:{literalType:"number"}}},{id:79,name:"DEPTH_RANGE_FAR",tags:[],type:{name:"49",data:{literalType:"number"}}},{id:80,name:"LINE_WIDTH",tags:[],type:{name:"50",data:{literalType:"number"}}},{id:81,name:"LEN",tags:[],type:{name:"51",data:{literalType:"number"}}}]}],types:[]},{name:"nanogl-sync",description:"WebGLSync for nanogl",classes:[{id:9,name:"Sync",originalName:"default",source:"https://github.com/evanmartiin/nanogl-sync/blob/23ac2ad/src/index.ts#L14",comment:`This class can be used as a wrapper around a WebGLSync object, and provides a promise based completion.

It is used to synchronize activities between the GPU and the application, and is only available for WebGL2. As a fallback, the Sync will be immediately signaled if the WebGLSync object isn't available.`,tags:[],constructors:[{id:20,name:"Sync",source:"https://github.com/evanmartiin/nanogl-sync/blob/23ac2ad/src/index.ts#L33",tags:[],type:{name:"Sync",lib:"nanogl-sync",kind:"Class",source:"https://github.com/evanmartiin/nanogl-sync/blob/23ac2ad/src/index.ts#L14"},params:[{id:22,name:"gl",type:{listType:"union",list:[{name:"WebGLRenderingContext"},{name:"WebGL2RenderingContext"}]},tags:[],comment:"The webgl context this Sync belongs to"}],typeParams:[]}],properties:[{id:28,name:"_defer",source:"https://github.com/evanmartiin/nanogl-sync/blob/23ac2ad/src/index.ts#L27",comment:"The object providing the promise's resolve & reject functions",type:{name:"any"},tags:["private"]},{id:26,name:"_invalidated",source:"https://github.com/evanmartiin/nanogl-sync/blob/23ac2ad/src/index.ts#L23",comment:"Whether the Sync is invalidated or not. The Sync is invalidated on release.",type:{name:"boolean"},tags:["private"]},{id:27,name:"_pooled",source:"https://github.com/evanmartiin/nanogl-sync/blob/23ac2ad/src/index.ts#L25",comment:"Whether the Sync is pooled or not.",type:{name:"boolean"},tags:["private"]},{id:25,name:"_sync",source:"https://github.com/evanmartiin/nanogl-sync/blob/23ac2ad/src/index.ts#L21",comment:"The implementation of the WebGLSync object",type:{listType:"union",list:[{name:"null",data:{literalType:"null"}},{name:"ISyncImplementation",lib:"nanogl-sync",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-sync/blob/23ac2ad/src/index.ts#L166"}]},tags:["private"]},{id:23,name:"gl",source:"https://github.com/evanmartiin/nanogl-sync/blob/23ac2ad/src/index.ts#L16",comment:"The webgl context this Sync belongs to",type:{listType:"union",list:[{name:"WebGLRenderingContext"},{name:"WebGL2RenderingContext"}]},tags:[]},{id:24,name:"promise",source:"https://github.com/evanmartiin/nanogl-sync/blob/23ac2ad/src/index.ts#L18",comment:"The underlying promise",type:{name:"Promise",data:{arguments:[{name:"unknown"}]}},tags:["readonly"]}],accessors:[],methods:[{id:13,name:"auto",source:"https://github.com/evanmartiin/nanogl-sync/blob/23ac2ad/src/index.ts#L53",comment:"Start the pool auto resolve loop.",tags:["static"],type:{name:"void"},params:[{id:16,name:"interval",type:{name:"number"},tags:[]}],typeParams:[]},{id:10,name:"resolve",source:"https://github.com/evanmartiin/nanogl-sync/blob/23ac2ad/src/index.ts#L49",comment:"Call [_complete](/api/nanogl-sync/classes/Sync#item-50) for every signaled Sync in the pool.",tags:["static"],type:{name:"void"},typeParams:[]},{id:17,name:"stop",source:"https://github.com/evanmartiin/nanogl-sync/blob/23ac2ad/src/index.ts#L57",comment:"Stop the pool auto resolve loop.",tags:["static"],type:{name:"void"},typeParams:[]},{id:50,name:"_complete",source:"https://github.com/evanmartiin/nanogl-sync/blob/23ac2ad/src/index.ts#L135",comment:"Resolve the promise and release everything related to this Sync.",tags:[],type:{name:"void"},typeParams:[]},{id:52,name:"_pool",source:"https://github.com/evanmartiin/nanogl-sync/blob/23ac2ad/src/index.ts#L143",comment:"Pool this Sync.",tags:[],type:{name:"void"},typeParams:[]},{id:48,name:"_release",source:"https://github.com/evanmartiin/nanogl-sync/blob/23ac2ad/src/index.ts#L122",comment:`Release everything related to this Sync.

Used by [dispose](/api/nanogl-sync/classes/Sync#item-31) and [_complete](/api/nanogl-sync/classes/Sync#item-50).`,tags:[],type:{name:"void"},typeParams:[]},{id:54,name:"_unpool",source:"https://github.com/evanmartiin/nanogl-sync/blob/23ac2ad/src/index.ts#L153",comment:"Remove this Sync from the pool.",tags:[],type:{name:"void"},typeParams:[]},{id:45,name:"clientWaitSync",source:"https://github.com/evanmartiin/nanogl-sync/blob/23ac2ad/src/index.ts#L109",comment:"Shortcut to `gl.clientWaitSync`.\n\n**Important :** The [insert](/api/nanogl-sync/classes/Sync#item-29) method must have been called before calling this method.",tags:[],type:{name:"number"},params:[{id:47,name:"timeout",type:{name:"number"},tags:["optional"],comment:"The time to wait for the sync object to become signaled (in nanosec), defaults to 100ms",optional:!0,defaultValue:"1e6"}],typeParams:[]},{id:31,name:"dispose",source:"https://github.com/evanmartiin/nanogl-sync/blob/23ac2ad/src/index.ts#L79",comment:"Dispose of everything related related to this Sync.",tags:[],type:{name:"void"},typeParams:[]},{id:29,name:"insert",source:"https://github.com/evanmartiin/nanogl-sync/blob/23ac2ad/src/index.ts#L69",comment:`Create a WebGLSync object and insert it in the GL command stream. Then pool this Sync.

The promise will be resolved when the Sync is signaled.`,tags:[],type:{name:"void"},typeParams:[]},{id:33,name:"isSignaled",source:"https://github.com/evanmartiin/nanogl-sync/blob/23ac2ad/src/index.ts#L86",comment:"Know whether the `GL_SYNC_STATUS` is `GL_SIGNALED` or not.",tags:[],type:{name:"boolean"},typeParams:[]},{id:35,name:"then",source:"https://github.com/evanmartiin/nanogl-sync/blob/23ac2ad/src/index.ts#L98",comment:"Shortcut to `this.promise.then`.",tags:[],type:{name:"void"},params:[{id:37,name:"onFulfilled",type:{name:"function",data:{function:{type:{name:"unknown"},params:[{id:40,name:"value",type:{name:"unknown"},tags:[]}]}}},tags:[],comment:"The callback to be called when the promise is fulfilled"},{id:41,name:"onRejected",type:{name:"function",data:{function:{type:{name:"unknown"},params:[{id:44,name:"reason",type:{name:"any"},tags:[]}]}}},tags:[],comment:"The callback to be called when the promise is rejected"}],typeParams:[]}],extends:null,implements:null}],functions:[],interfaces:[{id:1,name:"ISyncImplementation",source:"https://github.com/evanmartiin/nanogl-sync/blob/23ac2ad/src/index.ts#L166",comment:"The implementation of a WebGLSync object.",tags:[],properties:[],accessors:[],methods:[{id:6,name:"clientWaitSync",source:"https://github.com/evanmartiin/nanogl-sync/blob/23ac2ad/src/index.ts#L179",comment:"Shortcut to `gl.clientWaitSync`.",tags:[],type:{name:"number"},params:[{id:8,name:"timeout",type:{name:"number"},tags:[],comment:"The time to wait for the sync object to become signaled (in nanosec)"}],typeParams:[]},{id:4,name:"dispose",source:"https://github.com/evanmartiin/nanogl-sync/blob/23ac2ad/src/index.ts#L174",comment:"Dispose of everything related to this SyncImplementation.",tags:[],type:{name:"void"},typeParams:[]},{id:2,name:"isSignaled",source:"https://github.com/evanmartiin/nanogl-sync/blob/23ac2ad/src/index.ts#L170",comment:"Know whether the `GL_SYNC_STATUS` is `GL_SIGNALED` or not.",tags:[],type:{name:"boolean"},typeParams:[]}],extends:null,implemented:null}],enumerations:[],types:[]},{name:"nanogl-vao",description:"OES_vertex_array_object extension support for nanogl",classes:[{id:13,name:"Vao",originalName:"default",source:"https://github.com/evanmartiin/nanogl-vao/blob/eea09d5/src/vao.ts#L48",comment:`This class manages VAOs (Vertex Array Objects).

It is used to manage attribute pointers setup for given program and buffers, and provides a transparent fallback if VAO extension isn't available.`,tags:[],constructors:[{id:14,name:"Vao",source:"https://github.com/evanmartiin/nanogl-vao/blob/eea09d5/src/vao.ts#L57",tags:[],type:{name:"Vao",lib:"nanogl-vao",kind:"Class",source:"https://github.com/evanmartiin/nanogl-vao/blob/eea09d5/src/vao.ts#L48"},params:[{id:16,name:"gl",type:{listType:"union",list:[{name:"WebGLRenderingContext"},{name:"WebGL2RenderingContext"}]},tags:[],comment:"The webgl context this VAO belongs to"}],typeParams:[]}],properties:[{id:18,name:"_impl",source:"https://github.com/evanmartiin/nanogl-vao/blob/eea09d5/src/vao.ts#L52",comment:"The implementation of the VAO",type:{name:"IVaoImplementation",lib:"nanogl-vao",kind:"Interface",source:"https://github.com/evanmartiin/nanogl-vao/blob/eea09d5/src/vao.ts#L18"},tags:[]},{id:17,name:"gl",source:"https://github.com/evanmartiin/nanogl-vao/blob/eea09d5/src/vao.ts#L50",comment:"The webgl context this VAO belongs to",type:{listType:"union",list:[{name:"WebGLRenderingContext"},{name:"WebGL2RenderingContext"}]},tags:[]}],accessors:[],methods:[{id:26,name:"bind",source:"https://github.com/evanmartiin/nanogl-vao/blob/eea09d5/src/vao.ts#L100",comment:`Bind the VAO.
You need to call this method *before* each draw call.`,tags:[],type:{name:"void"},typeParams:[]},{id:19,name:"dispose",source:"https://github.com/evanmartiin/nanogl-vao/blob/eea09d5/src/vao.ts#L79",comment:"Delete all webgl objects related to this VAO.",tags:[],type:{name:"void"},typeParams:[]},{id:21,name:"setup",source:"https://github.com/evanmartiin/nanogl-vao/blob/eea09d5/src/vao.ts#L89",comment:"Initialize attrib pointer setup for given program and buffers.",tags:[],type:{name:"void"},params:[{id:23,name:"prg",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[],comment:"The program to use"},{id:24,name:"buffers",type:{name:"ArrayBuffer",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/arraybuffer.ts#L34",isArray:!0},tags:[],comment:"The list of buffers containing the vertex data"},{id:25,name:"indices",type:{name:"IndexBuffer",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/indexbuffer.ts#L13"},tags:[],comment:"The buffer containing the index data"}],typeParams:[]},{id:28,name:"unbind",source:"https://github.com/evanmartiin/nanogl-vao/blob/eea09d5/src/vao.ts#L109",comment:`Unbind the VAO.
You need to call this method *after* each draw call.`,tags:[],type:{name:"void"},typeParams:[]}],extends:null,implements:null}],functions:[],interfaces:[{id:1,name:"IVaoImplementation",source:"https://github.com/evanmartiin/nanogl-vao/blob/eea09d5/src/vao.ts#L18",comment:"The implementation of a webgl VAO.",tags:[],properties:[],accessors:[],methods:[{id:9,name:"bind",source:"https://github.com/evanmartiin/nanogl-vao/blob/eea09d5/src/vao.ts#L33",comment:"Bind the VAO.",tags:[],type:{name:"void"},typeParams:[]},{id:2,name:"dispose",source:"https://github.com/evanmartiin/nanogl-vao/blob/eea09d5/src/vao.ts#L22",comment:"Delete all webgl objects related to this VAO.",tags:[],type:{name:"void"},typeParams:[]},{id:4,name:"setup",source:"https://github.com/evanmartiin/nanogl-vao/blob/eea09d5/src/vao.ts#L29",comment:"Initialize attrib pointer setup for given program and buffers.",tags:[],type:{name:"void"},params:[{id:6,name:"prg",type:{name:"Program",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/program.ts#L15"},tags:[],comment:"The program to use"},{id:7,name:"buffers",type:{name:"ArrayBuffer",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/arraybuffer.ts#L34",isArray:!0},tags:[],comment:"The list of buffers containing the vertex data"},{id:8,name:"indices",type:{name:"IndexBuffer",lib:"nanogl",kind:"Class",source:"https://github.com/evanmartiin/nanogl/blob/224e9eb/src/indexbuffer.ts#L13"},tags:[],comment:"The buffer containing the index data"}],typeParams:[]},{id:11,name:"unbind",source:"https://github.com/evanmartiin/nanogl-vao/blob/eea09d5/src/vao.ts#L37",comment:"Unbind the VAO.",tags:[],type:{name:"void"},typeParams:[]}],extends:null,implemented:null}],enumerations:[],types:[]}],ai={libs:$s},si=Object.freeze(Object.defineProperty({__proto__:null,default:ai,libs:$s},Symbol.toStringTag,{value:"Module"})),Ht=ze([]),ia=ze([]),jt=ze([]),la=ze([]);function Ce(){const t=An(),e=()=>{const o=Object.assign({"../assets/data.json":si})["../assets/data.json"];Ht.value=o.libs;const l=t.getRoutes().reduce((m,g)=>{if(!g.meta.menuGuide||g.path.slice(1).split("/").length<2)return m;const u=g.path.slice(1).split("/")[1],c=u.charAt(0).toUpperCase()+u.slice(1).replace(/-/g," "),k=m[u]?{...m[u]}:{name:c,slug:u,articles:[]},_={route:g,name:g.meta.menuName},x=g.meta.menuOrder===null||g.meta.menuOrder===void 0?k.articles.length:g.meta.menuOrder;return k.articles[x]=_,{...m,[u]:k}},{});ia.value=Object.values(l).sort((m,g)=>m.name.localeCompare(g.name)),jt.value=Object.entries(Us).map(([m,g])=>g.map(p=>({...p,category:m}))).flat(),la.value=jt.value.map(m=>m.id)},n=oe(()=>t.currentRoute.value.path.split("/")[1]),a=oe(()=>Ht.value.find(l=>l.name===t.currentRoute.value.params.library)||null),s=oe(()=>t.currentRoute.value.params.type||null),r=oe(()=>{if(!a.value)return null;const o=t.currentRoute.value.params.item;if(!s.value||!o)return null;const l=a.value[s.value];return l&&l.find(m=>m.name===o)||null}),i=oe(()=>jt.value.find(l=>l.id===t.currentRoute.value.params.example)||null);return{init:e,libsData:Ht,guideList:ia,currentLib:a,currentType:s,currentItem:r,currentSection:n,currentExample:i,examplesNames:la}}const ri=te("h2",{class:"my-8"},"Examples",-1),oi={class:"mt-8 mb-4"},ii={__name:"ExamplesMenu",setup(t){const{currentExample:e}=Ce();return(n,a)=>{const s=Ve("RouterLink");return F(),X("div",null,[ri,(F(!0),X(ge,null,fe(V(Us),(r,i)=>(F(),X("div",null,[te("h3",oi,Se(i),1),(F(!0),X(ge,null,fe(r,o=>{var l;return F(),X(ge,null,[o?(F(),ie(s,{key:0,to:`/${V(ve).EXAMPLES}/${o.id}`,class:Pe({selected:((l=V(e))==null?void 0:l.id)===o.id})},{default:qe(()=>[Ye(Se(o.name),1)]),_:2},1032,["to","class"])):ye("",!0)],64)}),256))]))),256))])}}},li=te("h2",{class:"my-8"},"Libraries",-1),ui=Te({__name:"APILibs",setup(t){const{libsData:e,currentLib:n}=Ce();return(a,s)=>{const r=Ve("RouterLink");return F(),X("div",null,[li,(F(!0),X(ge,null,fe(V(e),i=>{var o;return F(),ie(r,{to:`/${V(ve).API}/${i.name}`,class:Pe({selected:((o=V(n))==null?void 0:o.name)===i.name})},{default:qe(()=>[Ye(Se(i.name),1)]),_:2},1032,["to","class"])}),256))])}}}),mi=Te({__name:"APILibItem",props:{type:null,itemName:null},setup(t){const e=t,{currentLib:n,currentType:a,currentItem:s}=Ce(),r=oe(()=>e.type===a.value&&e.itemName===s.value.name);return(i,o)=>{const l=Ve("RouterLink");return F(),ie(l,{to:`/${V(ve).API}/${V(n).name}/${t.type}/${t.itemName}`,class:Pe({selected:V(r)})},{default:qe(()=>[Ye(Se(t.itemName),1)]),_:1},8,["to","class"])}}}),ci={class:"my-8"},gi={key:0},pi=te("h3",{class:"mt-8 mb-4"},"Classes",-1),bi={key:1},di=te("h3",{class:"mt-8 mb-4"},"Functions",-1),hi={key:2},fi=te("h3",{class:"mt-8 mb-4"},"Interfaces",-1),yi={key:3},vi=te("h3",{class:"mt-8 mb-4"},"Types",-1),Li={key:4},Ti=te("h3",{class:"mt-8 mb-4"},"Enumerations",-1),xi=Te({__name:"APILibItems",setup(t){const{currentLib:e}=Ce();return(n,a)=>{const s=mi;return F(),X("div",null,[te("h2",ci,Se(V(e).name),1),V(e).classes.length?(F(),X("div",gi,[pi,(F(!0),X(ge,null,fe(V(e).classes,r=>(F(),ie(s,{type:V(We).CLASS,"item-name":r.name},null,8,["type","item-name"]))),256))])):ye("",!0),V(e).functions.length?(F(),X("div",bi,[di,(F(!0),X(ge,null,fe(V(e).functions,r=>(F(),ie(s,{type:V(We).FUNCTION,"item-name":r.name},null,8,["type","item-name"]))),256))])):ye("",!0),V(e).interfaces.length?(F(),X("div",hi,[fi,(F(!0),X(ge,null,fe(V(e).interfaces,r=>(F(),ie(s,{type:V(We).INTERFACE,"item-name":r.name},null,8,["type","item-name"]))),256))])):ye("",!0),V(e).types.length?(F(),X("div",yi,[vi,(F(!0),X(ge,null,fe(V(e).types,r=>(F(),ie(s,{type:V(We).TYPE,"item-name":r.name},null,8,["type","item-name"]))),256))])):ye("",!0),V(e).enumerations.length?(F(),X("div",Li,[Ti,(F(!0),X(ge,null,fe(V(e).enumerations,r=>(F(),ie(s,{type:V(We).ENUM,"item-name":r.name},null,8,["type","item-name"]))),256))])):ye("",!0)])}}}),ki=Te({__name:"APIMenu",setup(t){const{currentLib:e}=Ce();return(n,a)=>{const s=xi,r=ui;return V(e)?(F(),ie(s,{key:0})):(F(),ie(r,{key:1}))}}}),Ci=te("h2",{class:"my-8"},"Guide",-1),_i={class:"mt-8 mb-4"},wi=Te({__name:"GuideMenu",setup(t){const{guideList:e}=Ce(),{currentRoute:n}=An();return(a,s)=>{const r=Ve("RouterLink");return F(),X("div",null,[Ci,(F(!0),X(ge,null,fe(V(e),i=>(F(),X("div",null,[te("h3",_i,Se(i.name),1),(F(!0),X(ge,null,fe(i.articles,o=>(F(),X(ge,null,[o?(F(),ie(r,{key:0,to:o.route.path,class:Pe({selected:V(n).name===o.route.name})},{default:qe(()=>[Ye(Se(o.name),1)]),_:2},1032,["to","class"])):ye("",!0)],64))),256))]))),256))])}}}),Ei={class:"menu sticky top-menu h-full-menu overflow-auto scrollbar col-span-2 py-32 px-20 flex flex-col gap-24 pointer-events-auto"},Pi={class:"flex flex-col gap-20"},Si=Te({__name:"SideMenu",setup(t){const{currentSection:e}=Ce();return(n,a)=>{const s=wi,r=ki,i=ii;return F(),X("div",Ei,[te("div",Pi,[V(e)===V(ve).GUIDE?(F(),ie(s,{key:0})):ye("",!0),V(e)===V(ve).API?(F(),ie(r,{key:1})):ye("",!0),V(e)===V(ve).EXAMPLES?(F(),ie(i,{key:2})):ye("",!0)])])}}}),Ai="modulepreload",Ii=function(t){return"/nanogl-docs/"+t},ua={},ee=function(e,n,a){if(!n||n.length===0)return e();const s=document.getElementsByTagName("link");return Promise.all(n.map(r=>{if(r=Ii(r),r in ua)return;ua[r]=!0;const i=r.endsWith(".css"),o=i?'[rel="stylesheet"]':"";if(!!a)for(let g=s.length-1;g>=0;g--){const p=s[g];if(p.href===r&&(!i||p.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${r}"]${o}`))return;const m=document.createElement("link");if(m.rel=i?"stylesheet":Ai,i||(m.as="script",m.crossOrigin=""),m.href=r,document.head.appendChild(m),i)return new Promise((g,p)=>{m.addEventListener("load",g),m.addEventListener("error",()=>p(new Error(`Unable to preload CSS for ${r}`)))})})).then(()=>e())},Gi=(t,e)=>{const n=t[e];return n?typeof n=="function"?n():Promise.resolve(n):new Promise((a,s)=>{(typeof queueMicrotask=="function"?queueMicrotask:setTimeout)(s.bind(null,new Error("Unknown variable dynamic import: "+e)))})},Ri=Te({__name:"UIIcon",props:{name:null,stroke:{type:Boolean}},setup(t){const e=t,n=Pr(()=>Gi(Object.assign({"../assets/icons/arrow-down.svg":()=>ee(()=>import("./arrow-down-91d4c930.js"),["assets/arrow-down-91d4c930.js","assets/runtime-core.esm-bundler-b2e16801.js"]),"../assets/icons/arrow-right.svg":()=>ee(()=>import("./arrow-right-1ad38c48.js"),["assets/arrow-right-1ad38c48.js","assets/runtime-core.esm-bundler-b2e16801.js"]),"../assets/icons/code.svg":()=>ee(()=>import("./code-d75937f5.js"),["assets/code-d75937f5.js","assets/runtime-core.esm-bundler-b2e16801.js"]),"../assets/icons/github.svg":()=>ee(()=>import("./github-2bf747a4.js"),["assets/github-2bf747a4.js","assets/runtime-core.esm-bundler-b2e16801.js"])}),`../assets/icons/${e.name}.svg`));return(a,s)=>(F(),ie(Sr(V(n)),{class:Pe({"fill-current":!t.stroke,"fill-none stroke-current stroke-[4px]":t.stroke})},null,8,["class"]))}}),Di={class:"text-18"},Mi={key:0,class:"relative"},Ni={class:"flex flex-col bg-light-grey rounded-md p-4"},Oi=Te({__name:"SectionLink",props:{name:null,section:null,subMenu:null},setup(t){const{currentSection:e}=Ce(),{currentRoute:n}=An(),a=o=>{const l=n.value.path;return l===o||l.startsWith(`${o}/`)},s=ze(!1),r=()=>{s.value=!0},i=()=>{s.value=!1};return(o,l)=>{const m=Ri,g=Ve("RouterLink");return F(),X("div",{class:"relative",onMouseenter:r,onMouseleave:i},[Be(g,{to:`/${t.section}`,class:Pe(["flex gap-8 justify-start items-baseline font-bold hover:text-primary transition-colors",V(e)===t.section?"selected text-primary":""])},{default:qe(()=>[te("span",Di,Se(t.name),1),t.subMenu?(F(),X("span",Mi,[Be(m,{name:"arrow-down",class:Pe(["w-12 h-auto transition-transform",s.value?"rotate-180":""]),stroke:""},null,8,["class"])])):ye("",!0)]),_:1},8,["to","class"]),t.subMenu?(F(),X("div",{key:0,class:Pe(["absolute top-full pt-4 -right-16 w-fit clip-path-vertical",s.value?"clip-path-vertical__hovered":""])},[te("div",Ni,[(F(!0),X(ge,null,fe(t.subMenu,p=>(F(),ie(g,{to:p.path,class:Pe(["rounded-md px-8 py-6 whitespace-nowrap text-14 transition-colors",a(p.path)?"bg-primary-5 text-primary":"hover:bg-white-5"])},{default:qe(()=>[Ye(Se(p.name),1)]),_:2},1032,["to","class"]))),256))])],2)):ye("",!0)],32)}}}),Bi={class:"fixed top-0 left-0 w-screen h-menu z-10 bg-grey"},qi={class:"h-full w-full max-w-screen-2xl mx-auto px-20 flex items-center justify-between"},Fi={class:"text-32"},zi={class:"flex gap-32"},Vi=Te({__name:"MainMenu",setup(t){const{guideList:e,libsData:n}=Ce(),a=[{name:"Guide",slug:ve.GUIDE,subMenu:e.value.map(s=>({name:s.name,path:`/${ve.GUIDE}/${s.slug}`}))},{name:"API",slug:ve.API,subMenu:n.value.map(s=>({name:s.name,path:`/${ve.API}/${s.name}`}))},{name:"Examples",slug:ve.EXAMPLES}];return(s,r)=>{const i=Ve("RouterLink"),o=Oi;return F(),X("div",Bi,[te("div",qi,[te("h1",Fi,[Be(i,{class:"logo opacity-100",to:"/"},{default:qe(()=>[Ye(" nanogl ")]),_:1})]),te("div",zi,[(F(),X(ge,null,fe(a,l=>Be(o,{name:l.name,section:l.slug,"sub-menu":l.subMenu},null,8,["name","section","sub-menu"])),64))])])])}}});var q=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function Ws(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}function Hi(t){if(t.__esModule)return t;var e=t.default;if(typeof e=="function"){var n=function a(){if(this instanceof a){var s=[null];s.push.apply(s,arguments);var r=Function.bind.apply(e,s);return new r}return e.apply(this,arguments)};n.prototype=e.prototype}else n={};return Object.defineProperty(n,"__esModule",{value:!0}),Object.keys(t).forEach(function(a){var s=Object.getOwnPropertyDescriptor(t,a);Object.defineProperty(n,a,s.get?s:{enumerable:!0,get:function(){return t[a]}})}),n}var xn={},ji={get exports(){return xn},set exports(t){xn=t}},Z={},xt={},Ui={get exports(){return xt},set exports(t){xt=t}};const $i="Á",Wi="á",Ki="Ă",Xi="ă",Zi="∾",Yi="∿",Qi="∾̳",Ji="Â",el="â",tl="´",nl="А",al="а",sl="Æ",rl="æ",ol="⁡",il="𝔄",ll="𝔞",ul="À",ml="à",cl="ℵ",gl="ℵ",pl="Α",bl="α",dl="Ā",hl="ā",fl="⨿",yl="&",vl="&",Ll="⩕",Tl="⩓",xl="∧",kl="⩜",Cl="⩘",_l="⩚",wl="∠",El="⦤",Pl="∠",Sl="⦨",Al="⦩",Il="⦪",Gl="⦫",Rl="⦬",Dl="⦭",Ml="⦮",Nl="⦯",Ol="∡",Bl="∟",ql="⊾",Fl="⦝",zl="∢",Vl="Å",Hl="⍼",jl="Ą",Ul="ą",$l="𝔸",Wl="𝕒",Kl="⩯",Xl="≈",Zl="⩰",Yl="≊",Ql="≋",Jl="'",eu="⁡",tu="≈",nu="≊",au="Å",su="å",ru="𝒜",ou="𝒶",iu="≔",lu="*",uu="≈",mu="≍",cu="Ã",gu="ã",pu="Ä",bu="ä",du="∳",hu="⨑",fu="≌",yu="϶",vu="‵",Lu="∽",Tu="⋍",xu="∖",ku="⫧",Cu="⊽",_u="⌅",wu="⌆",Eu="⌅",Pu="⎵",Su="⎶",Au="≌",Iu="Б",Gu="б",Ru="„",Du="∵",Mu="∵",Nu="∵",Ou="⦰",Bu="϶",qu="ℬ",Fu="ℬ",zu="Β",Vu="β",Hu="ℶ",ju="≬",Uu="𝔅",$u="𝔟",Wu="⋂",Ku="◯",Xu="⋃",Zu="⨀",Yu="⨁",Qu="⨂",Ju="⨆",em="★",tm="▽",nm="△",am="⨄",sm="⋁",rm="⋀",om="⤍",im="⧫",lm="▪",um="▴",mm="▾",cm="◂",gm="▸",pm="␣",bm="▒",dm="░",hm="▓",fm="█",ym="=⃥",vm="≡⃥",Lm="⫭",Tm="⌐",xm="𝔹",km="𝕓",Cm="⊥",_m="⊥",wm="⋈",Em="⧉",Pm="┐",Sm="╕",Am="╖",Im="╗",Gm="┌",Rm="╒",Dm="╓",Mm="╔",Nm="─",Om="═",Bm="┬",qm="╤",Fm="╥",zm="╦",Vm="┴",Hm="╧",jm="╨",Um="╩",$m="⊟",Wm="⊞",Km="⊠",Xm="┘",Zm="╛",Ym="╜",Qm="╝",Jm="└",ec="╘",tc="╙",nc="╚",ac="│",sc="║",rc="┼",oc="╪",ic="╫",lc="╬",uc="┤",mc="╡",cc="╢",gc="╣",pc="├",bc="╞",dc="╟",hc="╠",fc="‵",yc="˘",vc="˘",Lc="¦",Tc="𝒷",xc="ℬ",kc="⁏",Cc="∽",_c="⋍",wc="⧅",Ec="\\",Pc="⟈",Sc="•",Ac="•",Ic="≎",Gc="⪮",Rc="≏",Dc="≎",Mc="≏",Nc="Ć",Oc="ć",Bc="⩄",qc="⩉",Fc="⩋",zc="∩",Vc="⋒",Hc="⩇",jc="⩀",Uc="ⅅ",$c="∩︀",Wc="⁁",Kc="ˇ",Xc="ℭ",Zc="⩍",Yc="Č",Qc="č",Jc="Ç",eg="ç",tg="Ĉ",ng="ĉ",ag="∰",sg="⩌",rg="⩐",og="Ċ",ig="ċ",lg="¸",ug="¸",mg="⦲",cg="¢",gg="·",pg="·",bg="𝔠",dg="ℭ",hg="Ч",fg="ч",yg="✓",vg="✓",Lg="Χ",Tg="χ",xg="ˆ",kg="≗",Cg="↺",_g="↻",wg="⊛",Eg="⊚",Pg="⊝",Sg="⊙",Ag="®",Ig="Ⓢ",Gg="⊖",Rg="⊕",Dg="⊗",Mg="○",Ng="⧃",Og="≗",Bg="⨐",qg="⫯",Fg="⧂",zg="∲",Vg="”",Hg="’",jg="♣",Ug="♣",$g=":",Wg="∷",Kg="⩴",Xg="≔",Zg="≔",Yg=",",Qg="@",Jg="∁",ep="∘",tp="∁",np="ℂ",ap="≅",sp="⩭",rp="≡",op="∮",ip="∯",lp="∮",up="𝕔",mp="ℂ",cp="∐",gp="∐",pp="©",bp="©",dp="℗",hp="∳",fp="↵",yp="✗",vp="⨯",Lp="𝒞",Tp="𝒸",xp="⫏",kp="⫑",Cp="⫐",_p="⫒",wp="⋯",Ep="⤸",Pp="⤵",Sp="⋞",Ap="⋟",Ip="↶",Gp="⤽",Rp="⩈",Dp="⩆",Mp="≍",Np="∪",Op="⋓",Bp="⩊",qp="⊍",Fp="⩅",zp="∪︀",Vp="↷",Hp="⤼",jp="⋞",Up="⋟",$p="⋎",Wp="⋏",Kp="¤",Xp="↶",Zp="↷",Yp="⋎",Qp="⋏",Jp="∲",eb="∱",tb="⌭",nb="†",ab="‡",sb="ℸ",rb="↓",ob="↡",ib="⇓",lb="‐",ub="⫤",mb="⊣",cb="⤏",gb="˝",pb="Ď",bb="ď",db="Д",hb="д",fb="‡",yb="⇊",vb="ⅅ",Lb="ⅆ",Tb="⤑",xb="⩷",kb="°",Cb="∇",_b="Δ",wb="δ",Eb="⦱",Pb="⥿",Sb="𝔇",Ab="𝔡",Ib="⥥",Gb="⇃",Rb="⇂",Db="´",Mb="˙",Nb="˝",Ob="`",Bb="˜",qb="⋄",Fb="⋄",zb="⋄",Vb="♦",Hb="♦",jb="¨",Ub="ⅆ",$b="ϝ",Wb="⋲",Kb="÷",Xb="÷",Zb="⋇",Yb="⋇",Qb="Ђ",Jb="ђ",ed="⌞",td="⌍",nd="$",ad="𝔻",sd="𝕕",rd="¨",od="˙",id="⃜",ld="≐",ud="≑",md="≐",cd="∸",gd="∔",pd="⊡",bd="⌆",dd="∯",hd="¨",fd="⇓",yd="⇐",vd="⇔",Ld="⫤",Td="⟸",xd="⟺",kd="⟹",Cd="⇒",_d="⊨",wd="⇑",Ed="⇕",Pd="∥",Sd="⤓",Ad="↓",Id="↓",Gd="⇓",Rd="⇵",Dd="̑",Md="⇊",Nd="⇃",Od="⇂",Bd="⥐",qd="⥞",Fd="⥖",zd="↽",Vd="⥟",Hd="⥗",jd="⇁",Ud="↧",$d="⊤",Wd="⤐",Kd="⌟",Xd="⌌",Zd="𝒟",Yd="𝒹",Qd="Ѕ",Jd="ѕ",eh="⧶",th="Đ",nh="đ",ah="⋱",sh="▿",rh="▾",oh="⇵",ih="⥯",lh="⦦",uh="Џ",mh="џ",ch="⟿",gh="É",ph="é",bh="⩮",dh="Ě",hh="ě",fh="Ê",yh="ê",vh="≖",Lh="≕",Th="Э",xh="э",kh="⩷",Ch="Ė",_h="ė",wh="≑",Eh="ⅇ",Ph="≒",Sh="𝔈",Ah="𝔢",Ih="⪚",Gh="È",Rh="è",Dh="⪖",Mh="⪘",Nh="⪙",Oh="∈",Bh="⏧",qh="ℓ",Fh="⪕",zh="⪗",Vh="Ē",Hh="ē",jh="∅",Uh="∅",$h="◻",Wh="∅",Kh="▫",Xh=" ",Zh=" ",Yh=" ",Qh="Ŋ",Jh="ŋ",ef=" ",tf="Ę",nf="ę",af="𝔼",sf="𝕖",rf="⋕",of="⧣",lf="⩱",uf="ε",mf="Ε",cf="ε",gf="ϵ",pf="≖",bf="≕",df="≂",hf="⪖",ff="⪕",yf="⩵",vf="=",Lf="≂",Tf="≟",xf="⇌",kf="≡",Cf="⩸",_f="⧥",wf="⥱",Ef="≓",Pf="ℯ",Sf="ℰ",Af="≐",If="⩳",Gf="≂",Rf="Η",Df="η",Mf="Ð",Nf="ð",Of="Ë",Bf="ë",qf="€",Ff="!",zf="∃",Vf="∃",Hf="ℰ",jf="ⅇ",Uf="ⅇ",$f="≒",Wf="Ф",Kf="ф",Xf="♀",Zf="ﬃ",Yf="ﬀ",Qf="ﬄ",Jf="𝔉",e0="𝔣",t0="ﬁ",n0="◼",a0="▪",s0="fj",r0="♭",o0="ﬂ",i0="▱",l0="ƒ",u0="𝔽",m0="𝕗",c0="∀",g0="∀",p0="⋔",b0="⫙",d0="ℱ",h0="⨍",f0="½",y0="⅓",v0="¼",L0="⅕",T0="⅙",x0="⅛",k0="⅔",C0="⅖",_0="¾",w0="⅗",E0="⅜",P0="⅘",S0="⅚",A0="⅝",I0="⅞",G0="⁄",R0="⌢",D0="𝒻",M0="ℱ",N0="ǵ",O0="Γ",B0="γ",q0="Ϝ",F0="ϝ",z0="⪆",V0="Ğ",H0="ğ",j0="Ģ",U0="Ĝ",$0="ĝ",W0="Г",K0="г",X0="Ġ",Z0="ġ",Y0="≥",Q0="≧",J0="⪌",e7="⋛",t7="≥",n7="≧",a7="⩾",s7="⪩",r7="⩾",o7="⪀",i7="⪂",l7="⪄",u7="⋛︀",m7="⪔",c7="𝔊",g7="𝔤",p7="≫",b7="⋙",d7="⋙",h7="ℷ",f7="Ѓ",y7="ѓ",v7="⪥",L7="≷",T7="⪒",x7="⪤",k7="⪊",C7="⪊",_7="⪈",w7="≩",E7="⪈",P7="≩",S7="⋧",A7="𝔾",I7="𝕘",G7="`",R7="≥",D7="⋛",M7="≧",N7="⪢",O7="≷",B7="⩾",q7="≳",F7="𝒢",z7="ℊ",V7="≳",H7="⪎",j7="⪐",U7="⪧",$7="⩺",W7=">",K7=">",X7="≫",Z7="⋗",Y7="⦕",Q7="⩼",J7="⪆",ey="⥸",ty="⋗",ny="⋛",ay="⪌",sy="≷",ry="≳",oy="≩︀",iy="≩︀",ly="ˇ",uy=" ",my="½",cy="ℋ",gy="Ъ",py="ъ",by="⥈",dy="↔",hy="⇔",fy="↭",yy="^",vy="ℏ",Ly="Ĥ",Ty="ĥ",xy="♥",ky="♥",Cy="…",_y="⊹",wy="𝔥",Ey="ℌ",Py="ℋ",Sy="⤥",Ay="⤦",Iy="⇿",Gy="∻",Ry="↩",Dy="↪",My="𝕙",Ny="ℍ",Oy="―",By="─",qy="𝒽",Fy="ℋ",zy="ℏ",Vy="Ħ",Hy="ħ",jy="≎",Uy="≏",$y="⁃",Wy="‐",Ky="Í",Xy="í",Zy="⁣",Yy="Î",Qy="î",Jy="И",e1="и",t1="İ",n1="Е",a1="е",s1="¡",r1="⇔",o1="𝔦",i1="ℑ",l1="Ì",u1="ì",m1="ⅈ",c1="⨌",g1="∭",p1="⧜",b1="℩",d1="Ĳ",h1="ĳ",f1="Ī",y1="ī",v1="ℑ",L1="ⅈ",T1="ℐ",x1="ℑ",k1="ı",C1="ℑ",_1="⊷",w1="Ƶ",E1="⇒",P1="℅",S1="∞",A1="⧝",I1="ı",G1="⊺",R1="∫",D1="∬",M1="ℤ",N1="∫",O1="⊺",B1="⋂",q1="⨗",F1="⨼",z1="⁣",V1="⁢",H1="Ё",j1="ё",U1="Į",$1="į",W1="𝕀",K1="𝕚",X1="Ι",Z1="ι",Y1="⨼",Q1="¿",J1="𝒾",e4="ℐ",t4="∈",n4="⋵",a4="⋹",s4="⋴",r4="⋳",o4="∈",i4="⁢",l4="Ĩ",u4="ĩ",m4="І",c4="і",g4="Ï",p4="ï",b4="Ĵ",d4="ĵ",h4="Й",f4="й",y4="𝔍",v4="𝔧",L4="ȷ",T4="𝕁",x4="𝕛",k4="𝒥",C4="𝒿",_4="Ј",w4="ј",E4="Є",P4="є",S4="Κ",A4="κ",I4="ϰ",G4="Ķ",R4="ķ",D4="К",M4="к",N4="𝔎",O4="𝔨",B4="ĸ",q4="Х",F4="х",z4="Ќ",V4="ќ",H4="𝕂",j4="𝕜",U4="𝒦",$4="𝓀",W4="⇚",K4="Ĺ",X4="ĺ",Z4="⦴",Y4="ℒ",Q4="Λ",J4="λ",e2="⟨",t2="⟪",n2="⦑",a2="⟨",s2="⪅",r2="ℒ",o2="«",i2="⇤",l2="⤟",u2="←",m2="↞",c2="⇐",g2="⤝",p2="↩",b2="↫",d2="⤹",h2="⥳",f2="↢",y2="⤙",v2="⤛",L2="⪫",T2="⪭",x2="⪭︀",k2="⤌",C2="⤎",_2="❲",w2="{",E2="[",P2="⦋",S2="⦏",A2="⦍",I2="Ľ",G2="ľ",R2="Ļ",D2="ļ",M2="⌈",N2="{",O2="Л",B2="л",q2="⤶",F2="“",z2="„",V2="⥧",H2="⥋",j2="↲",U2="≤",$2="≦",W2="⟨",K2="⇤",X2="←",Z2="←",Y2="⇐",Q2="⇆",J2="↢",e3="⌈",t3="⟦",n3="⥡",a3="⥙",s3="⇃",r3="⌊",o3="↽",i3="↼",l3="⇇",u3="↔",m3="↔",c3="⇔",g3="⇆",p3="⇋",b3="↭",d3="⥎",h3="↤",f3="⊣",y3="⥚",v3="⋋",L3="⧏",T3="⊲",x3="⊴",k3="⥑",C3="⥠",_3="⥘",w3="↿",E3="⥒",P3="↼",S3="⪋",A3="⋚",I3="≤",G3="≦",R3="⩽",D3="⪨",M3="⩽",N3="⩿",O3="⪁",B3="⪃",q3="⋚︀",F3="⪓",z3="⪅",V3="⋖",H3="⋚",j3="⪋",U3="⋚",$3="≦",W3="≶",K3="≶",X3="⪡",Z3="≲",Y3="⩽",Q3="≲",J3="⥼",ev="⌊",tv="𝔏",nv="𝔩",av="≶",sv="⪑",rv="⥢",ov="↽",iv="↼",lv="⥪",uv="▄",mv="Љ",cv="љ",gv="⇇",pv="≪",bv="⋘",dv="⌞",hv="⇚",fv="⥫",yv="◺",vv="Ŀ",Lv="ŀ",Tv="⎰",xv="⎰",kv="⪉",Cv="⪉",_v="⪇",wv="≨",Ev="⪇",Pv="≨",Sv="⋦",Av="⟬",Iv="⇽",Gv="⟦",Rv="⟵",Dv="⟵",Mv="⟸",Nv="⟷",Ov="⟷",Bv="⟺",qv="⟼",Fv="⟶",zv="⟶",Vv="⟹",Hv="↫",jv="↬",Uv="⦅",$v="𝕃",Wv="𝕝",Kv="⨭",Xv="⨴",Zv="∗",Yv="_",Qv="↙",Jv="↘",eL="◊",tL="◊",nL="⧫",aL="(",sL="⦓",rL="⇆",oL="⌟",iL="⇋",lL="⥭",uL="‎",mL="⊿",cL="‹",gL="𝓁",pL="ℒ",bL="↰",dL="↰",hL="≲",fL="⪍",yL="⪏",vL="[",LL="‘",TL="‚",xL="Ł",kL="ł",CL="⪦",_L="⩹",wL="<",EL="<",PL="≪",SL="⋖",AL="⋋",IL="⋉",GL="⥶",RL="⩻",DL="◃",ML="⊴",NL="◂",OL="⦖",BL="⥊",qL="⥦",FL="≨︀",zL="≨︀",VL="¯",HL="♂",jL="✠",UL="✠",$L="↦",WL="↦",KL="↧",XL="↤",ZL="↥",YL="▮",QL="⨩",JL="М",e9="м",t9="—",n9="∺",a9="∡",s9=" ",r9="ℳ",o9="𝔐",i9="𝔪",l9="℧",u9="µ",m9="*",c9="⫰",g9="∣",p9="·",b9="⊟",d9="−",h9="∸",f9="⨪",y9="∓",v9="⫛",L9="…",T9="∓",x9="⊧",k9="𝕄",C9="𝕞",_9="∓",w9="𝓂",E9="ℳ",P9="∾",S9="Μ",A9="μ",I9="⊸",G9="⊸",R9="∇",D9="Ń",M9="ń",N9="∠⃒",O9="≉",B9="⩰̸",q9="≋̸",F9="ŉ",z9="≉",V9="♮",H9="ℕ",j9="♮",U9=" ",$9="≎̸",W9="≏̸",K9="⩃",X9="Ň",Z9="ň",Y9="Ņ",Q9="ņ",J9="≇",eT="⩭̸",tT="⩂",nT="Н",aT="н",sT="–",rT="⤤",oT="↗",iT="⇗",lT="↗",uT="≠",mT="≐̸",cT="​",gT="​",pT="​",bT="​",dT="≢",hT="⤨",fT="≂̸",yT="≫",vT="≪",LT=`
`,TT="∄",xT="∄",kT="𝔑",CT="𝔫",_T="≧̸",wT="≱",ET="≱",PT="≧̸",ST="⩾̸",AT="⩾̸",IT="⋙̸",GT="≵",RT="≫⃒",DT="≯",MT="≯",NT="≫̸",OT="↮",BT="⇎",qT="⫲",FT="∋",zT="⋼",VT="⋺",HT="∋",jT="Њ",UT="њ",$T="↚",WT="⇍",KT="‥",XT="≦̸",ZT="≰",YT="↚",QT="⇍",JT="↮",e5="⇎",t5="≰",n5="≦̸",a5="⩽̸",s5="⩽̸",r5="≮",o5="⋘̸",i5="≴",l5="≪⃒",u5="≮",m5="⋪",c5="⋬",g5="≪̸",p5="∤",b5="⁠",d5=" ",h5="𝕟",f5="ℕ",y5="⫬",v5="¬",L5="≢",T5="≭",x5="∦",k5="∉",C5="≠",_5="≂̸",w5="∄",E5="≯",P5="≱",S5="≧̸",A5="≫̸",I5="≹",G5="⩾̸",R5="≵",D5="≎̸",M5="≏̸",N5="∉",O5="⋵̸",B5="⋹̸",q5="∉",F5="⋷",z5="⋶",V5="⧏̸",H5="⋪",j5="⋬",U5="≮",$5="≰",W5="≸",K5="≪̸",X5="⩽̸",Z5="≴",Y5="⪢̸",Q5="⪡̸",J5="∌",e6="∌",t6="⋾",n6="⋽",a6="⊀",s6="⪯̸",r6="⋠",o6="∌",i6="⧐̸",l6="⋫",u6="⋭",m6="⊏̸",c6="⋢",g6="⊐̸",p6="⋣",b6="⊂⃒",d6="⊈",h6="⊁",f6="⪰̸",y6="⋡",v6="≿̸",L6="⊃⃒",T6="⊉",x6="≁",k6="≄",C6="≇",_6="≉",w6="∤",E6="∦",P6="∦",S6="⫽⃥",A6="∂̸",I6="⨔",G6="⊀",R6="⋠",D6="⊀",M6="⪯̸",N6="⪯̸",O6="⤳̸",B6="↛",q6="⇏",F6="↝̸",z6="↛",V6="⇏",H6="⋫",j6="⋭",U6="⊁",$6="⋡",W6="⪰̸",K6="𝒩",X6="𝓃",Z6="∤",Y6="∦",Q6="≁",J6="≄",ex="≄",tx="∤",nx="∦",ax="⋢",sx="⋣",rx="⊄",ox="⫅̸",ix="⊈",lx="⊂⃒",ux="⊈",mx="⫅̸",cx="⊁",gx="⪰̸",px="⊅",bx="⫆̸",dx="⊉",hx="⊃⃒",fx="⊉",yx="⫆̸",vx="≹",Lx="Ñ",Tx="ñ",xx="≸",kx="⋪",Cx="⋬",_x="⋫",wx="⋭",Ex="Ν",Px="ν",Sx="#",Ax="№",Ix=" ",Gx="≍⃒",Rx="⊬",Dx="⊭",Mx="⊮",Nx="⊯",Ox="≥⃒",Bx=">⃒",qx="⤄",Fx="⧞",zx="⤂",Vx="≤⃒",Hx="<⃒",jx="⊴⃒",Ux="⤃",$x="⊵⃒",Wx="∼⃒",Kx="⤣",Xx="↖",Zx="⇖",Yx="↖",Qx="⤧",Jx="Ó",e8="ó",t8="⊛",n8="Ô",a8="ô",s8="⊚",r8="О",o8="о",i8="⊝",l8="Ő",u8="ő",m8="⨸",c8="⊙",g8="⦼",p8="Œ",b8="œ",d8="⦿",h8="𝔒",f8="𝔬",y8="˛",v8="Ò",L8="ò",T8="⧁",x8="⦵",k8="Ω",C8="∮",_8="↺",w8="⦾",E8="⦻",P8="‾",S8="⧀",A8="Ō",I8="ō",G8="Ω",R8="ω",D8="Ο",M8="ο",N8="⦶",O8="⊖",B8="𝕆",q8="𝕠",F8="⦷",z8="“",V8="‘",H8="⦹",j8="⊕",U8="↻",$8="⩔",W8="∨",K8="⩝",X8="ℴ",Z8="ℴ",Y8="ª",Q8="º",J8="⊶",ek="⩖",tk="⩗",nk="⩛",ak="Ⓢ",sk="𝒪",rk="ℴ",ok="Ø",ik="ø",lk="⊘",uk="Õ",mk="õ",ck="⨶",gk="⨷",pk="⊗",bk="Ö",dk="ö",hk="⌽",fk="‾",yk="⏞",vk="⎴",Lk="⏜",Tk="¶",xk="∥",kk="∥",Ck="⫳",_k="⫽",wk="∂",Ek="∂",Pk="П",Sk="п",Ak="%",Ik=".",Gk="‰",Rk="⊥",Dk="‱",Mk="𝔓",Nk="𝔭",Ok="Φ",Bk="φ",qk="ϕ",Fk="ℳ",zk="☎",Vk="Π",Hk="π",jk="⋔",Uk="ϖ",$k="ℏ",Wk="ℎ",Kk="ℏ",Xk="⨣",Zk="⊞",Yk="⨢",Qk="+",Jk="∔",eC="⨥",tC="⩲",nC="±",aC="±",sC="⨦",rC="⨧",oC="±",iC="ℌ",lC="⨕",uC="𝕡",mC="ℙ",cC="£",gC="⪷",pC="⪻",bC="≺",dC="≼",hC="⪷",fC="≺",yC="≼",vC="≺",LC="⪯",TC="≼",xC="≾",kC="⪯",CC="⪹",_C="⪵",wC="⋨",EC="⪯",PC="⪳",SC="≾",AC="′",IC="″",GC="ℙ",RC="⪹",DC="⪵",MC="⋨",NC="∏",OC="∏",BC="⌮",qC="⌒",FC="⌓",zC="∝",VC="∝",HC="∷",jC="∝",UC="≾",$C="⊰",WC="𝒫",KC="𝓅",XC="Ψ",ZC="ψ",YC=" ",QC="𝔔",JC="𝔮",e_="⨌",t_="𝕢",n_="ℚ",a_="⁗",s_="𝒬",r_="𝓆",o_="ℍ",i_="⨖",l_="?",u_="≟",m_='"',c_='"',g_="⇛",p_="∽̱",b_="Ŕ",d_="ŕ",h_="√",f_="⦳",y_="⟩",v_="⟫",L_="⦒",T_="⦥",x_="⟩",k_="»",C_="⥵",__="⇥",w_="⤠",E_="⤳",P_="→",S_="↠",A_="⇒",I_="⤞",G_="↪",R_="↬",D_="⥅",M_="⥴",N_="⤖",O_="↣",B_="↝",q_="⤚",F_="⤜",z_="∶",V_="ℚ",H_="⤍",j_="⤏",U_="⤐",$_="❳",W_="}",K_="]",X_="⦌",Z_="⦎",Y_="⦐",Q_="Ř",J_="ř",ew="Ŗ",tw="ŗ",nw="⌉",aw="}",sw="Р",rw="р",ow="⤷",iw="⥩",lw="”",uw="”",mw="↳",cw="ℜ",gw="ℛ",pw="ℜ",bw="ℝ",dw="ℜ",hw="▭",fw="®",yw="®",vw="∋",Lw="⇋",Tw="⥯",xw="⥽",kw="⌋",Cw="𝔯",_w="ℜ",ww="⥤",Ew="⇁",Pw="⇀",Sw="⥬",Aw="Ρ",Iw="ρ",Gw="ϱ",Rw="⟩",Dw="⇥",Mw="→",Nw="→",Ow="⇒",Bw="⇄",qw="↣",Fw="⌉",zw="⟧",Vw="⥝",Hw="⥕",jw="⇂",Uw="⌋",$w="⇁",Ww="⇀",Kw="⇄",Xw="⇌",Zw="⇉",Yw="↝",Qw="↦",Jw="⊢",eE="⥛",tE="⋌",nE="⧐",aE="⊳",sE="⊵",rE="⥏",oE="⥜",iE="⥔",lE="↾",uE="⥓",mE="⇀",cE="˚",gE="≓",pE="⇄",bE="⇌",dE="‏",hE="⎱",fE="⎱",yE="⫮",vE="⟭",LE="⇾",TE="⟧",xE="⦆",kE="𝕣",CE="ℝ",_E="⨮",wE="⨵",EE="⥰",PE=")",SE="⦔",AE="⨒",IE="⇉",GE="⇛",RE="›",DE="𝓇",ME="ℛ",NE="↱",OE="↱",BE="]",qE="’",FE="’",zE="⋌",VE="⋊",HE="▹",jE="⊵",UE="▸",$E="⧎",WE="⧴",KE="⥨",XE="℞",ZE="Ś",YE="ś",QE="‚",JE="⪸",eP="Š",tP="š",nP="⪼",aP="≻",sP="≽",rP="⪰",oP="⪴",iP="Ş",lP="ş",uP="Ŝ",mP="ŝ",cP="⪺",gP="⪶",pP="⋩",bP="⨓",dP="≿",hP="С",fP="с",yP="⊡",vP="⋅",LP="⩦",TP="⤥",xP="↘",kP="⇘",CP="↘",_P="§",wP=";",EP="⤩",PP="∖",SP="∖",AP="✶",IP="𝔖",GP="𝔰",RP="⌢",DP="♯",MP="Щ",NP="щ",OP="Ш",BP="ш",qP="↓",FP="←",zP="∣",VP="∥",HP="→",jP="↑",UP="­",$P="Σ",WP="σ",KP="ς",XP="ς",ZP="∼",YP="⩪",QP="≃",JP="≃",eS="⪞",tS="⪠",nS="⪝",aS="⪟",sS="≆",rS="⨤",oS="⥲",iS="←",lS="∘",uS="∖",mS="⨳",cS="⧤",gS="∣",pS="⌣",bS="⪪",dS="⪬",hS="⪬︀",fS="Ь",yS="ь",vS="⌿",LS="⧄",TS="/",xS="𝕊",kS="𝕤",CS="♠",_S="♠",wS="∥",ES="⊓",PS="⊓︀",SS="⊔",AS="⊔︀",IS="√",GS="⊏",RS="⊑",DS="⊏",MS="⊑",NS="⊐",OS="⊒",BS="⊐",qS="⊒",FS="□",zS="□",VS="⊓",HS="⊏",jS="⊑",US="⊐",$S="⊒",WS="⊔",KS="▪",XS="□",ZS="▪",YS="→",QS="𝒮",JS="𝓈",eA="∖",tA="⌣",nA="⋆",aA="⋆",sA="☆",rA="★",oA="ϵ",iA="ϕ",lA="¯",uA="⊂",mA="⋐",cA="⪽",gA="⫅",pA="⊆",bA="⫃",dA="⫁",hA="⫋",fA="⊊",yA="⪿",vA="⥹",LA="⊂",TA="⋐",xA="⊆",kA="⫅",CA="⊆",_A="⊊",wA="⫋",EA="⫇",PA="⫕",SA="⫓",AA="⪸",IA="≻",GA="≽",RA="≻",DA="⪰",MA="≽",NA="≿",OA="⪰",BA="⪺",qA="⪶",FA="⋩",zA="≿",VA="∋",HA="∑",jA="∑",UA="♪",$A="¹",WA="²",KA="³",XA="⊃",ZA="⋑",YA="⪾",QA="⫘",JA="⫆",eI="⊇",tI="⫄",nI="⊃",aI="⊇",sI="⟉",rI="⫗",oI="⥻",iI="⫂",lI="⫌",uI="⊋",mI="⫀",cI="⊃",gI="⋑",pI="⊇",bI="⫆",dI="⊋",hI="⫌",fI="⫈",yI="⫔",vI="⫖",LI="⤦",TI="↙",xI="⇙",kI="↙",CI="⤪",_I="ß",wI="	",EI="⌖",PI="Τ",SI="τ",AI="⎴",II="Ť",GI="ť",RI="Ţ",DI="ţ",MI="Т",NI="т",OI="⃛",BI="⌕",qI="𝔗",FI="𝔱",zI="∴",VI="∴",HI="∴",jI="Θ",UI="θ",$I="ϑ",WI="ϑ",KI="≈",XI="∼",ZI="  ",YI=" ",QI=" ",JI="≈",eG="∼",tG="Þ",nG="þ",aG="˜",sG="∼",rG="≃",oG="≅",iG="≈",lG="⨱",uG="⊠",mG="×",cG="⨰",gG="∭",pG="⤨",bG="⌶",dG="⫱",hG="⊤",fG="𝕋",yG="𝕥",vG="⫚",LG="⤩",TG="‴",xG="™",kG="™",CG="▵",_G="▿",wG="◃",EG="⊴",PG="≜",SG="▹",AG="⊵",IG="◬",GG="≜",RG="⨺",DG="⃛",MG="⨹",NG="⧍",OG="⨻",BG="⏢",qG="𝒯",FG="𝓉",zG="Ц",VG="ц",HG="Ћ",jG="ћ",UG="Ŧ",$G="ŧ",WG="≬",KG="↞",XG="↠",ZG="Ú",YG="ú",QG="↑",JG="↟",eR="⇑",tR="⥉",nR="Ў",aR="ў",sR="Ŭ",rR="ŭ",oR="Û",iR="û",lR="У",uR="у",mR="⇅",cR="Ű",gR="ű",pR="⥮",bR="⥾",dR="𝔘",hR="𝔲",fR="Ù",yR="ù",vR="⥣",LR="↿",TR="↾",xR="▀",kR="⌜",CR="⌜",_R="⌏",wR="◸",ER="Ū",PR="ū",SR="¨",AR="_",IR="⏟",GR="⎵",RR="⏝",DR="⋃",MR="⊎",NR="Ų",OR="ų",BR="𝕌",qR="𝕦",FR="⤒",zR="↑",VR="↑",HR="⇑",jR="⇅",UR="↕",$R="↕",WR="⇕",KR="⥮",XR="↿",ZR="↾",YR="⊎",QR="↖",JR="↗",eD="υ",tD="ϒ",nD="ϒ",aD="Υ",sD="υ",rD="↥",oD="⊥",iD="⇈",lD="⌝",uD="⌝",mD="⌎",cD="Ů",gD="ů",pD="◹",bD="𝒰",dD="𝓊",hD="⋰",fD="Ũ",yD="ũ",vD="▵",LD="▴",TD="⇈",xD="Ü",kD="ü",CD="⦧",_D="⦜",wD="ϵ",ED="ϰ",PD="∅",SD="ϕ",AD="ϖ",ID="∝",GD="↕",RD="⇕",DD="ϱ",MD="ς",ND="⊊︀",OD="⫋︀",BD="⊋︀",qD="⫌︀",FD="ϑ",zD="⊲",VD="⊳",HD="⫨",jD="⫫",UD="⫩",$D="В",WD="в",KD="⊢",XD="⊨",ZD="⊩",YD="⊫",QD="⫦",JD="⊻",eM="∨",tM="⋁",nM="≚",aM="⋮",sM="|",rM="‖",oM="|",iM="‖",lM="∣",uM="|",mM="❘",cM="≀",gM=" ",pM="𝔙",bM="𝔳",dM="⊲",hM="⊂⃒",fM="⊃⃒",yM="𝕍",vM="𝕧",LM="∝",TM="⊳",xM="𝒱",kM="𝓋",CM="⫋︀",_M="⊊︀",wM="⫌︀",EM="⊋︀",PM="⊪",SM="⦚",AM="Ŵ",IM="ŵ",GM="⩟",RM="∧",DM="⋀",MM="≙",NM="℘",OM="𝔚",BM="𝔴",qM="𝕎",FM="𝕨",zM="℘",VM="≀",HM="≀",jM="𝒲",UM="𝓌",$M="⋂",WM="◯",KM="⋃",XM="▽",ZM="𝔛",YM="𝔵",QM="⟷",JM="⟺",eN="Ξ",tN="ξ",nN="⟵",aN="⟸",sN="⟼",rN="⋻",oN="⨀",iN="𝕏",lN="𝕩",uN="⨁",mN="⨂",cN="⟶",gN="⟹",pN="𝒳",bN="𝓍",dN="⨆",hN="⨄",fN="△",yN="⋁",vN="⋀",LN="Ý",TN="ý",xN="Я",kN="я",CN="Ŷ",_N="ŷ",wN="Ы",EN="ы",PN="¥",SN="𝔜",AN="𝔶",IN="Ї",GN="ї",RN="𝕐",DN="𝕪",MN="𝒴",NN="𝓎",ON="Ю",BN="ю",qN="ÿ",FN="Ÿ",zN="Ź",VN="ź",HN="Ž",jN="ž",UN="З",$N="з",WN="Ż",KN="ż",XN="ℨ",ZN="​",YN="Ζ",QN="ζ",JN="𝔷",eO="ℨ",tO="Ж",nO="ж",aO="⇝",sO="𝕫",rO="ℤ",oO="𝒵",iO="𝓏",lO="‍",uO="‌",mO={Aacute:$i,aacute:Wi,Abreve:Ki,abreve:Xi,ac:Zi,acd:Yi,acE:Qi,Acirc:Ji,acirc:el,acute:tl,Acy:nl,acy:al,AElig:sl,aelig:rl,af:ol,Afr:il,afr:ll,Agrave:ul,agrave:ml,alefsym:cl,aleph:gl,Alpha:pl,alpha:bl,Amacr:dl,amacr:hl,amalg:fl,amp:yl,AMP:vl,andand:Ll,And:Tl,and:xl,andd:kl,andslope:Cl,andv:_l,ang:wl,ange:El,angle:Pl,angmsdaa:Sl,angmsdab:Al,angmsdac:Il,angmsdad:Gl,angmsdae:Rl,angmsdaf:Dl,angmsdag:Ml,angmsdah:Nl,angmsd:Ol,angrt:Bl,angrtvb:ql,angrtvbd:Fl,angsph:zl,angst:Vl,angzarr:Hl,Aogon:jl,aogon:Ul,Aopf:$l,aopf:Wl,apacir:Kl,ap:Xl,apE:Zl,ape:Yl,apid:Ql,apos:Jl,ApplyFunction:eu,approx:tu,approxeq:nu,Aring:au,aring:su,Ascr:ru,ascr:ou,Assign:iu,ast:lu,asymp:uu,asympeq:mu,Atilde:cu,atilde:gu,Auml:pu,auml:bu,awconint:du,awint:hu,backcong:fu,backepsilon:yu,backprime:vu,backsim:Lu,backsimeq:Tu,Backslash:xu,Barv:ku,barvee:Cu,barwed:_u,Barwed:wu,barwedge:Eu,bbrk:Pu,bbrktbrk:Su,bcong:Au,Bcy:Iu,bcy:Gu,bdquo:Ru,becaus:Du,because:Mu,Because:Nu,bemptyv:Ou,bepsi:Bu,bernou:qu,Bernoullis:Fu,Beta:zu,beta:Vu,beth:Hu,between:ju,Bfr:Uu,bfr:$u,bigcap:Wu,bigcirc:Ku,bigcup:Xu,bigodot:Zu,bigoplus:Yu,bigotimes:Qu,bigsqcup:Ju,bigstar:em,bigtriangledown:tm,bigtriangleup:nm,biguplus:am,bigvee:sm,bigwedge:rm,bkarow:om,blacklozenge:im,blacksquare:lm,blacktriangle:um,blacktriangledown:mm,blacktriangleleft:cm,blacktriangleright:gm,blank:pm,blk12:bm,blk14:dm,blk34:hm,block:fm,bne:ym,bnequiv:vm,bNot:Lm,bnot:Tm,Bopf:xm,bopf:km,bot:Cm,bottom:_m,bowtie:wm,boxbox:Em,boxdl:Pm,boxdL:Sm,boxDl:Am,boxDL:Im,boxdr:Gm,boxdR:Rm,boxDr:Dm,boxDR:Mm,boxh:Nm,boxH:Om,boxhd:Bm,boxHd:qm,boxhD:Fm,boxHD:zm,boxhu:Vm,boxHu:Hm,boxhU:jm,boxHU:Um,boxminus:$m,boxplus:Wm,boxtimes:Km,boxul:Xm,boxuL:Zm,boxUl:Ym,boxUL:Qm,boxur:Jm,boxuR:ec,boxUr:tc,boxUR:nc,boxv:ac,boxV:sc,boxvh:rc,boxvH:oc,boxVh:ic,boxVH:lc,boxvl:uc,boxvL:mc,boxVl:cc,boxVL:gc,boxvr:pc,boxvR:bc,boxVr:dc,boxVR:hc,bprime:fc,breve:yc,Breve:vc,brvbar:Lc,bscr:Tc,Bscr:xc,bsemi:kc,bsim:Cc,bsime:_c,bsolb:wc,bsol:Ec,bsolhsub:Pc,bull:Sc,bullet:Ac,bump:Ic,bumpE:Gc,bumpe:Rc,Bumpeq:Dc,bumpeq:Mc,Cacute:Nc,cacute:Oc,capand:Bc,capbrcup:qc,capcap:Fc,cap:zc,Cap:Vc,capcup:Hc,capdot:jc,CapitalDifferentialD:Uc,caps:$c,caret:Wc,caron:Kc,Cayleys:Xc,ccaps:Zc,Ccaron:Yc,ccaron:Qc,Ccedil:Jc,ccedil:eg,Ccirc:tg,ccirc:ng,Cconint:ag,ccups:sg,ccupssm:rg,Cdot:og,cdot:ig,cedil:lg,Cedilla:ug,cemptyv:mg,cent:cg,centerdot:gg,CenterDot:pg,cfr:bg,Cfr:dg,CHcy:hg,chcy:fg,check:yg,checkmark:vg,Chi:Lg,chi:Tg,circ:xg,circeq:kg,circlearrowleft:Cg,circlearrowright:_g,circledast:wg,circledcirc:Eg,circleddash:Pg,CircleDot:Sg,circledR:Ag,circledS:Ig,CircleMinus:Gg,CirclePlus:Rg,CircleTimes:Dg,cir:Mg,cirE:Ng,cire:Og,cirfnint:Bg,cirmid:qg,cirscir:Fg,ClockwiseContourIntegral:zg,CloseCurlyDoubleQuote:Vg,CloseCurlyQuote:Hg,clubs:jg,clubsuit:Ug,colon:$g,Colon:Wg,Colone:Kg,colone:Xg,coloneq:Zg,comma:Yg,commat:Qg,comp:Jg,compfn:ep,complement:tp,complexes:np,cong:ap,congdot:sp,Congruent:rp,conint:op,Conint:ip,ContourIntegral:lp,copf:up,Copf:mp,coprod:cp,Coproduct:gp,copy:pp,COPY:bp,copysr:dp,CounterClockwiseContourIntegral:hp,crarr:fp,cross:yp,Cross:vp,Cscr:Lp,cscr:Tp,csub:xp,csube:kp,csup:Cp,csupe:_p,ctdot:wp,cudarrl:Ep,cudarrr:Pp,cuepr:Sp,cuesc:Ap,cularr:Ip,cularrp:Gp,cupbrcap:Rp,cupcap:Dp,CupCap:Mp,cup:Np,Cup:Op,cupcup:Bp,cupdot:qp,cupor:Fp,cups:zp,curarr:Vp,curarrm:Hp,curlyeqprec:jp,curlyeqsucc:Up,curlyvee:$p,curlywedge:Wp,curren:Kp,curvearrowleft:Xp,curvearrowright:Zp,cuvee:Yp,cuwed:Qp,cwconint:Jp,cwint:eb,cylcty:tb,dagger:nb,Dagger:ab,daleth:sb,darr:rb,Darr:ob,dArr:ib,dash:lb,Dashv:ub,dashv:mb,dbkarow:cb,dblac:gb,Dcaron:pb,dcaron:bb,Dcy:db,dcy:hb,ddagger:fb,ddarr:yb,DD:vb,dd:Lb,DDotrahd:Tb,ddotseq:xb,deg:kb,Del:Cb,Delta:_b,delta:wb,demptyv:Eb,dfisht:Pb,Dfr:Sb,dfr:Ab,dHar:Ib,dharl:Gb,dharr:Rb,DiacriticalAcute:Db,DiacriticalDot:Mb,DiacriticalDoubleAcute:Nb,DiacriticalGrave:Ob,DiacriticalTilde:Bb,diam:qb,diamond:Fb,Diamond:zb,diamondsuit:Vb,diams:Hb,die:jb,DifferentialD:Ub,digamma:$b,disin:Wb,div:Kb,divide:Xb,divideontimes:Zb,divonx:Yb,DJcy:Qb,djcy:Jb,dlcorn:ed,dlcrop:td,dollar:nd,Dopf:ad,dopf:sd,Dot:rd,dot:od,DotDot:id,doteq:ld,doteqdot:ud,DotEqual:md,dotminus:cd,dotplus:gd,dotsquare:pd,doublebarwedge:bd,DoubleContourIntegral:dd,DoubleDot:hd,DoubleDownArrow:fd,DoubleLeftArrow:yd,DoubleLeftRightArrow:vd,DoubleLeftTee:Ld,DoubleLongLeftArrow:Td,DoubleLongLeftRightArrow:xd,DoubleLongRightArrow:kd,DoubleRightArrow:Cd,DoubleRightTee:_d,DoubleUpArrow:wd,DoubleUpDownArrow:Ed,DoubleVerticalBar:Pd,DownArrowBar:Sd,downarrow:Ad,DownArrow:Id,Downarrow:Gd,DownArrowUpArrow:Rd,DownBreve:Dd,downdownarrows:Md,downharpoonleft:Nd,downharpoonright:Od,DownLeftRightVector:Bd,DownLeftTeeVector:qd,DownLeftVectorBar:Fd,DownLeftVector:zd,DownRightTeeVector:Vd,DownRightVectorBar:Hd,DownRightVector:jd,DownTeeArrow:Ud,DownTee:$d,drbkarow:Wd,drcorn:Kd,drcrop:Xd,Dscr:Zd,dscr:Yd,DScy:Qd,dscy:Jd,dsol:eh,Dstrok:th,dstrok:nh,dtdot:ah,dtri:sh,dtrif:rh,duarr:oh,duhar:ih,dwangle:lh,DZcy:uh,dzcy:mh,dzigrarr:ch,Eacute:gh,eacute:ph,easter:bh,Ecaron:dh,ecaron:hh,Ecirc:fh,ecirc:yh,ecir:vh,ecolon:Lh,Ecy:Th,ecy:xh,eDDot:kh,Edot:Ch,edot:_h,eDot:wh,ee:Eh,efDot:Ph,Efr:Sh,efr:Ah,eg:Ih,Egrave:Gh,egrave:Rh,egs:Dh,egsdot:Mh,el:Nh,Element:Oh,elinters:Bh,ell:qh,els:Fh,elsdot:zh,Emacr:Vh,emacr:Hh,empty:jh,emptyset:Uh,EmptySmallSquare:$h,emptyv:Wh,EmptyVerySmallSquare:Kh,emsp13:Xh,emsp14:Zh,emsp:Yh,ENG:Qh,eng:Jh,ensp:ef,Eogon:tf,eogon:nf,Eopf:af,eopf:sf,epar:rf,eparsl:of,eplus:lf,epsi:uf,Epsilon:mf,epsilon:cf,epsiv:gf,eqcirc:pf,eqcolon:bf,eqsim:df,eqslantgtr:hf,eqslantless:ff,Equal:yf,equals:vf,EqualTilde:Lf,equest:Tf,Equilibrium:xf,equiv:kf,equivDD:Cf,eqvparsl:_f,erarr:wf,erDot:Ef,escr:Pf,Escr:Sf,esdot:Af,Esim:If,esim:Gf,Eta:Rf,eta:Df,ETH:Mf,eth:Nf,Euml:Of,euml:Bf,euro:qf,excl:Ff,exist:zf,Exists:Vf,expectation:Hf,exponentiale:jf,ExponentialE:Uf,fallingdotseq:$f,Fcy:Wf,fcy:Kf,female:Xf,ffilig:Zf,fflig:Yf,ffllig:Qf,Ffr:Jf,ffr:e0,filig:t0,FilledSmallSquare:n0,FilledVerySmallSquare:a0,fjlig:s0,flat:r0,fllig:o0,fltns:i0,fnof:l0,Fopf:u0,fopf:m0,forall:c0,ForAll:g0,fork:p0,forkv:b0,Fouriertrf:d0,fpartint:h0,frac12:f0,frac13:y0,frac14:v0,frac15:L0,frac16:T0,frac18:x0,frac23:k0,frac25:C0,frac34:_0,frac35:w0,frac38:E0,frac45:P0,frac56:S0,frac58:A0,frac78:I0,frasl:G0,frown:R0,fscr:D0,Fscr:M0,gacute:N0,Gamma:O0,gamma:B0,Gammad:q0,gammad:F0,gap:z0,Gbreve:V0,gbreve:H0,Gcedil:j0,Gcirc:U0,gcirc:$0,Gcy:W0,gcy:K0,Gdot:X0,gdot:Z0,ge:Y0,gE:Q0,gEl:J0,gel:e7,geq:t7,geqq:n7,geqslant:a7,gescc:s7,ges:r7,gesdot:o7,gesdoto:i7,gesdotol:l7,gesl:u7,gesles:m7,Gfr:c7,gfr:g7,gg:p7,Gg:b7,ggg:d7,gimel:h7,GJcy:f7,gjcy:y7,gla:v7,gl:L7,glE:T7,glj:x7,gnap:k7,gnapprox:C7,gne:_7,gnE:w7,gneq:E7,gneqq:P7,gnsim:S7,Gopf:A7,gopf:I7,grave:G7,GreaterEqual:R7,GreaterEqualLess:D7,GreaterFullEqual:M7,GreaterGreater:N7,GreaterLess:O7,GreaterSlantEqual:B7,GreaterTilde:q7,Gscr:F7,gscr:z7,gsim:V7,gsime:H7,gsiml:j7,gtcc:U7,gtcir:$7,gt:W7,GT:K7,Gt:X7,gtdot:Z7,gtlPar:Y7,gtquest:Q7,gtrapprox:J7,gtrarr:ey,gtrdot:ty,gtreqless:ny,gtreqqless:ay,gtrless:sy,gtrsim:ry,gvertneqq:oy,gvnE:iy,Hacek:ly,hairsp:uy,half:my,hamilt:cy,HARDcy:gy,hardcy:py,harrcir:by,harr:dy,hArr:hy,harrw:fy,Hat:yy,hbar:vy,Hcirc:Ly,hcirc:Ty,hearts:xy,heartsuit:ky,hellip:Cy,hercon:_y,hfr:wy,Hfr:Ey,HilbertSpace:Py,hksearow:Sy,hkswarow:Ay,hoarr:Iy,homtht:Gy,hookleftarrow:Ry,hookrightarrow:Dy,hopf:My,Hopf:Ny,horbar:Oy,HorizontalLine:By,hscr:qy,Hscr:Fy,hslash:zy,Hstrok:Vy,hstrok:Hy,HumpDownHump:jy,HumpEqual:Uy,hybull:$y,hyphen:Wy,Iacute:Ky,iacute:Xy,ic:Zy,Icirc:Yy,icirc:Qy,Icy:Jy,icy:e1,Idot:t1,IEcy:n1,iecy:a1,iexcl:s1,iff:r1,ifr:o1,Ifr:i1,Igrave:l1,igrave:u1,ii:m1,iiiint:c1,iiint:g1,iinfin:p1,iiota:b1,IJlig:d1,ijlig:h1,Imacr:f1,imacr:y1,image:v1,ImaginaryI:L1,imagline:T1,imagpart:x1,imath:k1,Im:C1,imof:_1,imped:w1,Implies:E1,incare:P1,in:"∈",infin:S1,infintie:A1,inodot:I1,intcal:G1,int:R1,Int:D1,integers:M1,Integral:N1,intercal:O1,Intersection:B1,intlarhk:q1,intprod:F1,InvisibleComma:z1,InvisibleTimes:V1,IOcy:H1,iocy:j1,Iogon:U1,iogon:$1,Iopf:W1,iopf:K1,Iota:X1,iota:Z1,iprod:Y1,iquest:Q1,iscr:J1,Iscr:e4,isin:t4,isindot:n4,isinE:a4,isins:s4,isinsv:r4,isinv:o4,it:i4,Itilde:l4,itilde:u4,Iukcy:m4,iukcy:c4,Iuml:g4,iuml:p4,Jcirc:b4,jcirc:d4,Jcy:h4,jcy:f4,Jfr:y4,jfr:v4,jmath:L4,Jopf:T4,jopf:x4,Jscr:k4,jscr:C4,Jsercy:_4,jsercy:w4,Jukcy:E4,jukcy:P4,Kappa:S4,kappa:A4,kappav:I4,Kcedil:G4,kcedil:R4,Kcy:D4,kcy:M4,Kfr:N4,kfr:O4,kgreen:B4,KHcy:q4,khcy:F4,KJcy:z4,kjcy:V4,Kopf:H4,kopf:j4,Kscr:U4,kscr:$4,lAarr:W4,Lacute:K4,lacute:X4,laemptyv:Z4,lagran:Y4,Lambda:Q4,lambda:J4,lang:e2,Lang:t2,langd:n2,langle:a2,lap:s2,Laplacetrf:r2,laquo:o2,larrb:i2,larrbfs:l2,larr:u2,Larr:m2,lArr:c2,larrfs:g2,larrhk:p2,larrlp:b2,larrpl:d2,larrsim:h2,larrtl:f2,latail:y2,lAtail:v2,lat:L2,late:T2,lates:x2,lbarr:k2,lBarr:C2,lbbrk:_2,lbrace:w2,lbrack:E2,lbrke:P2,lbrksld:S2,lbrkslu:A2,Lcaron:I2,lcaron:G2,Lcedil:R2,lcedil:D2,lceil:M2,lcub:N2,Lcy:O2,lcy:B2,ldca:q2,ldquo:F2,ldquor:z2,ldrdhar:V2,ldrushar:H2,ldsh:j2,le:U2,lE:$2,LeftAngleBracket:W2,LeftArrowBar:K2,leftarrow:X2,LeftArrow:Z2,Leftarrow:Y2,LeftArrowRightArrow:Q2,leftarrowtail:J2,LeftCeiling:e3,LeftDoubleBracket:t3,LeftDownTeeVector:n3,LeftDownVectorBar:a3,LeftDownVector:s3,LeftFloor:r3,leftharpoondown:o3,leftharpoonup:i3,leftleftarrows:l3,leftrightarrow:u3,LeftRightArrow:m3,Leftrightarrow:c3,leftrightarrows:g3,leftrightharpoons:p3,leftrightsquigarrow:b3,LeftRightVector:d3,LeftTeeArrow:h3,LeftTee:f3,LeftTeeVector:y3,leftthreetimes:v3,LeftTriangleBar:L3,LeftTriangle:T3,LeftTriangleEqual:x3,LeftUpDownVector:k3,LeftUpTeeVector:C3,LeftUpVectorBar:_3,LeftUpVector:w3,LeftVectorBar:E3,LeftVector:P3,lEg:S3,leg:A3,leq:I3,leqq:G3,leqslant:R3,lescc:D3,les:M3,lesdot:N3,lesdoto:O3,lesdotor:B3,lesg:q3,lesges:F3,lessapprox:z3,lessdot:V3,lesseqgtr:H3,lesseqqgtr:j3,LessEqualGreater:U3,LessFullEqual:$3,LessGreater:W3,lessgtr:K3,LessLess:X3,lesssim:Z3,LessSlantEqual:Y3,LessTilde:Q3,lfisht:J3,lfloor:ev,Lfr:tv,lfr:nv,lg:av,lgE:sv,lHar:rv,lhard:ov,lharu:iv,lharul:lv,lhblk:uv,LJcy:mv,ljcy:cv,llarr:gv,ll:pv,Ll:bv,llcorner:dv,Lleftarrow:hv,llhard:fv,lltri:yv,Lmidot:vv,lmidot:Lv,lmoustache:Tv,lmoust:xv,lnap:kv,lnapprox:Cv,lne:_v,lnE:wv,lneq:Ev,lneqq:Pv,lnsim:Sv,loang:Av,loarr:Iv,lobrk:Gv,longleftarrow:Rv,LongLeftArrow:Dv,Longleftarrow:Mv,longleftrightarrow:Nv,LongLeftRightArrow:Ov,Longleftrightarrow:Bv,longmapsto:qv,longrightarrow:Fv,LongRightArrow:zv,Longrightarrow:Vv,looparrowleft:Hv,looparrowright:jv,lopar:Uv,Lopf:$v,lopf:Wv,loplus:Kv,lotimes:Xv,lowast:Zv,lowbar:Yv,LowerLeftArrow:Qv,LowerRightArrow:Jv,loz:eL,lozenge:tL,lozf:nL,lpar:aL,lparlt:sL,lrarr:rL,lrcorner:oL,lrhar:iL,lrhard:lL,lrm:uL,lrtri:mL,lsaquo:cL,lscr:gL,Lscr:pL,lsh:bL,Lsh:dL,lsim:hL,lsime:fL,lsimg:yL,lsqb:vL,lsquo:LL,lsquor:TL,Lstrok:xL,lstrok:kL,ltcc:CL,ltcir:_L,lt:wL,LT:EL,Lt:PL,ltdot:SL,lthree:AL,ltimes:IL,ltlarr:GL,ltquest:RL,ltri:DL,ltrie:ML,ltrif:NL,ltrPar:OL,lurdshar:BL,luruhar:qL,lvertneqq:FL,lvnE:zL,macr:VL,male:HL,malt:jL,maltese:UL,Map:"⤅",map:$L,mapsto:WL,mapstodown:KL,mapstoleft:XL,mapstoup:ZL,marker:YL,mcomma:QL,Mcy:JL,mcy:e9,mdash:t9,mDDot:n9,measuredangle:a9,MediumSpace:s9,Mellintrf:r9,Mfr:o9,mfr:i9,mho:l9,micro:u9,midast:m9,midcir:c9,mid:g9,middot:p9,minusb:b9,minus:d9,minusd:h9,minusdu:f9,MinusPlus:y9,mlcp:v9,mldr:L9,mnplus:T9,models:x9,Mopf:k9,mopf:C9,mp:_9,mscr:w9,Mscr:E9,mstpos:P9,Mu:S9,mu:A9,multimap:I9,mumap:G9,nabla:R9,Nacute:D9,nacute:M9,nang:N9,nap:O9,napE:B9,napid:q9,napos:F9,napprox:z9,natural:V9,naturals:H9,natur:j9,nbsp:U9,nbump:$9,nbumpe:W9,ncap:K9,Ncaron:X9,ncaron:Z9,Ncedil:Y9,ncedil:Q9,ncong:J9,ncongdot:eT,ncup:tT,Ncy:nT,ncy:aT,ndash:sT,nearhk:rT,nearr:oT,neArr:iT,nearrow:lT,ne:uT,nedot:mT,NegativeMediumSpace:cT,NegativeThickSpace:gT,NegativeThinSpace:pT,NegativeVeryThinSpace:bT,nequiv:dT,nesear:hT,nesim:fT,NestedGreaterGreater:yT,NestedLessLess:vT,NewLine:LT,nexist:TT,nexists:xT,Nfr:kT,nfr:CT,ngE:_T,nge:wT,ngeq:ET,ngeqq:PT,ngeqslant:ST,nges:AT,nGg:IT,ngsim:GT,nGt:RT,ngt:DT,ngtr:MT,nGtv:NT,nharr:OT,nhArr:BT,nhpar:qT,ni:FT,nis:zT,nisd:VT,niv:HT,NJcy:jT,njcy:UT,nlarr:$T,nlArr:WT,nldr:KT,nlE:XT,nle:ZT,nleftarrow:YT,nLeftarrow:QT,nleftrightarrow:JT,nLeftrightarrow:e5,nleq:t5,nleqq:n5,nleqslant:a5,nles:s5,nless:r5,nLl:o5,nlsim:i5,nLt:l5,nlt:u5,nltri:m5,nltrie:c5,nLtv:g5,nmid:p5,NoBreak:b5,NonBreakingSpace:d5,nopf:h5,Nopf:f5,Not:y5,not:v5,NotCongruent:L5,NotCupCap:T5,NotDoubleVerticalBar:x5,NotElement:k5,NotEqual:C5,NotEqualTilde:_5,NotExists:w5,NotGreater:E5,NotGreaterEqual:P5,NotGreaterFullEqual:S5,NotGreaterGreater:A5,NotGreaterLess:I5,NotGreaterSlantEqual:G5,NotGreaterTilde:R5,NotHumpDownHump:D5,NotHumpEqual:M5,notin:N5,notindot:O5,notinE:B5,notinva:q5,notinvb:F5,notinvc:z5,NotLeftTriangleBar:V5,NotLeftTriangle:H5,NotLeftTriangleEqual:j5,NotLess:U5,NotLessEqual:$5,NotLessGreater:W5,NotLessLess:K5,NotLessSlantEqual:X5,NotLessTilde:Z5,NotNestedGreaterGreater:Y5,NotNestedLessLess:Q5,notni:J5,notniva:e6,notnivb:t6,notnivc:n6,NotPrecedes:a6,NotPrecedesEqual:s6,NotPrecedesSlantEqual:r6,NotReverseElement:o6,NotRightTriangleBar:i6,NotRightTriangle:l6,NotRightTriangleEqual:u6,NotSquareSubset:m6,NotSquareSubsetEqual:c6,NotSquareSuperset:g6,NotSquareSupersetEqual:p6,NotSubset:b6,NotSubsetEqual:d6,NotSucceeds:h6,NotSucceedsEqual:f6,NotSucceedsSlantEqual:y6,NotSucceedsTilde:v6,NotSuperset:L6,NotSupersetEqual:T6,NotTilde:x6,NotTildeEqual:k6,NotTildeFullEqual:C6,NotTildeTilde:_6,NotVerticalBar:w6,nparallel:E6,npar:P6,nparsl:S6,npart:A6,npolint:I6,npr:G6,nprcue:R6,nprec:D6,npreceq:M6,npre:N6,nrarrc:O6,nrarr:B6,nrArr:q6,nrarrw:F6,nrightarrow:z6,nRightarrow:V6,nrtri:H6,nrtrie:j6,nsc:U6,nsccue:$6,nsce:W6,Nscr:K6,nscr:X6,nshortmid:Z6,nshortparallel:Y6,nsim:Q6,nsime:J6,nsimeq:ex,nsmid:tx,nspar:nx,nsqsube:ax,nsqsupe:sx,nsub:rx,nsubE:ox,nsube:ix,nsubset:lx,nsubseteq:ux,nsubseteqq:mx,nsucc:cx,nsucceq:gx,nsup:px,nsupE:bx,nsupe:dx,nsupset:hx,nsupseteq:fx,nsupseteqq:yx,ntgl:vx,Ntilde:Lx,ntilde:Tx,ntlg:xx,ntriangleleft:kx,ntrianglelefteq:Cx,ntriangleright:_x,ntrianglerighteq:wx,Nu:Ex,nu:Px,num:Sx,numero:Ax,numsp:Ix,nvap:Gx,nvdash:Rx,nvDash:Dx,nVdash:Mx,nVDash:Nx,nvge:Ox,nvgt:Bx,nvHarr:qx,nvinfin:Fx,nvlArr:zx,nvle:Vx,nvlt:Hx,nvltrie:jx,nvrArr:Ux,nvrtrie:$x,nvsim:Wx,nwarhk:Kx,nwarr:Xx,nwArr:Zx,nwarrow:Yx,nwnear:Qx,Oacute:Jx,oacute:e8,oast:t8,Ocirc:n8,ocirc:a8,ocir:s8,Ocy:r8,ocy:o8,odash:i8,Odblac:l8,odblac:u8,odiv:m8,odot:c8,odsold:g8,OElig:p8,oelig:b8,ofcir:d8,Ofr:h8,ofr:f8,ogon:y8,Ograve:v8,ograve:L8,ogt:T8,ohbar:x8,ohm:k8,oint:C8,olarr:_8,olcir:w8,olcross:E8,oline:P8,olt:S8,Omacr:A8,omacr:I8,Omega:G8,omega:R8,Omicron:D8,omicron:M8,omid:N8,ominus:O8,Oopf:B8,oopf:q8,opar:F8,OpenCurlyDoubleQuote:z8,OpenCurlyQuote:V8,operp:H8,oplus:j8,orarr:U8,Or:$8,or:W8,ord:K8,order:X8,orderof:Z8,ordf:Y8,ordm:Q8,origof:J8,oror:ek,orslope:tk,orv:nk,oS:ak,Oscr:sk,oscr:rk,Oslash:ok,oslash:ik,osol:lk,Otilde:uk,otilde:mk,otimesas:ck,Otimes:gk,otimes:pk,Ouml:bk,ouml:dk,ovbar:hk,OverBar:fk,OverBrace:yk,OverBracket:vk,OverParenthesis:Lk,para:Tk,parallel:xk,par:kk,parsim:Ck,parsl:_k,part:wk,PartialD:Ek,Pcy:Pk,pcy:Sk,percnt:Ak,period:Ik,permil:Gk,perp:Rk,pertenk:Dk,Pfr:Mk,pfr:Nk,Phi:Ok,phi:Bk,phiv:qk,phmmat:Fk,phone:zk,Pi:Vk,pi:Hk,pitchfork:jk,piv:Uk,planck:$k,planckh:Wk,plankv:Kk,plusacir:Xk,plusb:Zk,pluscir:Yk,plus:Qk,plusdo:Jk,plusdu:eC,pluse:tC,PlusMinus:nC,plusmn:aC,plussim:sC,plustwo:rC,pm:oC,Poincareplane:iC,pointint:lC,popf:uC,Popf:mC,pound:cC,prap:gC,Pr:pC,pr:bC,prcue:dC,precapprox:hC,prec:fC,preccurlyeq:yC,Precedes:vC,PrecedesEqual:LC,PrecedesSlantEqual:TC,PrecedesTilde:xC,preceq:kC,precnapprox:CC,precneqq:_C,precnsim:wC,pre:EC,prE:PC,precsim:SC,prime:AC,Prime:IC,primes:GC,prnap:RC,prnE:DC,prnsim:MC,prod:NC,Product:OC,profalar:BC,profline:qC,profsurf:FC,prop:zC,Proportional:VC,Proportion:HC,propto:jC,prsim:UC,prurel:$C,Pscr:WC,pscr:KC,Psi:XC,psi:ZC,puncsp:YC,Qfr:QC,qfr:JC,qint:e_,qopf:t_,Qopf:n_,qprime:a_,Qscr:s_,qscr:r_,quaternions:o_,quatint:i_,quest:l_,questeq:u_,quot:m_,QUOT:c_,rAarr:g_,race:p_,Racute:b_,racute:d_,radic:h_,raemptyv:f_,rang:y_,Rang:v_,rangd:L_,range:T_,rangle:x_,raquo:k_,rarrap:C_,rarrb:__,rarrbfs:w_,rarrc:E_,rarr:P_,Rarr:S_,rArr:A_,rarrfs:I_,rarrhk:G_,rarrlp:R_,rarrpl:D_,rarrsim:M_,Rarrtl:N_,rarrtl:O_,rarrw:B_,ratail:q_,rAtail:F_,ratio:z_,rationals:V_,rbarr:H_,rBarr:j_,RBarr:U_,rbbrk:$_,rbrace:W_,rbrack:K_,rbrke:X_,rbrksld:Z_,rbrkslu:Y_,Rcaron:Q_,rcaron:J_,Rcedil:ew,rcedil:tw,rceil:nw,rcub:aw,Rcy:sw,rcy:rw,rdca:ow,rdldhar:iw,rdquo:lw,rdquor:uw,rdsh:mw,real:cw,realine:gw,realpart:pw,reals:bw,Re:dw,rect:hw,reg:fw,REG:yw,ReverseElement:vw,ReverseEquilibrium:Lw,ReverseUpEquilibrium:Tw,rfisht:xw,rfloor:kw,rfr:Cw,Rfr:_w,rHar:ww,rhard:Ew,rharu:Pw,rharul:Sw,Rho:Aw,rho:Iw,rhov:Gw,RightAngleBracket:Rw,RightArrowBar:Dw,rightarrow:Mw,RightArrow:Nw,Rightarrow:Ow,RightArrowLeftArrow:Bw,rightarrowtail:qw,RightCeiling:Fw,RightDoubleBracket:zw,RightDownTeeVector:Vw,RightDownVectorBar:Hw,RightDownVector:jw,RightFloor:Uw,rightharpoondown:$w,rightharpoonup:Ww,rightleftarrows:Kw,rightleftharpoons:Xw,rightrightarrows:Zw,rightsquigarrow:Yw,RightTeeArrow:Qw,RightTee:Jw,RightTeeVector:eE,rightthreetimes:tE,RightTriangleBar:nE,RightTriangle:aE,RightTriangleEqual:sE,RightUpDownVector:rE,RightUpTeeVector:oE,RightUpVectorBar:iE,RightUpVector:lE,RightVectorBar:uE,RightVector:mE,ring:cE,risingdotseq:gE,rlarr:pE,rlhar:bE,rlm:dE,rmoustache:hE,rmoust:fE,rnmid:yE,roang:vE,roarr:LE,robrk:TE,ropar:xE,ropf:kE,Ropf:CE,roplus:_E,rotimes:wE,RoundImplies:EE,rpar:PE,rpargt:SE,rppolint:AE,rrarr:IE,Rrightarrow:GE,rsaquo:RE,rscr:DE,Rscr:ME,rsh:NE,Rsh:OE,rsqb:BE,rsquo:qE,rsquor:FE,rthree:zE,rtimes:VE,rtri:HE,rtrie:jE,rtrif:UE,rtriltri:$E,RuleDelayed:WE,ruluhar:KE,rx:XE,Sacute:ZE,sacute:YE,sbquo:QE,scap:JE,Scaron:eP,scaron:tP,Sc:nP,sc:aP,sccue:sP,sce:rP,scE:oP,Scedil:iP,scedil:lP,Scirc:uP,scirc:mP,scnap:cP,scnE:gP,scnsim:pP,scpolint:bP,scsim:dP,Scy:hP,scy:fP,sdotb:yP,sdot:vP,sdote:LP,searhk:TP,searr:xP,seArr:kP,searrow:CP,sect:_P,semi:wP,seswar:EP,setminus:PP,setmn:SP,sext:AP,Sfr:IP,sfr:GP,sfrown:RP,sharp:DP,SHCHcy:MP,shchcy:NP,SHcy:OP,shcy:BP,ShortDownArrow:qP,ShortLeftArrow:FP,shortmid:zP,shortparallel:VP,ShortRightArrow:HP,ShortUpArrow:jP,shy:UP,Sigma:$P,sigma:WP,sigmaf:KP,sigmav:XP,sim:ZP,simdot:YP,sime:QP,simeq:JP,simg:eS,simgE:tS,siml:nS,simlE:aS,simne:sS,simplus:rS,simrarr:oS,slarr:iS,SmallCircle:lS,smallsetminus:uS,smashp:mS,smeparsl:cS,smid:gS,smile:pS,smt:bS,smte:dS,smtes:hS,SOFTcy:fS,softcy:yS,solbar:vS,solb:LS,sol:TS,Sopf:xS,sopf:kS,spades:CS,spadesuit:_S,spar:wS,sqcap:ES,sqcaps:PS,sqcup:SS,sqcups:AS,Sqrt:IS,sqsub:GS,sqsube:RS,sqsubset:DS,sqsubseteq:MS,sqsup:NS,sqsupe:OS,sqsupset:BS,sqsupseteq:qS,square:FS,Square:zS,SquareIntersection:VS,SquareSubset:HS,SquareSubsetEqual:jS,SquareSuperset:US,SquareSupersetEqual:$S,SquareUnion:WS,squarf:KS,squ:XS,squf:ZS,srarr:YS,Sscr:QS,sscr:JS,ssetmn:eA,ssmile:tA,sstarf:nA,Star:aA,star:sA,starf:rA,straightepsilon:oA,straightphi:iA,strns:lA,sub:uA,Sub:mA,subdot:cA,subE:gA,sube:pA,subedot:bA,submult:dA,subnE:hA,subne:fA,subplus:yA,subrarr:vA,subset:LA,Subset:TA,subseteq:xA,subseteqq:kA,SubsetEqual:CA,subsetneq:_A,subsetneqq:wA,subsim:EA,subsub:PA,subsup:SA,succapprox:AA,succ:IA,succcurlyeq:GA,Succeeds:RA,SucceedsEqual:DA,SucceedsSlantEqual:MA,SucceedsTilde:NA,succeq:OA,succnapprox:BA,succneqq:qA,succnsim:FA,succsim:zA,SuchThat:VA,sum:HA,Sum:jA,sung:UA,sup1:$A,sup2:WA,sup3:KA,sup:XA,Sup:ZA,supdot:YA,supdsub:QA,supE:JA,supe:eI,supedot:tI,Superset:nI,SupersetEqual:aI,suphsol:sI,suphsub:rI,suplarr:oI,supmult:iI,supnE:lI,supne:uI,supplus:mI,supset:cI,Supset:gI,supseteq:pI,supseteqq:bI,supsetneq:dI,supsetneqq:hI,supsim:fI,supsub:yI,supsup:vI,swarhk:LI,swarr:TI,swArr:xI,swarrow:kI,swnwar:CI,szlig:_I,Tab:wI,target:EI,Tau:PI,tau:SI,tbrk:AI,Tcaron:II,tcaron:GI,Tcedil:RI,tcedil:DI,Tcy:MI,tcy:NI,tdot:OI,telrec:BI,Tfr:qI,tfr:FI,there4:zI,therefore:VI,Therefore:HI,Theta:jI,theta:UI,thetasym:$I,thetav:WI,thickapprox:KI,thicksim:XI,ThickSpace:ZI,ThinSpace:YI,thinsp:QI,thkap:JI,thksim:eG,THORN:tG,thorn:nG,tilde:aG,Tilde:sG,TildeEqual:rG,TildeFullEqual:oG,TildeTilde:iG,timesbar:lG,timesb:uG,times:mG,timesd:cG,tint:gG,toea:pG,topbot:bG,topcir:dG,top:hG,Topf:fG,topf:yG,topfork:vG,tosa:LG,tprime:TG,trade:xG,TRADE:kG,triangle:CG,triangledown:_G,triangleleft:wG,trianglelefteq:EG,triangleq:PG,triangleright:SG,trianglerighteq:AG,tridot:IG,trie:GG,triminus:RG,TripleDot:DG,triplus:MG,trisb:NG,tritime:OG,trpezium:BG,Tscr:qG,tscr:FG,TScy:zG,tscy:VG,TSHcy:HG,tshcy:jG,Tstrok:UG,tstrok:$G,twixt:WG,twoheadleftarrow:KG,twoheadrightarrow:XG,Uacute:ZG,uacute:YG,uarr:QG,Uarr:JG,uArr:eR,Uarrocir:tR,Ubrcy:nR,ubrcy:aR,Ubreve:sR,ubreve:rR,Ucirc:oR,ucirc:iR,Ucy:lR,ucy:uR,udarr:mR,Udblac:cR,udblac:gR,udhar:pR,ufisht:bR,Ufr:dR,ufr:hR,Ugrave:fR,ugrave:yR,uHar:vR,uharl:LR,uharr:TR,uhblk:xR,ulcorn:kR,ulcorner:CR,ulcrop:_R,ultri:wR,Umacr:ER,umacr:PR,uml:SR,UnderBar:AR,UnderBrace:IR,UnderBracket:GR,UnderParenthesis:RR,Union:DR,UnionPlus:MR,Uogon:NR,uogon:OR,Uopf:BR,uopf:qR,UpArrowBar:FR,uparrow:zR,UpArrow:VR,Uparrow:HR,UpArrowDownArrow:jR,updownarrow:UR,UpDownArrow:$R,Updownarrow:WR,UpEquilibrium:KR,upharpoonleft:XR,upharpoonright:ZR,uplus:YR,UpperLeftArrow:QR,UpperRightArrow:JR,upsi:eD,Upsi:tD,upsih:nD,Upsilon:aD,upsilon:sD,UpTeeArrow:rD,UpTee:oD,upuparrows:iD,urcorn:lD,urcorner:uD,urcrop:mD,Uring:cD,uring:gD,urtri:pD,Uscr:bD,uscr:dD,utdot:hD,Utilde:fD,utilde:yD,utri:vD,utrif:LD,uuarr:TD,Uuml:xD,uuml:kD,uwangle:CD,vangrt:_D,varepsilon:wD,varkappa:ED,varnothing:PD,varphi:SD,varpi:AD,varpropto:ID,varr:GD,vArr:RD,varrho:DD,varsigma:MD,varsubsetneq:ND,varsubsetneqq:OD,varsupsetneq:BD,varsupsetneqq:qD,vartheta:FD,vartriangleleft:zD,vartriangleright:VD,vBar:HD,Vbar:jD,vBarv:UD,Vcy:$D,vcy:WD,vdash:KD,vDash:XD,Vdash:ZD,VDash:YD,Vdashl:QD,veebar:JD,vee:eM,Vee:tM,veeeq:nM,vellip:aM,verbar:sM,Verbar:rM,vert:oM,Vert:iM,VerticalBar:lM,VerticalLine:uM,VerticalSeparator:mM,VerticalTilde:cM,VeryThinSpace:gM,Vfr:pM,vfr:bM,vltri:dM,vnsub:hM,vnsup:fM,Vopf:yM,vopf:vM,vprop:LM,vrtri:TM,Vscr:xM,vscr:kM,vsubnE:CM,vsubne:_M,vsupnE:wM,vsupne:EM,Vvdash:PM,vzigzag:SM,Wcirc:AM,wcirc:IM,wedbar:GM,wedge:RM,Wedge:DM,wedgeq:MM,weierp:NM,Wfr:OM,wfr:BM,Wopf:qM,wopf:FM,wp:zM,wr:VM,wreath:HM,Wscr:jM,wscr:UM,xcap:$M,xcirc:WM,xcup:KM,xdtri:XM,Xfr:ZM,xfr:YM,xharr:QM,xhArr:JM,Xi:eN,xi:tN,xlarr:nN,xlArr:aN,xmap:sN,xnis:rN,xodot:oN,Xopf:iN,xopf:lN,xoplus:uN,xotime:mN,xrarr:cN,xrArr:gN,Xscr:pN,xscr:bN,xsqcup:dN,xuplus:hN,xutri:fN,xvee:yN,xwedge:vN,Yacute:LN,yacute:TN,YAcy:xN,yacy:kN,Ycirc:CN,ycirc:_N,Ycy:wN,ycy:EN,yen:PN,Yfr:SN,yfr:AN,YIcy:IN,yicy:GN,Yopf:RN,yopf:DN,Yscr:MN,yscr:NN,YUcy:ON,yucy:BN,yuml:qN,Yuml:FN,Zacute:zN,zacute:VN,Zcaron:HN,zcaron:jN,Zcy:UN,zcy:$N,Zdot:WN,zdot:KN,zeetrf:XN,ZeroWidthSpace:ZN,Zeta:YN,zeta:QN,zfr:JN,Zfr:eO,ZHcy:tO,zhcy:nO,zigrarr:aO,zopf:sO,Zopf:rO,Zscr:oO,zscr:iO,zwj:lO,zwnj:uO};(function(t){t.exports=mO})(Ui);var In=/[!-#%-\*,-\/:;\?@\[-\]_\{\}\xA1\xA7\xAB\xB6\xB7\xBB\xBF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166D\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4E\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]|\uD800[\uDD00-\uDD02\uDF9F\uDFD0]|\uD801\uDD6F|\uD802[\uDC57\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD803[\uDF55-\uDF59]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC8\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9]|\uD805[\uDC4B-\uDC4F\uDC5B\uDC5D\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDE60-\uDE6C\uDF3C-\uDF3E]|\uD806[\uDC3B\uDE3F-\uDE46\uDE9A-\uDE9C\uDE9E-\uDEA2]|\uD807[\uDC41-\uDC45\uDC70\uDC71\uDEF7\uDEF8]|\uD809[\uDC70-\uDC74]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3B\uDF44]|\uD81B[\uDE97-\uDE9A]|\uD82F\uDC9F|\uD836[\uDE87-\uDE8B]|\uD83A[\uDD5E\uDD5F]/,Qe={},ma={};function cO(t){var e,n,a=ma[t];if(a)return a;for(a=ma[t]=[],e=0;e<128;e++)n=String.fromCharCode(e),/^[0-9a-z]$/i.test(n)?a.push(n):a.push("%"+("0"+e.toString(16).toUpperCase()).slice(-2));for(e=0;e<t.length;e++)a[t.charCodeAt(e)]=t[e];return a}function Pt(t,e,n){var a,s,r,i,o,l="";for(typeof e!="string"&&(n=e,e=Pt.defaultChars),typeof n>"u"&&(n=!0),o=cO(e),a=0,s=t.length;a<s;a++){if(r=t.charCodeAt(a),n&&r===37&&a+2<s&&/^[0-9a-f]{2}$/i.test(t.slice(a+1,a+3))){l+=t.slice(a,a+3),a+=2;continue}if(r<128){l+=o[r];continue}if(r>=55296&&r<=57343){if(r>=55296&&r<=56319&&a+1<s&&(i=t.charCodeAt(a+1),i>=56320&&i<=57343)){l+=encodeURIComponent(t[a]+t[a+1]),a++;continue}l+="%EF%BF%BD";continue}l+=encodeURIComponent(t[a])}return l}Pt.defaultChars=";/?:@&=+$,-_.!~*'()#";Pt.componentChars="-_.!~*'()";var gO=Pt,ca={};function pO(t){var e,n,a=ca[t];if(a)return a;for(a=ca[t]=[],e=0;e<128;e++)n=String.fromCharCode(e),a.push(n);for(e=0;e<t.length;e++)n=t.charCodeAt(e),a[n]="%"+("0"+n.toString(16).toUpperCase()).slice(-2);return a}function St(t,e){var n;return typeof e!="string"&&(e=St.defaultChars),n=pO(e),t.replace(/(%[a-f0-9]{2})+/gi,function(a){var s,r,i,o,l,m,g,p="";for(s=0,r=a.length;s<r;s+=3){if(i=parseInt(a.slice(s+1,s+3),16),i<128){p+=n[i];continue}if((i&224)===192&&s+3<r&&(o=parseInt(a.slice(s+4,s+6),16),(o&192)===128)){g=i<<6&1984|o&63,g<128?p+="��":p+=String.fromCharCode(g),s+=3;continue}if((i&240)===224&&s+6<r&&(o=parseInt(a.slice(s+4,s+6),16),l=parseInt(a.slice(s+7,s+9),16),(o&192)===128&&(l&192)===128)){g=i<<12&61440|o<<6&4032|l&63,g<2048||g>=55296&&g<=57343?p+="���":p+=String.fromCharCode(g),s+=6;continue}if((i&248)===240&&s+9<r&&(o=parseInt(a.slice(s+4,s+6),16),l=parseInt(a.slice(s+7,s+9),16),m=parseInt(a.slice(s+10,s+12),16),(o&192)===128&&(l&192)===128&&(m&192)===128)){g=i<<18&1835008|o<<12&258048|l<<6&4032|m&63,g<65536||g>1114111?p+="����":(g-=65536,p+=String.fromCharCode(55296+(g>>10),56320+(g&1023))),s+=9;continue}p+="�"}return p})}St.defaultChars=";/?:@&=+$,#";St.componentChars="";var bO=St,dO=function(e){var n="";return n+=e.protocol||"",n+=e.slashes?"//":"",n+=e.auth?e.auth+"@":"",e.hostname&&e.hostname.indexOf(":")!==-1?n+="["+e.hostname+"]":n+=e.hostname||"",n+=e.port?":"+e.port:"",n+=e.pathname||"",n+=e.search||"",n+=e.hash||"",n};function kt(){this.protocol=null,this.slashes=null,this.auth=null,this.port=null,this.hostname=null,this.hash=null,this.search=null,this.pathname=null}var hO=/^([a-z0-9.+-]+:)/i,fO=/:[0-9]*$/,yO=/^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,vO=["<",">",'"',"`"," ","\r",`
`,"	"],LO=["{","}","|","\\","^","`"].concat(vO),TO=["'"].concat(LO),ga=["%","/","?",";","#"].concat(TO),pa=["/","?","#"],xO=255,ba=/^[+a-z0-9A-Z_-]{0,63}$/,kO=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,da={javascript:!0,"javascript:":!0},ha={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,"http:":!0,"https:":!0,"ftp:":!0,"gopher:":!0,"file:":!0};function CO(t,e){if(t&&t instanceof kt)return t;var n=new kt;return n.parse(t,e),n}kt.prototype.parse=function(t,e){var n,a,s,r,i,o=t;if(o=o.trim(),!e&&t.split("#").length===1){var l=yO.exec(o);if(l)return this.pathname=l[1],l[2]&&(this.search=l[2]),this}var m=hO.exec(o);if(m&&(m=m[0],s=m.toLowerCase(),this.protocol=m,o=o.substr(m.length)),(e||m||o.match(/^\/\/[^@\/]+@[^@\/]+/))&&(i=o.substr(0,2)==="//",i&&!(m&&da[m])&&(o=o.substr(2),this.slashes=!0)),!da[m]&&(i||m&&!ha[m])){var g=-1;for(n=0;n<pa.length;n++)r=o.indexOf(pa[n]),r!==-1&&(g===-1||r<g)&&(g=r);var p,u;for(g===-1?u=o.lastIndexOf("@"):u=o.lastIndexOf("@",g),u!==-1&&(p=o.slice(0,u),o=o.slice(u+1),this.auth=p),g=-1,n=0;n<ga.length;n++)r=o.indexOf(ga[n]),r!==-1&&(g===-1||r<g)&&(g=r);g===-1&&(g=o.length),o[g-1]===":"&&g--;var c=o.slice(0,g);o=o.slice(g),this.parseHost(c),this.hostname=this.hostname||"";var k=this.hostname[0]==="["&&this.hostname[this.hostname.length-1]==="]";if(!k){var _=this.hostname.split(/\./);for(n=0,a=_.length;n<a;n++){var x=_[n];if(x&&!x.match(ba)){for(var f="",b=0,h=x.length;b<h;b++)x.charCodeAt(b)>127?f+="x":f+=x[b];if(!f.match(ba)){var v=_.slice(0,n),d=_.slice(n+1),L=x.match(kO);L&&(v.push(L[1]),d.unshift(L[2])),d.length&&(o=d.join(".")+o),this.hostname=v.join(".");break}}}}this.hostname.length>xO&&(this.hostname=""),k&&(this.hostname=this.hostname.substr(1,this.hostname.length-2))}var C=o.indexOf("#");C!==-1&&(this.hash=o.substr(C),o=o.slice(0,C));var A=o.indexOf("?");return A!==-1&&(this.search=o.substr(A),o=o.slice(0,A)),o&&(this.pathname=o),ha[s]&&this.hostname&&!this.pathname&&(this.pathname=""),this};kt.prototype.parseHost=function(t){var e=fO.exec(t);e&&(e=e[0],e!==":"&&(this.port=e.substr(1)),t=t.substr(0,t.length-e.length)),t&&(this.hostname=t)};var _O=CO;Qe.encode=gO;Qe.decode=bO;Qe.format=dO;Qe.parse=_O;var Re={},Ut,fa;function Ks(){return fa||(fa=1,Ut=/[\0-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/),Ut}var $t,ya;function Xs(){return ya||(ya=1,$t=/[\0-\x1F\x7F-\x9F]/),$t}var Wt,va;function wO(){return va||(va=1,Wt=/[\xAD\u0600-\u0605\u061C\u06DD\u070F\u08E2\u180E\u200B-\u200F\u202A-\u202E\u2060-\u2064\u2066-\u206F\uFEFF\uFFF9-\uFFFB]|\uD804[\uDCBD\uDCCD]|\uD82F[\uDCA0-\uDCA3]|\uD834[\uDD73-\uDD7A]|\uDB40[\uDC01\uDC20-\uDC7F]/),Wt}var Kt,La;function Zs(){return La||(La=1,Kt=/[ \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000]/),Kt}var Ta;function EO(){return Ta||(Ta=1,Re.Any=Ks(),Re.Cc=Xs(),Re.Cf=wO(),Re.P=In,Re.Z=Zs()),Re}(function(t){function e(T){return Object.prototype.toString.call(T)}function n(T){return e(T)==="[object String]"}var a=Object.prototype.hasOwnProperty;function s(T,P){return a.call(T,P)}function r(T){var P=Array.prototype.slice.call(arguments,1);return P.forEach(function(w){if(w){if(typeof w!="object")throw new TypeError(w+"must be object");Object.keys(w).forEach(function(D){T[D]=w[D]})}}),T}function i(T,P,w){return[].concat(T.slice(0,P),w,T.slice(P+1))}function o(T){return!(T>=55296&&T<=57343||T>=64976&&T<=65007||(T&65535)===65535||(T&65535)===65534||T>=0&&T<=8||T===11||T>=14&&T<=31||T>=127&&T<=159||T>1114111)}function l(T){if(T>65535){T-=65536;var P=55296+(T>>10),w=56320+(T&1023);return String.fromCharCode(P,w)}return String.fromCharCode(T)}var m=/\\([!"#$%&'()*+,\-.\/:;<=>?@[\\\]^_`{|}~])/g,g=/&([a-z#][a-z0-9]{1,31});/gi,p=new RegExp(m.source+"|"+g.source,"gi"),u=/^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i,c=xt;function k(T,P){var w;return s(c,P)?c[P]:P.charCodeAt(0)===35&&u.test(P)&&(w=P[1].toLowerCase()==="x"?parseInt(P.slice(2),16):parseInt(P.slice(1),10),o(w))?l(w):T}function _(T){return T.indexOf("\\")<0?T:T.replace(m,"$1")}function x(T){return T.indexOf("\\")<0&&T.indexOf("&")<0?T:T.replace(p,function(P,w,D){return w||k(P,D)})}var f=/[&<>"]/,b=/[&<>"]/g,h={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;"};function v(T){return h[T]}function d(T){return f.test(T)?T.replace(b,v):T}var L=/[.?*+^$[\]\\(){}|-]/g;function C(T){return T.replace(L,"\\$&")}function A(T){switch(T){case 9:case 32:return!0}return!1}function I(T){if(T>=8192&&T<=8202)return!0;switch(T){case 9:case 10:case 11:case 12:case 13:case 32:case 160:case 5760:case 8239:case 8287:case 12288:return!0}return!1}var R=In;function y(T){return R.test(T)}function E(T){switch(T){case 33:case 34:case 35:case 36:case 37:case 38:case 39:case 40:case 41:case 42:case 43:case 44:case 45:case 46:case 47:case 58:case 59:case 60:case 61:case 62:case 63:case 64:case 91:case 92:case 93:case 94:case 95:case 96:case 123:case 124:case 125:case 126:return!0;default:return!1}}function S(T){return T=T.trim().replace(/\s+/g," "),"ẞ".toLowerCase()==="Ṿ"&&(T=T.replace(/ẞ/g,"ß")),T.toLowerCase().toUpperCase()}t.lib={},t.lib.mdurl=Qe,t.lib.ucmicro=EO(),t.assign=r,t.isString=n,t.has=s,t.unescapeMd=_,t.unescapeAll=x,t.isValidEntityCode=o,t.fromCodePoint=l,t.escapeHtml=d,t.arrayReplaceAt=i,t.isSpace=A,t.isWhiteSpace=I,t.isMdAsciiPunct=E,t.isPunctChar=y,t.escapeRE=C,t.normalizeReference=S})(Z);var At={},PO=function(e,n,a){var s,r,i,o,l=-1,m=e.posMax,g=e.pos;for(e.pos=n+1,s=1;e.pos<m;){if(i=e.src.charCodeAt(e.pos),i===93&&(s--,s===0)){r=!0;break}if(o=e.pos,e.md.inline.skipToken(e),i===91){if(o===e.pos-1)s++;else if(a)return e.pos=g,-1}}return r&&(l=e.pos),e.pos=g,l},xa=Z.unescapeAll,SO=function(e,n,a){var s,r,i=n,o={ok:!1,pos:0,lines:0,str:""};if(e.charCodeAt(i)===60){for(i++;i<a;){if(s=e.charCodeAt(i),s===10||s===60)return o;if(s===62)return o.pos=i+1,o.str=xa(e.slice(n+1,i)),o.ok=!0,o;if(s===92&&i+1<a){i+=2;continue}i++}return o}for(r=0;i<a&&(s=e.charCodeAt(i),!(s===32||s<32||s===127));){if(s===92&&i+1<a){if(e.charCodeAt(i+1)===32)break;i+=2;continue}if(s===40&&(r++,r>32))return o;if(s===41){if(r===0)break;r--}i++}return n===i||r!==0||(o.str=xa(e.slice(n,i)),o.pos=i,o.ok=!0),o},AO=Z.unescapeAll,IO=function(e,n,a){var s,r,i=0,o=n,l={ok:!1,pos:0,lines:0,str:""};if(o>=a||(r=e.charCodeAt(o),r!==34&&r!==39&&r!==40))return l;for(o++,r===40&&(r=41);o<a;){if(s=e.charCodeAt(o),s===r)return l.pos=o+1,l.lines=i,l.str=AO(e.slice(n+1,o)),l.ok=!0,l;if(s===40&&r===41)return l;s===10?i++:s===92&&o+1<a&&(o++,e.charCodeAt(o)===10&&i++),o++}return l};At.parseLinkLabel=PO;At.parseLinkDestination=SO;At.parseLinkTitle=IO;var GO=Z.assign,RO=Z.unescapeAll,Fe=Z.escapeHtml,_e={};_e.code_inline=function(t,e,n,a,s){var r=t[e];return"<code"+s.renderAttrs(r)+">"+Fe(r.content)+"</code>"};_e.code_block=function(t,e,n,a,s){var r=t[e];return"<pre"+s.renderAttrs(r)+"><code>"+Fe(t[e].content)+`</code></pre>
`};_e.fence=function(t,e,n,a,s){var r=t[e],i=r.info?RO(r.info).trim():"",o="",l="",m,g,p,u,c;return i&&(p=i.split(/(\s+)/g),o=p[0],l=p.slice(2).join("")),n.highlight?m=n.highlight(r.content,o,l)||Fe(r.content):m=Fe(r.content),m.indexOf("<pre")===0?m+`
`:i?(g=r.attrIndex("class"),u=r.attrs?r.attrs.slice():[],g<0?u.push(["class",n.langPrefix+o]):(u[g]=u[g].slice(),u[g][1]+=" "+n.langPrefix+o),c={attrs:u},"<pre><code"+s.renderAttrs(c)+">"+m+`</code></pre>
`):"<pre><code"+s.renderAttrs(r)+">"+m+`</code></pre>
`};_e.image=function(t,e,n,a,s){var r=t[e];return r.attrs[r.attrIndex("alt")][1]=s.renderInlineAsText(r.children,n,a),s.renderToken(t,e,n)};_e.hardbreak=function(t,e,n){return n.xhtmlOut?`<br />
`:`<br>
`};_e.softbreak=function(t,e,n){return n.breaks?n.xhtmlOut?`<br />
`:`<br>
`:`
`};_e.text=function(t,e){return Fe(t[e].content)};_e.html_block=function(t,e){return t[e].content};_e.html_inline=function(t,e){return t[e].content};function Je(){this.rules=GO({},_e)}Je.prototype.renderAttrs=function(e){var n,a,s;if(!e.attrs)return"";for(s="",n=0,a=e.attrs.length;n<a;n++)s+=" "+Fe(e.attrs[n][0])+'="'+Fe(e.attrs[n][1])+'"';return s};Je.prototype.renderToken=function(e,n,a){var s,r="",i=!1,o=e[n];return o.hidden?"":(o.block&&o.nesting!==-1&&n&&e[n-1].hidden&&(r+=`
`),r+=(o.nesting===-1?"</":"<")+o.tag,r+=this.renderAttrs(o),o.nesting===0&&a.xhtmlOut&&(r+=" /"),o.block&&(i=!0,o.nesting===1&&n+1<e.length&&(s=e[n+1],(s.type==="inline"||s.hidden||s.nesting===-1&&s.tag===o.tag)&&(i=!1))),r+=i?`>
`:">",r)};Je.prototype.renderInline=function(t,e,n){for(var a,s="",r=this.rules,i=0,o=t.length;i<o;i++)a=t[i].type,typeof r[a]<"u"?s+=r[a](t,i,e,n,this):s+=this.renderToken(t,i,e);return s};Je.prototype.renderInlineAsText=function(t,e,n){for(var a="",s=0,r=t.length;s<r;s++)t[s].type==="text"?a+=t[s].content:t[s].type==="image"?a+=this.renderInlineAsText(t[s].children,e,n):t[s].type==="softbreak"&&(a+=`
`);return a};Je.prototype.render=function(t,e,n){var a,s,r,i="",o=this.rules;for(a=0,s=t.length;a<s;a++)r=t[a].type,r==="inline"?i+=this.renderInline(t[a].children,e,n):typeof o[r]<"u"?i+=o[r](t,a,e,n,this):i+=this.renderToken(t,a,e,n);return i};var DO=Je;function ke(){this.__rules__=[],this.__cache__=null}ke.prototype.__find__=function(t){for(var e=0;e<this.__rules__.length;e++)if(this.__rules__[e].name===t)return e;return-1};ke.prototype.__compile__=function(){var t=this,e=[""];t.__rules__.forEach(function(n){n.enabled&&n.alt.forEach(function(a){e.indexOf(a)<0&&e.push(a)})}),t.__cache__={},e.forEach(function(n){t.__cache__[n]=[],t.__rules__.forEach(function(a){a.enabled&&(n&&a.alt.indexOf(n)<0||t.__cache__[n].push(a.fn))})})};ke.prototype.at=function(t,e,n){var a=this.__find__(t),s=n||{};if(a===-1)throw new Error("Parser rule not found: "+t);this.__rules__[a].fn=e,this.__rules__[a].alt=s.alt||[],this.__cache__=null};ke.prototype.before=function(t,e,n,a){var s=this.__find__(t),r=a||{};if(s===-1)throw new Error("Parser rule not found: "+t);this.__rules__.splice(s,0,{name:e,enabled:!0,fn:n,alt:r.alt||[]}),this.__cache__=null};ke.prototype.after=function(t,e,n,a){var s=this.__find__(t),r=a||{};if(s===-1)throw new Error("Parser rule not found: "+t);this.__rules__.splice(s+1,0,{name:e,enabled:!0,fn:n,alt:r.alt||[]}),this.__cache__=null};ke.prototype.push=function(t,e,n){var a=n||{};this.__rules__.push({name:t,enabled:!0,fn:e,alt:a.alt||[]}),this.__cache__=null};ke.prototype.enable=function(t,e){Array.isArray(t)||(t=[t]);var n=[];return t.forEach(function(a){var s=this.__find__(a);if(s<0){if(e)return;throw new Error("Rules manager: invalid rule name "+a)}this.__rules__[s].enabled=!0,n.push(a)},this),this.__cache__=null,n};ke.prototype.enableOnly=function(t,e){Array.isArray(t)||(t=[t]),this.__rules__.forEach(function(n){n.enabled=!1}),this.enable(t,e)};ke.prototype.disable=function(t,e){Array.isArray(t)||(t=[t]);var n=[];return t.forEach(function(a){var s=this.__find__(a);if(s<0){if(e)return;throw new Error("Rules manager: invalid rule name "+a)}this.__rules__[s].enabled=!1,n.push(a)},this),this.__cache__=null,n};ke.prototype.getRules=function(t){return this.__cache__===null&&this.__compile__(),this.__cache__[t]||[]};var Gn=ke,MO=/\r\n?|\n/g,NO=/\0/g,OO=function(e){var n;n=e.src.replace(MO,`
`),n=n.replace(NO,"�"),e.src=n},BO=function(e){var n;e.inlineMode?(n=new e.Token("inline","",0),n.content=e.src,n.map=[0,1],n.children=[],e.tokens.push(n)):e.md.block.parse(e.src,e.md,e.env,e.tokens)},qO=function(e){var n=e.tokens,a,s,r;for(s=0,r=n.length;s<r;s++)a=n[s],a.type==="inline"&&e.md.inline.parse(a.content,e.md,e.env,a.children)},FO=Z.arrayReplaceAt;function zO(t){return/^<a[>\s]/i.test(t)}function VO(t){return/^<\/a\s*>/i.test(t)}var HO=function(e){var n,a,s,r,i,o,l,m,g,p,u,c,k,_,x,f,b=e.tokens,h;if(e.md.options.linkify){for(a=0,s=b.length;a<s;a++)if(!(b[a].type!=="inline"||!e.md.linkify.pretest(b[a].content)))for(r=b[a].children,k=0,n=r.length-1;n>=0;n--){if(o=r[n],o.type==="link_close"){for(n--;r[n].level!==o.level&&r[n].type!=="link_open";)n--;continue}if(o.type==="html_inline"&&(zO(o.content)&&k>0&&k--,VO(o.content)&&k++),!(k>0)&&o.type==="text"&&e.md.linkify.test(o.content)){for(g=o.content,h=e.md.linkify.match(g),l=[],c=o.level,u=0,h.length>0&&h[0].index===0&&n>0&&r[n-1].type==="text_special"&&(h=h.slice(1)),m=0;m<h.length;m++)_=h[m].url,x=e.md.normalizeLink(_),e.md.validateLink(x)&&(f=h[m].text,h[m].schema?h[m].schema==="mailto:"&&!/^mailto:/i.test(f)?f=e.md.normalizeLinkText("mailto:"+f).replace(/^mailto:/,""):f=e.md.normalizeLinkText(f):f=e.md.normalizeLinkText("http://"+f).replace(/^http:\/\//,""),p=h[m].index,p>u&&(i=new e.Token("text","",0),i.content=g.slice(u,p),i.level=c,l.push(i)),i=new e.Token("link_open","a",1),i.attrs=[["href",x]],i.level=c++,i.markup="linkify",i.info="auto",l.push(i),i=new e.Token("text","",0),i.content=f,i.level=c,l.push(i),i=new e.Token("link_close","a",-1),i.level=--c,i.markup="linkify",i.info="auto",l.push(i),u=h[m].lastIndex);u<g.length&&(i=new e.Token("text","",0),i.content=g.slice(u),i.level=c,l.push(i)),b[a].children=r=FO(r,n,l)}}}},Ys=/\+-|\.\.|\?\?\?\?|!!!!|,,|--/,jO=/\((c|tm|r)\)/i,UO=/\((c|tm|r)\)/ig,$O={c:"©",r:"®",tm:"™"};function WO(t,e){return $O[e.toLowerCase()]}function KO(t){var e,n,a=0;for(e=t.length-1;e>=0;e--)n=t[e],n.type==="text"&&!a&&(n.content=n.content.replace(UO,WO)),n.type==="link_open"&&n.info==="auto"&&a--,n.type==="link_close"&&n.info==="auto"&&a++}function XO(t){var e,n,a=0;for(e=t.length-1;e>=0;e--)n=t[e],n.type==="text"&&!a&&Ys.test(n.content)&&(n.content=n.content.replace(/\+-/g,"±").replace(/\.{2,}/g,"…").replace(/([?!])…/g,"$1..").replace(/([?!]){4,}/g,"$1$1$1").replace(/,{2,}/g,",").replace(/(^|[^-])---(?=[^-]|$)/mg,"$1—").replace(/(^|\s)--(?=\s|$)/mg,"$1–").replace(/(^|[^-\s])--(?=[^-\s]|$)/mg,"$1–")),n.type==="link_open"&&n.info==="auto"&&a--,n.type==="link_close"&&n.info==="auto"&&a++}var ZO=function(e){var n;if(e.md.options.typographer)for(n=e.tokens.length-1;n>=0;n--)e.tokens[n].type==="inline"&&(jO.test(e.tokens[n].content)&&KO(e.tokens[n].children),Ys.test(e.tokens[n].content)&&XO(e.tokens[n].children))},ka=Z.isWhiteSpace,Ca=Z.isPunctChar,_a=Z.isMdAsciiPunct,YO=/['"]/,wa=/['"]/g,Ea="’";function gt(t,e,n){return t.slice(0,e)+n+t.slice(e+1)}function QO(t,e){var n,a,s,r,i,o,l,m,g,p,u,c,k,_,x,f,b,h,v,d,L;for(v=[],n=0;n<t.length;n++){for(a=t[n],l=t[n].level,b=v.length-1;b>=0&&!(v[b].level<=l);b--);if(v.length=b+1,a.type!=="text")continue;s=a.content,i=0,o=s.length;e:for(;i<o&&(wa.lastIndex=i,r=wa.exec(s),!!r);){if(x=f=!0,i=r.index+1,h=r[0]==="'",g=32,r.index-1>=0)g=s.charCodeAt(r.index-1);else for(b=n-1;b>=0&&!(t[b].type==="softbreak"||t[b].type==="hardbreak");b--)if(t[b].content){g=t[b].content.charCodeAt(t[b].content.length-1);break}if(p=32,i<o)p=s.charCodeAt(i);else for(b=n+1;b<t.length&&!(t[b].type==="softbreak"||t[b].type==="hardbreak");b++)if(t[b].content){p=t[b].content.charCodeAt(0);break}if(u=_a(g)||Ca(String.fromCharCode(g)),c=_a(p)||Ca(String.fromCharCode(p)),k=ka(g),_=ka(p),_?x=!1:c&&(k||u||(x=!1)),k?f=!1:u&&(_||c||(f=!1)),p===34&&r[0]==='"'&&g>=48&&g<=57&&(f=x=!1),x&&f&&(x=u,f=c),!x&&!f){h&&(a.content=gt(a.content,r.index,Ea));continue}if(f){for(b=v.length-1;b>=0&&(m=v[b],!(v[b].level<l));b--)if(m.single===h&&v[b].level===l){m=v[b],h?(d=e.md.options.quotes[2],L=e.md.options.quotes[3]):(d=e.md.options.quotes[0],L=e.md.options.quotes[1]),a.content=gt(a.content,r.index,L),t[m.token].content=gt(t[m.token].content,m.pos,d),i+=L.length-1,m.token===n&&(i+=d.length-1),s=a.content,o=s.length,v.length=b;continue e}}x?v.push({token:n,pos:r.index,single:h,level:l}):f&&h&&(a.content=gt(a.content,r.index,Ea))}}}var JO=function(e){var n;if(e.md.options.typographer)for(n=e.tokens.length-1;n>=0;n--)e.tokens[n].type!=="inline"||!YO.test(e.tokens[n].content)||QO(e.tokens[n].children,e)},eB=function(e){var n,a,s,r,i,o,l=e.tokens;for(n=0,a=l.length;n<a;n++)if(l[n].type==="inline"){for(s=l[n].children,i=s.length,r=0;r<i;r++)s[r].type==="text_special"&&(s[r].type="text");for(r=o=0;r<i;r++)s[r].type==="text"&&r+1<i&&s[r+1].type==="text"?s[r+1].content=s[r].content+s[r+1].content:(r!==o&&(s[o]=s[r]),o++);r!==o&&(s.length=o)}};function et(t,e,n){this.type=t,this.tag=e,this.attrs=null,this.map=null,this.nesting=n,this.level=0,this.children=null,this.content="",this.markup="",this.info="",this.meta=null,this.block=!1,this.hidden=!1}et.prototype.attrIndex=function(e){var n,a,s;if(!this.attrs)return-1;for(n=this.attrs,a=0,s=n.length;a<s;a++)if(n[a][0]===e)return a;return-1};et.prototype.attrPush=function(e){this.attrs?this.attrs.push(e):this.attrs=[e]};et.prototype.attrSet=function(e,n){var a=this.attrIndex(e),s=[e,n];a<0?this.attrPush(s):this.attrs[a]=s};et.prototype.attrGet=function(e){var n=this.attrIndex(e),a=null;return n>=0&&(a=this.attrs[n][1]),a};et.prototype.attrJoin=function(e,n){var a=this.attrIndex(e);a<0?this.attrPush([e,n]):this.attrs[a][1]=this.attrs[a][1]+" "+n};var Rn=et,tB=Rn;function Qs(t,e,n){this.src=t,this.env=n,this.tokens=[],this.inlineMode=!1,this.md=e}Qs.prototype.Token=tB;var nB=Qs,aB=Gn,Xt=[["normalize",OO],["block",BO],["inline",qO],["linkify",HO],["replacements",ZO],["smartquotes",JO],["text_join",eB]];function Dn(){this.ruler=new aB;for(var t=0;t<Xt.length;t++)this.ruler.push(Xt[t][0],Xt[t][1])}Dn.prototype.process=function(t){var e,n,a;for(a=this.ruler.getRules(""),e=0,n=a.length;e<n;e++)a[e](t)};Dn.prototype.State=nB;var sB=Dn,Zt=Z.isSpace;function Yt(t,e){var n=t.bMarks[e]+t.tShift[e],a=t.eMarks[e];return t.src.slice(n,a)}function Pa(t){var e=[],n=0,a=t.length,s,r=!1,i=0,o="";for(s=t.charCodeAt(n);n<a;)s===124&&(r?(o+=t.substring(i,n-1),i=n):(e.push(o+t.substring(i,n)),o="",i=n+1)),r=s===92,n++,s=t.charCodeAt(n);return e.push(o+t.substring(i)),e}var rB=function(e,n,a,s){var r,i,o,l,m,g,p,u,c,k,_,x,f,b,h,v,d,L;if(n+2>a||(g=n+1,e.sCount[g]<e.blkIndent)||e.sCount[g]-e.blkIndent>=4||(o=e.bMarks[g]+e.tShift[g],o>=e.eMarks[g])||(d=e.src.charCodeAt(o++),d!==124&&d!==45&&d!==58)||o>=e.eMarks[g]||(L=e.src.charCodeAt(o++),L!==124&&L!==45&&L!==58&&!Zt(L))||d===45&&Zt(L))return!1;for(;o<e.eMarks[g];){if(r=e.src.charCodeAt(o),r!==124&&r!==45&&r!==58&&!Zt(r))return!1;o++}for(i=Yt(e,n+1),p=i.split("|"),k=[],l=0;l<p.length;l++){if(_=p[l].trim(),!_){if(l===0||l===p.length-1)continue;return!1}if(!/^:?-+:?$/.test(_))return!1;_.charCodeAt(_.length-1)===58?k.push(_.charCodeAt(0)===58?"center":"right"):_.charCodeAt(0)===58?k.push("left"):k.push("")}if(i=Yt(e,n).trim(),i.indexOf("|")===-1||e.sCount[n]-e.blkIndent>=4||(p=Pa(i),p.length&&p[0]===""&&p.shift(),p.length&&p[p.length-1]===""&&p.pop(),u=p.length,u===0||u!==k.length))return!1;if(s)return!0;for(b=e.parentType,e.parentType="table",v=e.md.block.ruler.getRules("blockquote"),c=e.push("table_open","table",1),c.map=x=[n,0],c=e.push("thead_open","thead",1),c.map=[n,n+1],c=e.push("tr_open","tr",1),c.map=[n,n+1],l=0;l<p.length;l++)c=e.push("th_open","th",1),k[l]&&(c.attrs=[["style","text-align:"+k[l]]]),c=e.push("inline","",0),c.content=p[l].trim(),c.children=[],c=e.push("th_close","th",-1);for(c=e.push("tr_close","tr",-1),c=e.push("thead_close","thead",-1),g=n+2;g<a&&!(e.sCount[g]<e.blkIndent);g++){for(h=!1,l=0,m=v.length;l<m;l++)if(v[l](e,g,a,!0)){h=!0;break}if(h||(i=Yt(e,g).trim(),!i)||e.sCount[g]-e.blkIndent>=4)break;for(p=Pa(i),p.length&&p[0]===""&&p.shift(),p.length&&p[p.length-1]===""&&p.pop(),g===n+2&&(c=e.push("tbody_open","tbody",1),c.map=f=[n+2,0]),c=e.push("tr_open","tr",1),c.map=[g,g+1],l=0;l<u;l++)c=e.push("td_open","td",1),k[l]&&(c.attrs=[["style","text-align:"+k[l]]]),c=e.push("inline","",0),c.content=p[l]?p[l].trim():"",c.children=[],c=e.push("td_close","td",-1);c=e.push("tr_close","tr",-1)}return f&&(c=e.push("tbody_close","tbody",-1),f[1]=g),c=e.push("table_close","table",-1),x[1]=g,e.parentType=b,e.line=g,!0},oB=function(e,n,a){var s,r,i;if(e.sCount[n]-e.blkIndent<4)return!1;for(r=s=n+1;s<a;){if(e.isEmpty(s)){s++;continue}if(e.sCount[s]-e.blkIndent>=4){s++,r=s;continue}break}return e.line=r,i=e.push("code_block","code",0),i.content=e.getLines(n,r,4+e.blkIndent,!1)+`
`,i.map=[n,e.line],!0},iB=function(e,n,a,s){var r,i,o,l,m,g,p,u=!1,c=e.bMarks[n]+e.tShift[n],k=e.eMarks[n];if(e.sCount[n]-e.blkIndent>=4||c+3>k||(r=e.src.charCodeAt(c),r!==126&&r!==96)||(m=c,c=e.skipChars(c,r),i=c-m,i<3)||(p=e.src.slice(m,c),o=e.src.slice(c,k),r===96&&o.indexOf(String.fromCharCode(r))>=0))return!1;if(s)return!0;for(l=n;l++,!(l>=a||(c=m=e.bMarks[l]+e.tShift[l],k=e.eMarks[l],c<k&&e.sCount[l]<e.blkIndent));)if(e.src.charCodeAt(c)===r&&!(e.sCount[l]-e.blkIndent>=4)&&(c=e.skipChars(c,r),!(c-m<i)&&(c=e.skipSpaces(c),!(c<k)))){u=!0;break}return i=e.sCount[n],e.line=l+(u?1:0),g=e.push("fence","code",0),g.info=o,g.content=e.getLines(n+1,l,i,!0),g.markup=p,g.map=[n,e.line],!0},lB=Z.isSpace,uB=function(e,n,a,s){var r,i,o,l,m,g,p,u,c,k,_,x,f,b,h,v,d,L,C,A,I=e.lineMax,R=e.bMarks[n]+e.tShift[n],y=e.eMarks[n];if(e.sCount[n]-e.blkIndent>=4||e.src.charCodeAt(R)!==62)return!1;if(s)return!0;for(k=[],_=[],b=[],h=[],L=e.md.block.ruler.getRules("blockquote"),f=e.parentType,e.parentType="blockquote",u=n;u<a&&(A=e.sCount[u]<e.blkIndent,R=e.bMarks[u]+e.tShift[u],y=e.eMarks[u],!(R>=y));u++){if(e.src.charCodeAt(R++)===62&&!A){for(l=e.sCount[u]+1,e.src.charCodeAt(R)===32?(R++,l++,r=!1,v=!0):e.src.charCodeAt(R)===9?(v=!0,(e.bsCount[u]+l)%4===3?(R++,l++,r=!1):r=!0):v=!1,c=l,k.push(e.bMarks[u]),e.bMarks[u]=R;R<y&&(i=e.src.charCodeAt(R),lB(i));){i===9?c+=4-(c+e.bsCount[u]+(r?1:0))%4:c++;R++}g=R>=y,_.push(e.bsCount[u]),e.bsCount[u]=e.sCount[u]+1+(v?1:0),b.push(e.sCount[u]),e.sCount[u]=c-l,h.push(e.tShift[u]),e.tShift[u]=R-e.bMarks[u];continue}if(g)break;for(d=!1,o=0,m=L.length;o<m;o++)if(L[o](e,u,a,!0)){d=!0;break}if(d){e.lineMax=u,e.blkIndent!==0&&(k.push(e.bMarks[u]),_.push(e.bsCount[u]),h.push(e.tShift[u]),b.push(e.sCount[u]),e.sCount[u]-=e.blkIndent);break}k.push(e.bMarks[u]),_.push(e.bsCount[u]),h.push(e.tShift[u]),b.push(e.sCount[u]),e.sCount[u]=-1}for(x=e.blkIndent,e.blkIndent=0,C=e.push("blockquote_open","blockquote",1),C.markup=">",C.map=p=[n,0],e.md.block.tokenize(e,n,u),C=e.push("blockquote_close","blockquote",-1),C.markup=">",e.lineMax=I,e.parentType=f,p[1]=e.line,o=0;o<h.length;o++)e.bMarks[o+n]=k[o],e.tShift[o+n]=h[o],e.sCount[o+n]=b[o],e.bsCount[o+n]=_[o];return e.blkIndent=x,!0},mB=Z.isSpace,cB=function(e,n,a,s){var r,i,o,l,m=e.bMarks[n]+e.tShift[n],g=e.eMarks[n];if(e.sCount[n]-e.blkIndent>=4||(r=e.src.charCodeAt(m++),r!==42&&r!==45&&r!==95))return!1;for(i=1;m<g;){if(o=e.src.charCodeAt(m++),o!==r&&!mB(o))return!1;o===r&&i++}return i<3?!1:(s||(e.line=n+1,l=e.push("hr","hr",0),l.map=[n,e.line],l.markup=Array(i+1).join(String.fromCharCode(r))),!0)},Js=Z.isSpace;function Sa(t,e){var n,a,s,r;return a=t.bMarks[e]+t.tShift[e],s=t.eMarks[e],n=t.src.charCodeAt(a++),n!==42&&n!==45&&n!==43||a<s&&(r=t.src.charCodeAt(a),!Js(r))?-1:a}function Aa(t,e){var n,a=t.bMarks[e]+t.tShift[e],s=a,r=t.eMarks[e];if(s+1>=r||(n=t.src.charCodeAt(s++),n<48||n>57))return-1;for(;;){if(s>=r)return-1;if(n=t.src.charCodeAt(s++),n>=48&&n<=57){if(s-a>=10)return-1;continue}if(n===41||n===46)break;return-1}return s<r&&(n=t.src.charCodeAt(s),!Js(n))?-1:s}function gB(t,e){var n,a,s=t.level+2;for(n=e+2,a=t.tokens.length-2;n<a;n++)t.tokens[n].level===s&&t.tokens[n].type==="paragraph_open"&&(t.tokens[n+2].hidden=!0,t.tokens[n].hidden=!0,n+=2)}var pB=function(e,n,a,s){var r,i,o,l,m,g,p,u,c,k,_,x,f,b,h,v,d,L,C,A,I,R,y,E,S,T,P,w=n,D=!1,M=!0;if(e.sCount[w]-e.blkIndent>=4||e.listIndent>=0&&e.sCount[w]-e.listIndent>=4&&e.sCount[w]<e.blkIndent)return!1;if(s&&e.parentType==="paragraph"&&e.sCount[w]>=e.blkIndent&&(D=!0),(R=Aa(e,w))>=0){if(p=!0,E=e.bMarks[w]+e.tShift[w],f=Number(e.src.slice(E,R-1)),D&&f!==1)return!1}else if((R=Sa(e,w))>=0)p=!1;else return!1;if(D&&e.skipSpaces(R)>=e.eMarks[w])return!1;if(s)return!0;for(x=e.src.charCodeAt(R-1),_=e.tokens.length,p?(P=e.push("ordered_list_open","ol",1),f!==1&&(P.attrs=[["start",f]])):P=e.push("bullet_list_open","ul",1),P.map=k=[w,0],P.markup=String.fromCharCode(x),y=!1,T=e.md.block.ruler.getRules("list"),d=e.parentType,e.parentType="list";w<a;){for(I=R,b=e.eMarks[w],g=h=e.sCount[w]+R-(e.bMarks[w]+e.tShift[w]);I<b;){if(r=e.src.charCodeAt(I),r===9)h+=4-(h+e.bsCount[w])%4;else if(r===32)h++;else break;I++}if(i=I,i>=b?m=1:m=h-g,m>4&&(m=1),l=g+m,P=e.push("list_item_open","li",1),P.markup=String.fromCharCode(x),P.map=u=[w,0],p&&(P.info=e.src.slice(E,R-1)),A=e.tight,C=e.tShift[w],L=e.sCount[w],v=e.listIndent,e.listIndent=e.blkIndent,e.blkIndent=l,e.tight=!0,e.tShift[w]=i-e.bMarks[w],e.sCount[w]=h,i>=b&&e.isEmpty(w+1)?e.line=Math.min(e.line+2,a):e.md.block.tokenize(e,w,a,!0),(!e.tight||y)&&(M=!1),y=e.line-w>1&&e.isEmpty(e.line-1),e.blkIndent=e.listIndent,e.listIndent=v,e.tShift[w]=C,e.sCount[w]=L,e.tight=A,P=e.push("list_item_close","li",-1),P.markup=String.fromCharCode(x),w=e.line,u[1]=w,w>=a||e.sCount[w]<e.blkIndent||e.sCount[w]-e.blkIndent>=4)break;for(S=!1,o=0,c=T.length;o<c;o++)if(T[o](e,w,a,!0)){S=!0;break}if(S)break;if(p){if(R=Aa(e,w),R<0)break;E=e.bMarks[w]+e.tShift[w]}else if(R=Sa(e,w),R<0)break;if(x!==e.src.charCodeAt(R-1))break}return p?P=e.push("ordered_list_close","ol",-1):P=e.push("bullet_list_close","ul",-1),P.markup=String.fromCharCode(x),k[1]=w,e.line=w,e.parentType=d,M&&gB(e,_),!0},bB=Z.normalizeReference,pt=Z.isSpace,dB=function(e,n,a,s){var r,i,o,l,m,g,p,u,c,k,_,x,f,b,h,v,d=0,L=e.bMarks[n]+e.tShift[n],C=e.eMarks[n],A=n+1;if(e.sCount[n]-e.blkIndent>=4||e.src.charCodeAt(L)!==91)return!1;for(;++L<C;)if(e.src.charCodeAt(L)===93&&e.src.charCodeAt(L-1)!==92){if(L+1===C||e.src.charCodeAt(L+1)!==58)return!1;break}for(l=e.lineMax,h=e.md.block.ruler.getRules("reference"),k=e.parentType,e.parentType="reference";A<l&&!e.isEmpty(A);A++)if(!(e.sCount[A]-e.blkIndent>3)&&!(e.sCount[A]<0)){for(b=!1,g=0,p=h.length;g<p;g++)if(h[g](e,A,l,!0)){b=!0;break}if(b)break}for(f=e.getLines(n,A,e.blkIndent,!1).trim(),C=f.length,L=1;L<C;L++){if(r=f.charCodeAt(L),r===91)return!1;if(r===93){c=L;break}else r===10?d++:r===92&&(L++,L<C&&f.charCodeAt(L)===10&&d++)}if(c<0||f.charCodeAt(c+1)!==58)return!1;for(L=c+2;L<C;L++)if(r=f.charCodeAt(L),r===10)d++;else if(!pt(r))break;if(_=e.md.helpers.parseLinkDestination(f,L,C),!_.ok||(m=e.md.normalizeLink(_.str),!e.md.validateLink(m)))return!1;for(L=_.pos,d+=_.lines,i=L,o=d,x=L;L<C;L++)if(r=f.charCodeAt(L),r===10)d++;else if(!pt(r))break;for(_=e.md.helpers.parseLinkTitle(f,L,C),L<C&&x!==L&&_.ok?(v=_.str,L=_.pos,d+=_.lines):(v="",L=i,d=o);L<C&&(r=f.charCodeAt(L),!!pt(r));)L++;if(L<C&&f.charCodeAt(L)!==10&&v)for(v="",L=i,d=o;L<C&&(r=f.charCodeAt(L),!!pt(r));)L++;return L<C&&f.charCodeAt(L)!==10||(u=bB(f.slice(1,c)),!u)?!1:(s||(typeof e.env.references>"u"&&(e.env.references={}),typeof e.env.references[u]>"u"&&(e.env.references[u]={title:v,href:m}),e.parentType=k,e.line=n+d+1),!0)},hB=["address","article","aside","base","basefont","blockquote","body","caption","center","col","colgroup","dd","details","dialog","dir","div","dl","dt","fieldset","figcaption","figure","footer","form","frame","frameset","h1","h2","h3","h4","h5","h6","head","header","hr","html","iframe","legend","li","link","main","menu","menuitem","nav","noframes","ol","optgroup","option","p","param","section","source","summary","table","tbody","td","tfoot","th","thead","title","tr","track","ul"],It={},fB="[a-zA-Z_:][a-zA-Z0-9:._-]*",yB="[^\"'=<>`\\x00-\\x20]+",vB="'[^']*'",LB='"[^"]*"',TB="(?:"+yB+"|"+vB+"|"+LB+")",xB="(?:\\s+"+fB+"(?:\\s*=\\s*"+TB+")?)",er="<[A-Za-z][A-Za-z0-9\\-]*"+xB+"*\\s*\\/?>",tr="<\\/[A-Za-z][A-Za-z0-9\\-]*\\s*>",kB="<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->",CB="<[?][\\s\\S]*?[?]>",_B="<![A-Z]+\\s+[^>]*>",wB="<!\\[CDATA\\[[\\s\\S]*?\\]\\]>",EB=new RegExp("^(?:"+er+"|"+tr+"|"+kB+"|"+CB+"|"+_B+"|"+wB+")"),PB=new RegExp("^(?:"+er+"|"+tr+")");It.HTML_TAG_RE=EB;It.HTML_OPEN_CLOSE_TAG_RE=PB;var SB=hB,AB=It.HTML_OPEN_CLOSE_TAG_RE,He=[[/^<(script|pre|style|textarea)(?=(\s|>|$))/i,/<\/(script|pre|style|textarea)>/i,!0],[/^<!--/,/-->/,!0],[/^<\?/,/\?>/,!0],[/^<![A-Z]/,/>/,!0],[/^<!\[CDATA\[/,/\]\]>/,!0],[new RegExp("^</?("+SB.join("|")+")(?=(\\s|/?>|$))","i"),/^$/,!0],[new RegExp(AB.source+"\\s*$"),/^$/,!1]],IB=function(e,n,a,s){var r,i,o,l,m=e.bMarks[n]+e.tShift[n],g=e.eMarks[n];if(e.sCount[n]-e.blkIndent>=4||!e.md.options.html||e.src.charCodeAt(m)!==60)return!1;for(l=e.src.slice(m,g),r=0;r<He.length&&!He[r][0].test(l);r++);if(r===He.length)return!1;if(s)return He[r][2];if(i=n+1,!He[r][1].test(l)){for(;i<a&&!(e.sCount[i]<e.blkIndent);i++)if(m=e.bMarks[i]+e.tShift[i],g=e.eMarks[i],l=e.src.slice(m,g),He[r][1].test(l)){l.length!==0&&i++;break}}return e.line=i,o=e.push("html_block","",0),o.map=[n,i],o.content=e.getLines(n,i,e.blkIndent,!0),!0},Ia=Z.isSpace,GB=function(e,n,a,s){var r,i,o,l,m=e.bMarks[n]+e.tShift[n],g=e.eMarks[n];if(e.sCount[n]-e.blkIndent>=4||(r=e.src.charCodeAt(m),r!==35||m>=g))return!1;for(i=1,r=e.src.charCodeAt(++m);r===35&&m<g&&i<=6;)i++,r=e.src.charCodeAt(++m);return i>6||m<g&&!Ia(r)?!1:(s||(g=e.skipSpacesBack(g,m),o=e.skipCharsBack(g,35,m),o>m&&Ia(e.src.charCodeAt(o-1))&&(g=o),e.line=n+1,l=e.push("heading_open","h"+String(i),1),l.markup="########".slice(0,i),l.map=[n,e.line],l=e.push("inline","",0),l.content=e.src.slice(m,g).trim(),l.map=[n,e.line],l.children=[],l=e.push("heading_close","h"+String(i),-1),l.markup="########".slice(0,i)),!0)},RB=function(e,n,a){var s,r,i,o,l,m,g,p,u,c=n+1,k,_=e.md.block.ruler.getRules("paragraph");if(e.sCount[n]-e.blkIndent>=4)return!1;for(k=e.parentType,e.parentType="paragraph";c<a&&!e.isEmpty(c);c++)if(!(e.sCount[c]-e.blkIndent>3)){if(e.sCount[c]>=e.blkIndent&&(m=e.bMarks[c]+e.tShift[c],g=e.eMarks[c],m<g&&(u=e.src.charCodeAt(m),(u===45||u===61)&&(m=e.skipChars(m,u),m=e.skipSpaces(m),m>=g)))){p=u===61?1:2;break}if(!(e.sCount[c]<0)){for(r=!1,i=0,o=_.length;i<o;i++)if(_[i](e,c,a,!0)){r=!0;break}if(r)break}}return p?(s=e.getLines(n,c,e.blkIndent,!1).trim(),e.line=c+1,l=e.push("heading_open","h"+String(p),1),l.markup=String.fromCharCode(u),l.map=[n,e.line],l=e.push("inline","",0),l.content=s,l.map=[n,e.line-1],l.children=[],l=e.push("heading_close","h"+String(p),-1),l.markup=String.fromCharCode(u),e.parentType=k,!0):!1},DB=function(e,n,a){var s,r,i,o,l,m,g=n+1,p=e.md.block.ruler.getRules("paragraph");for(m=e.parentType,e.parentType="paragraph";g<a&&!e.isEmpty(g);g++)if(!(e.sCount[g]-e.blkIndent>3)&&!(e.sCount[g]<0)){for(r=!1,i=0,o=p.length;i<o;i++)if(p[i](e,g,a,!0)){r=!0;break}if(r)break}return s=e.getLines(n,g,e.blkIndent,!1).trim(),e.line=g,l=e.push("paragraph_open","p",1),l.map=[n,e.line],l=e.push("inline","",0),l.content=s,l.map=[n,e.line],l.children=[],l=e.push("paragraph_close","p",-1),e.parentType=m,!0},nr=Rn,Gt=Z.isSpace;function we(t,e,n,a){var s,r,i,o,l,m,g,p;for(this.src=t,this.md=e,this.env=n,this.tokens=a,this.bMarks=[],this.eMarks=[],this.tShift=[],this.sCount=[],this.bsCount=[],this.blkIndent=0,this.line=0,this.lineMax=0,this.tight=!1,this.ddIndent=-1,this.listIndent=-1,this.parentType="root",this.level=0,this.result="",r=this.src,p=!1,i=o=m=g=0,l=r.length;o<l;o++){if(s=r.charCodeAt(o),!p)if(Gt(s)){m++,s===9?g+=4-g%4:g++;continue}else p=!0;(s===10||o===l-1)&&(s!==10&&o++,this.bMarks.push(i),this.eMarks.push(o),this.tShift.push(m),this.sCount.push(g),this.bsCount.push(0),p=!1,m=0,g=0,i=o+1)}this.bMarks.push(r.length),this.eMarks.push(r.length),this.tShift.push(0),this.sCount.push(0),this.bsCount.push(0),this.lineMax=this.bMarks.length-1}we.prototype.push=function(t,e,n){var a=new nr(t,e,n);return a.block=!0,n<0&&this.level--,a.level=this.level,n>0&&this.level++,this.tokens.push(a),a};we.prototype.isEmpty=function(e){return this.bMarks[e]+this.tShift[e]>=this.eMarks[e]};we.prototype.skipEmptyLines=function(e){for(var n=this.lineMax;e<n&&!(this.bMarks[e]+this.tShift[e]<this.eMarks[e]);e++);return e};we.prototype.skipSpaces=function(e){for(var n,a=this.src.length;e<a&&(n=this.src.charCodeAt(e),!!Gt(n));e++);return e};we.prototype.skipSpacesBack=function(e,n){if(e<=n)return e;for(;e>n;)if(!Gt(this.src.charCodeAt(--e)))return e+1;return e};we.prototype.skipChars=function(e,n){for(var a=this.src.length;e<a&&this.src.charCodeAt(e)===n;e++);return e};we.prototype.skipCharsBack=function(e,n,a){if(e<=a)return e;for(;e>a;)if(n!==this.src.charCodeAt(--e))return e+1;return e};we.prototype.getLines=function(e,n,a,s){var r,i,o,l,m,g,p,u=e;if(e>=n)return"";for(g=new Array(n-e),r=0;u<n;u++,r++){for(i=0,p=l=this.bMarks[u],u+1<n||s?m=this.eMarks[u]+1:m=this.eMarks[u];l<m&&i<a;){if(o=this.src.charCodeAt(l),Gt(o))o===9?i+=4-(i+this.bsCount[u])%4:i++;else if(l-p<this.tShift[u])i++;else break;l++}i>a?g[r]=new Array(i-a+1).join(" ")+this.src.slice(l,m):g[r]=this.src.slice(l,m)}return g.join("")};we.prototype.Token=nr;var MB=we,NB=Gn,bt=[["table",rB,["paragraph","reference"]],["code",oB],["fence",iB,["paragraph","reference","blockquote","list"]],["blockquote",uB,["paragraph","reference","blockquote","list"]],["hr",cB,["paragraph","reference","blockquote","list"]],["list",pB,["paragraph","reference","blockquote"]],["reference",dB],["html_block",IB,["paragraph","reference","blockquote"]],["heading",GB,["paragraph","reference","blockquote"]],["lheading",RB],["paragraph",DB]];function Rt(){this.ruler=new NB;for(var t=0;t<bt.length;t++)this.ruler.push(bt[t][0],bt[t][1],{alt:(bt[t][2]||[]).slice()})}Rt.prototype.tokenize=function(t,e,n){for(var a,s,r,i=this.ruler.getRules(""),o=i.length,l=e,m=!1,g=t.md.options.maxNesting;l<n&&(t.line=l=t.skipEmptyLines(l),!(l>=n||t.sCount[l]<t.blkIndent));){if(t.level>=g){t.line=n;break}for(r=t.line,s=0;s<o;s++)if(a=i[s](t,l,n,!1),a){if(r>=t.line)throw new Error("block rule didn't increment state.line");break}if(!a)throw new Error("none of the block rules matched");t.tight=!m,t.isEmpty(t.line-1)&&(m=!0),l=t.line,l<n&&t.isEmpty(l)&&(m=!0,l++,t.line=l)}};Rt.prototype.parse=function(t,e,n,a){var s;t&&(s=new this.State(t,e,n,a),this.tokenize(s,s.line,s.lineMax))};Rt.prototype.State=MB;var OB=Rt;function BB(t){switch(t){case 10:case 33:case 35:case 36:case 37:case 38:case 42:case 43:case 45:case 58:case 60:case 61:case 62:case 64:case 91:case 92:case 93:case 94:case 95:case 96:case 123:case 125:case 126:return!0;default:return!1}}var qB=function(e,n){for(var a=e.pos;a<e.posMax&&!BB(e.src.charCodeAt(a));)a++;return a===e.pos?!1:(n||(e.pending+=e.src.slice(e.pos,a)),e.pos=a,!0)},FB=/(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i,zB=function(e,n){var a,s,r,i,o,l,m,g;return!e.md.options.linkify||e.linkLevel>0||(a=e.pos,s=e.posMax,a+3>s)||e.src.charCodeAt(a)!==58||e.src.charCodeAt(a+1)!==47||e.src.charCodeAt(a+2)!==47||(r=e.pending.match(FB),!r)||(i=r[1],o=e.md.linkify.matchAtStart(e.src.slice(a-i.length)),!o)||(l=o.url,l.length<=i.length)||(l=l.replace(/\*+$/,""),m=e.md.normalizeLink(l),!e.md.validateLink(m))?!1:(n||(e.pending=e.pending.slice(0,-i.length),g=e.push("link_open","a",1),g.attrs=[["href",m]],g.markup="linkify",g.info="auto",g=e.push("text","",0),g.content=e.md.normalizeLinkText(l),g=e.push("link_close","a",-1),g.markup="linkify",g.info="auto"),e.pos+=l.length-i.length,!0)},VB=Z.isSpace,HB=function(e,n){var a,s,r,i=e.pos;if(e.src.charCodeAt(i)!==10)return!1;if(a=e.pending.length-1,s=e.posMax,!n)if(a>=0&&e.pending.charCodeAt(a)===32)if(a>=1&&e.pending.charCodeAt(a-1)===32){for(r=a-1;r>=1&&e.pending.charCodeAt(r-1)===32;)r--;e.pending=e.pending.slice(0,r),e.push("hardbreak","br",0)}else e.pending=e.pending.slice(0,-1),e.push("softbreak","br",0);else e.push("softbreak","br",0);for(i++;i<s&&VB(e.src.charCodeAt(i));)i++;return e.pos=i,!0},jB=Z.isSpace,Mn=[];for(var Ga=0;Ga<256;Ga++)Mn.push(0);"\\!\"#$%&'()*+,./:;<=>?@[]^_`{|}~-".split("").forEach(function(t){Mn[t.charCodeAt(0)]=1});var UB=function(e,n){var a,s,r,i,o,l=e.pos,m=e.posMax;if(e.src.charCodeAt(l)!==92||(l++,l>=m))return!1;if(a=e.src.charCodeAt(l),a===10){for(n||e.push("hardbreak","br",0),l++;l<m&&(a=e.src.charCodeAt(l),!!jB(a));)l++;return e.pos=l,!0}return i=e.src[l],a>=55296&&a<=56319&&l+1<m&&(s=e.src.charCodeAt(l+1),s>=56320&&s<=57343&&(i+=e.src[l+1],l++)),r="\\"+i,n||(o=e.push("text_special","",0),a<256&&Mn[a]!==0?o.content=i:o.content=r,o.markup=r,o.info="escape"),e.pos=l+1,!0},$B=function(e,n){var a,s,r,i,o,l,m,g,p=e.pos,u=e.src.charCodeAt(p);if(u!==96)return!1;for(a=p,p++,s=e.posMax;p<s&&e.src.charCodeAt(p)===96;)p++;if(r=e.src.slice(a,p),m=r.length,e.backticksScanned&&(e.backticks[m]||0)<=a)return n||(e.pending+=r),e.pos+=m,!0;for(l=p;(o=e.src.indexOf("`",l))!==-1;){for(l=o+1;l<s&&e.src.charCodeAt(l)===96;)l++;if(g=l-o,g===m)return n||(i=e.push("code_inline","code",0),i.markup=r,i.content=e.src.slice(p,o).replace(/\n/g," ").replace(/^ (.+) $/,"$1")),e.pos=l,!0;e.backticks[g]=o}return e.backticksScanned=!0,n||(e.pending+=r),e.pos+=m,!0},Dt={};Dt.tokenize=function(e,n){var a,s,r,i,o,l=e.pos,m=e.src.charCodeAt(l);if(n||m!==126||(s=e.scanDelims(e.pos,!0),i=s.length,o=String.fromCharCode(m),i<2))return!1;for(i%2&&(r=e.push("text","",0),r.content=o,i--),a=0;a<i;a+=2)r=e.push("text","",0),r.content=o+o,e.delimiters.push({marker:m,length:0,token:e.tokens.length-1,end:-1,open:s.can_open,close:s.can_close});return e.pos+=s.length,!0};function Ra(t,e){var n,a,s,r,i,o=[],l=e.length;for(n=0;n<l;n++)s=e[n],s.marker===126&&s.end!==-1&&(r=e[s.end],i=t.tokens[s.token],i.type="s_open",i.tag="s",i.nesting=1,i.markup="~~",i.content="",i=t.tokens[r.token],i.type="s_close",i.tag="s",i.nesting=-1,i.markup="~~",i.content="",t.tokens[r.token-1].type==="text"&&t.tokens[r.token-1].content==="~"&&o.push(r.token-1));for(;o.length;){for(n=o.pop(),a=n+1;a<t.tokens.length&&t.tokens[a].type==="s_close";)a++;a--,n!==a&&(i=t.tokens[a],t.tokens[a]=t.tokens[n],t.tokens[n]=i)}}Dt.postProcess=function(e){var n,a=e.tokens_meta,s=e.tokens_meta.length;for(Ra(e,e.delimiters),n=0;n<s;n++)a[n]&&a[n].delimiters&&Ra(e,a[n].delimiters)};var Mt={};Mt.tokenize=function(e,n){var a,s,r,i=e.pos,o=e.src.charCodeAt(i);if(n||o!==95&&o!==42)return!1;for(s=e.scanDelims(e.pos,o===42),a=0;a<s.length;a++)r=e.push("text","",0),r.content=String.fromCharCode(o),e.delimiters.push({marker:o,length:s.length,token:e.tokens.length-1,end:-1,open:s.can_open,close:s.can_close});return e.pos+=s.length,!0};function Da(t,e){var n,a,s,r,i,o,l=e.length;for(n=l-1;n>=0;n--)a=e[n],!(a.marker!==95&&a.marker!==42)&&a.end!==-1&&(s=e[a.end],o=n>0&&e[n-1].end===a.end+1&&e[n-1].marker===a.marker&&e[n-1].token===a.token-1&&e[a.end+1].token===s.token+1,i=String.fromCharCode(a.marker),r=t.tokens[a.token],r.type=o?"strong_open":"em_open",r.tag=o?"strong":"em",r.nesting=1,r.markup=o?i+i:i,r.content="",r=t.tokens[s.token],r.type=o?"strong_close":"em_close",r.tag=o?"strong":"em",r.nesting=-1,r.markup=o?i+i:i,r.content="",o&&(t.tokens[e[n-1].token].content="",t.tokens[e[a.end+1].token].content="",n--))}Mt.postProcess=function(e){var n,a=e.tokens_meta,s=e.tokens_meta.length;for(Da(e,e.delimiters),n=0;n<s;n++)a[n]&&a[n].delimiters&&Da(e,a[n].delimiters)};var WB=Z.normalizeReference,Qt=Z.isSpace,KB=function(e,n){var a,s,r,i,o,l,m,g,p,u="",c="",k=e.pos,_=e.posMax,x=e.pos,f=!0;if(e.src.charCodeAt(e.pos)!==91||(o=e.pos+1,i=e.md.helpers.parseLinkLabel(e,e.pos,!0),i<0))return!1;if(l=i+1,l<_&&e.src.charCodeAt(l)===40){for(f=!1,l++;l<_&&(s=e.src.charCodeAt(l),!(!Qt(s)&&s!==10));l++);if(l>=_)return!1;if(x=l,m=e.md.helpers.parseLinkDestination(e.src,l,e.posMax),m.ok){for(u=e.md.normalizeLink(m.str),e.md.validateLink(u)?l=m.pos:u="",x=l;l<_&&(s=e.src.charCodeAt(l),!(!Qt(s)&&s!==10));l++);if(m=e.md.helpers.parseLinkTitle(e.src,l,e.posMax),l<_&&x!==l&&m.ok)for(c=m.str,l=m.pos;l<_&&(s=e.src.charCodeAt(l),!(!Qt(s)&&s!==10));l++);}(l>=_||e.src.charCodeAt(l)!==41)&&(f=!0),l++}if(f){if(typeof e.env.references>"u")return!1;if(l<_&&e.src.charCodeAt(l)===91?(x=l+1,l=e.md.helpers.parseLinkLabel(e,l),l>=0?r=e.src.slice(x,l++):l=i+1):l=i+1,r||(r=e.src.slice(o,i)),g=e.env.references[WB(r)],!g)return e.pos=k,!1;u=g.href,c=g.title}return n||(e.pos=o,e.posMax=i,p=e.push("link_open","a",1),p.attrs=a=[["href",u]],c&&a.push(["title",c]),e.linkLevel++,e.md.inline.tokenize(e),e.linkLevel--,p=e.push("link_close","a",-1)),e.pos=l,e.posMax=_,!0},XB=Z.normalizeReference,Jt=Z.isSpace,ZB=function(e,n){var a,s,r,i,o,l,m,g,p,u,c,k,_,x="",f=e.pos,b=e.posMax;if(e.src.charCodeAt(e.pos)!==33||e.src.charCodeAt(e.pos+1)!==91||(l=e.pos+2,o=e.md.helpers.parseLinkLabel(e,e.pos+1,!1),o<0))return!1;if(m=o+1,m<b&&e.src.charCodeAt(m)===40){for(m++;m<b&&(s=e.src.charCodeAt(m),!(!Jt(s)&&s!==10));m++);if(m>=b)return!1;for(_=m,p=e.md.helpers.parseLinkDestination(e.src,m,e.posMax),p.ok&&(x=e.md.normalizeLink(p.str),e.md.validateLink(x)?m=p.pos:x=""),_=m;m<b&&(s=e.src.charCodeAt(m),!(!Jt(s)&&s!==10));m++);if(p=e.md.helpers.parseLinkTitle(e.src,m,e.posMax),m<b&&_!==m&&p.ok)for(u=p.str,m=p.pos;m<b&&(s=e.src.charCodeAt(m),!(!Jt(s)&&s!==10));m++);else u="";if(m>=b||e.src.charCodeAt(m)!==41)return e.pos=f,!1;m++}else{if(typeof e.env.references>"u")return!1;if(m<b&&e.src.charCodeAt(m)===91?(_=m+1,m=e.md.helpers.parseLinkLabel(e,m),m>=0?i=e.src.slice(_,m++):m=o+1):m=o+1,i||(i=e.src.slice(l,o)),g=e.env.references[XB(i)],!g)return e.pos=f,!1;x=g.href,u=g.title}return n||(r=e.src.slice(l,o),e.md.inline.parse(r,e.md,e.env,k=[]),c=e.push("image","img",0),c.attrs=a=[["src",x],["alt",""]],c.children=k,c.content=r,u&&a.push(["title",u])),e.pos=m,e.posMax=b,!0},YB=/^([a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/,QB=/^([a-zA-Z][a-zA-Z0-9+.\-]{1,31}):([^<>\x00-\x20]*)$/,JB=function(e,n){var a,s,r,i,o,l,m=e.pos;if(e.src.charCodeAt(m)!==60)return!1;for(o=e.pos,l=e.posMax;;){if(++m>=l||(i=e.src.charCodeAt(m),i===60))return!1;if(i===62)break}return a=e.src.slice(o+1,m),QB.test(a)?(s=e.md.normalizeLink(a),e.md.validateLink(s)?(n||(r=e.push("link_open","a",1),r.attrs=[["href",s]],r.markup="autolink",r.info="auto",r=e.push("text","",0),r.content=e.md.normalizeLinkText(a),r=e.push("link_close","a",-1),r.markup="autolink",r.info="auto"),e.pos+=a.length+2,!0):!1):YB.test(a)?(s=e.md.normalizeLink("mailto:"+a),e.md.validateLink(s)?(n||(r=e.push("link_open","a",1),r.attrs=[["href",s]],r.markup="autolink",r.info="auto",r=e.push("text","",0),r.content=e.md.normalizeLinkText(a),r=e.push("link_close","a",-1),r.markup="autolink",r.info="auto"),e.pos+=a.length+2,!0):!1):!1},eq=It.HTML_TAG_RE;function tq(t){return/^<a[>\s]/i.test(t)}function nq(t){return/^<\/a\s*>/i.test(t)}function aq(t){var e=t|32;return e>=97&&e<=122}var sq=function(e,n){var a,s,r,i,o=e.pos;return!e.md.options.html||(r=e.posMax,e.src.charCodeAt(o)!==60||o+2>=r)||(a=e.src.charCodeAt(o+1),a!==33&&a!==63&&a!==47&&!aq(a))||(s=e.src.slice(o).match(eq),!s)?!1:(n||(i=e.push("html_inline","",0),i.content=s[0],tq(i.content)&&e.linkLevel++,nq(i.content)&&e.linkLevel--),e.pos+=s[0].length,!0)},Ma=xt,rq=Z.has,oq=Z.isValidEntityCode,Na=Z.fromCodePoint,iq=/^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i,lq=/^&([a-z][a-z0-9]{1,31});/i,uq=function(e,n){var a,s,r,i,o=e.pos,l=e.posMax;if(e.src.charCodeAt(o)!==38||o+1>=l)return!1;if(a=e.src.charCodeAt(o+1),a===35){if(r=e.src.slice(o).match(iq),r)return n||(s=r[1][0].toLowerCase()==="x"?parseInt(r[1].slice(1),16):parseInt(r[1],10),i=e.push("text_special","",0),i.content=oq(s)?Na(s):Na(65533),i.markup=r[0],i.info="entity"),e.pos+=r[0].length,!0}else if(r=e.src.slice(o).match(lq),r&&rq(Ma,r[1]))return n||(i=e.push("text_special","",0),i.content=Ma[r[1]],i.markup=r[0],i.info="entity"),e.pos+=r[0].length,!0;return!1};function Oa(t){var e,n,a,s,r,i,o,l,m={},g=t.length;if(g){var p=0,u=-2,c=[];for(e=0;e<g;e++)if(a=t[e],c.push(0),(t[p].marker!==a.marker||u!==a.token-1)&&(p=e),u=a.token,a.length=a.length||0,!!a.close){for(m.hasOwnProperty(a.marker)||(m[a.marker]=[-1,-1,-1,-1,-1,-1]),r=m[a.marker][(a.open?3:0)+a.length%3],n=p-c[p]-1,i=n;n>r;n-=c[n]+1)if(s=t[n],s.marker===a.marker&&s.open&&s.end<0&&(o=!1,(s.close||a.open)&&(s.length+a.length)%3===0&&(s.length%3!==0||a.length%3!==0)&&(o=!0),!o)){l=n>0&&!t[n-1].open?c[n-1]+1:0,c[e]=e-n+l,c[n]=l,a.open=!1,s.end=e,s.close=!1,i=-1,u=-2;break}i!==-1&&(m[a.marker][(a.open?3:0)+(a.length||0)%3]=i)}}}var mq=function(e){var n,a=e.tokens_meta,s=e.tokens_meta.length;for(Oa(e.delimiters),n=0;n<s;n++)a[n]&&a[n].delimiters&&Oa(a[n].delimiters)},cq=function(e){var n,a,s=0,r=e.tokens,i=e.tokens.length;for(n=a=0;n<i;n++)r[n].nesting<0&&s--,r[n].level=s,r[n].nesting>0&&s++,r[n].type==="text"&&n+1<i&&r[n+1].type==="text"?r[n+1].content=r[n].content+r[n+1].content:(n!==a&&(r[a]=r[n]),a++);n!==a&&(r.length=a)},Nn=Rn,Ba=Z.isWhiteSpace,qa=Z.isPunctChar,Fa=Z.isMdAsciiPunct;function ut(t,e,n,a){this.src=t,this.env=n,this.md=e,this.tokens=a,this.tokens_meta=Array(a.length),this.pos=0,this.posMax=this.src.length,this.level=0,this.pending="",this.pendingLevel=0,this.cache={},this.delimiters=[],this._prev_delimiters=[],this.backticks={},this.backticksScanned=!1,this.linkLevel=0}ut.prototype.pushPending=function(){var t=new Nn("text","",0);return t.content=this.pending,t.level=this.pendingLevel,this.tokens.push(t),this.pending="",t};ut.prototype.push=function(t,e,n){this.pending&&this.pushPending();var a=new Nn(t,e,n),s=null;return n<0&&(this.level--,this.delimiters=this._prev_delimiters.pop()),a.level=this.level,n>0&&(this.level++,this._prev_delimiters.push(this.delimiters),this.delimiters=[],s={delimiters:this.delimiters}),this.pendingLevel=this.level,this.tokens.push(a),this.tokens_meta.push(s),a};ut.prototype.scanDelims=function(t,e){var n=t,a,s,r,i,o,l,m,g,p,u=!0,c=!0,k=this.posMax,_=this.src.charCodeAt(t);for(a=t>0?this.src.charCodeAt(t-1):32;n<k&&this.src.charCodeAt(n)===_;)n++;return r=n-t,s=n<k?this.src.charCodeAt(n):32,m=Fa(a)||qa(String.fromCharCode(a)),p=Fa(s)||qa(String.fromCharCode(s)),l=Ba(a),g=Ba(s),g?u=!1:p&&(l||m||(u=!1)),l?c=!1:m&&(g||p||(c=!1)),e?(i=u,o=c):(i=u&&(!c||m),o=c&&(!u||p)),{can_open:i,can_close:o,length:r}};ut.prototype.Token=Nn;var gq=ut,za=Gn,en=[["text",qB],["linkify",zB],["newline",HB],["escape",UB],["backticks",$B],["strikethrough",Dt.tokenize],["emphasis",Mt.tokenize],["link",KB],["image",ZB],["autolink",JB],["html_inline",sq],["entity",uq]],tn=[["balance_pairs",mq],["strikethrough",Dt.postProcess],["emphasis",Mt.postProcess],["fragments_join",cq]];function mt(){var t;for(this.ruler=new za,t=0;t<en.length;t++)this.ruler.push(en[t][0],en[t][1]);for(this.ruler2=new za,t=0;t<tn.length;t++)this.ruler2.push(tn[t][0],tn[t][1])}mt.prototype.skipToken=function(t){var e,n,a=t.pos,s=this.ruler.getRules(""),r=s.length,i=t.md.options.maxNesting,o=t.cache;if(typeof o[a]<"u"){t.pos=o[a];return}if(t.level<i){for(n=0;n<r;n++)if(t.level++,e=s[n](t,!0),t.level--,e){if(a>=t.pos)throw new Error("inline rule didn't increment state.pos");break}}else t.pos=t.posMax;e||t.pos++,o[a]=t.pos};mt.prototype.tokenize=function(t){for(var e,n,a,s=this.ruler.getRules(""),r=s.length,i=t.posMax,o=t.md.options.maxNesting;t.pos<i;){if(a=t.pos,t.level<o){for(n=0;n<r;n++)if(e=s[n](t,!1),e){if(a>=t.pos)throw new Error("inline rule didn't increment state.pos");break}}if(e){if(t.pos>=i)break;continue}t.pending+=t.src[t.pos++]}t.pending&&t.pushPending()};mt.prototype.parse=function(t,e,n,a){var s,r,i,o=new this.State(t,e,n,a);for(this.tokenize(o),r=this.ruler2.getRules(""),i=r.length,s=0;s<i;s++)r[s](o)};mt.prototype.State=gq;var pq=mt,nn,Va;function bq(){return Va||(Va=1,nn=function(t){var e={};t=t||{},e.src_Any=Ks().source,e.src_Cc=Xs().source,e.src_Z=Zs().source,e.src_P=In.source,e.src_ZPCc=[e.src_Z,e.src_P,e.src_Cc].join("|"),e.src_ZCc=[e.src_Z,e.src_Cc].join("|");var n="[><｜]";return e.src_pseudo_letter="(?:(?!"+n+"|"+e.src_ZPCc+")"+e.src_Any+")",e.src_ip4="(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)",e.src_auth="(?:(?:(?!"+e.src_ZCc+"|[@/\\[\\]()]).)+@)?",e.src_port="(?::(?:6(?:[0-4]\\d{3}|5(?:[0-4]\\d{2}|5(?:[0-2]\\d|3[0-5])))|[1-5]?\\d{1,4}))?",e.src_host_terminator="(?=$|"+n+"|"+e.src_ZPCc+")(?!"+(t["---"]?"-(?!--)|":"-|")+"_|:\\d|\\.-|\\.(?!$|"+e.src_ZPCc+"))",e.src_path="(?:[/?#](?:(?!"+e.src_ZCc+"|"+n+`|[()[\\]{}.,"'?!\\-;]).|\\[(?:(?!`+e.src_ZCc+"|\\]).)*\\]|\\((?:(?!"+e.src_ZCc+"|[)]).)*\\)|\\{(?:(?!"+e.src_ZCc+'|[}]).)*\\}|\\"(?:(?!'+e.src_ZCc+`|["]).)+\\"|\\'(?:(?!`+e.src_ZCc+"|[']).)+\\'|\\'(?="+e.src_pseudo_letter+"|[-])|\\.{2,}[a-zA-Z0-9%/&]|\\.(?!"+e.src_ZCc+"|[.]|$)|"+(t["---"]?"\\-(?!--(?:[^-]|$))(?:-*)|":"\\-+|")+",(?!"+e.src_ZCc+"|$)|;(?!"+e.src_ZCc+"|$)|\\!+(?!"+e.src_ZCc+"|[!]|$)|\\?(?!"+e.src_ZCc+"|[?]|$))+|\\/)?",e.src_email_name='[\\-;:&=\\+\\$,\\.a-zA-Z0-9_][\\-;:&=\\+\\$,\\"\\.a-zA-Z0-9_]*',e.src_xn="xn--[a-z0-9\\-]{1,59}",e.src_domain_root="(?:"+e.src_xn+"|"+e.src_pseudo_letter+"{1,63})",e.src_domain="(?:"+e.src_xn+"|(?:"+e.src_pseudo_letter+")|(?:"+e.src_pseudo_letter+"(?:-|"+e.src_pseudo_letter+"){0,61}"+e.src_pseudo_letter+"))",e.src_host="(?:(?:(?:(?:"+e.src_domain+")\\.)*"+e.src_domain+"))",e.tpl_host_fuzzy="(?:"+e.src_ip4+"|(?:(?:(?:"+e.src_domain+")\\.)+(?:%TLDS%)))",e.tpl_host_no_ip_fuzzy="(?:(?:(?:"+e.src_domain+")\\.)+(?:%TLDS%))",e.src_host_strict=e.src_host+e.src_host_terminator,e.tpl_host_fuzzy_strict=e.tpl_host_fuzzy+e.src_host_terminator,e.src_host_port_strict=e.src_host+e.src_port+e.src_host_terminator,e.tpl_host_port_fuzzy_strict=e.tpl_host_fuzzy+e.src_port+e.src_host_terminator,e.tpl_host_port_no_ip_fuzzy_strict=e.tpl_host_no_ip_fuzzy+e.src_port+e.src_host_terminator,e.tpl_host_fuzzy_test="localhost|www\\.|\\.\\d{1,3}\\.|(?:\\.(?:%TLDS%)(?:"+e.src_ZPCc+"|>|$))",e.tpl_email_fuzzy="(^|"+n+'|"|\\(|'+e.src_ZCc+")("+e.src_email_name+"@"+e.tpl_host_fuzzy_strict+")",e.tpl_link_fuzzy="(^|(?![.:/\\-_@])(?:[$+<=>^`|｜]|"+e.src_ZPCc+"))((?![$+<=>^`|｜])"+e.tpl_host_port_fuzzy_strict+e.src_path+")",e.tpl_link_no_ip_fuzzy="(^|(?![.:/\\-_@])(?:[$+<=>^`|｜]|"+e.src_ZPCc+"))((?![$+<=>^`|｜])"+e.tpl_host_port_no_ip_fuzzy_strict+e.src_path+")",e}),nn}function kn(t){var e=Array.prototype.slice.call(arguments,1);return e.forEach(function(n){n&&Object.keys(n).forEach(function(a){t[a]=n[a]})}),t}function Nt(t){return Object.prototype.toString.call(t)}function dq(t){return Nt(t)==="[object String]"}function hq(t){return Nt(t)==="[object Object]"}function fq(t){return Nt(t)==="[object RegExp]"}function Ha(t){return Nt(t)==="[object Function]"}function yq(t){return t.replace(/[.?*+^$[\]\\(){}|-]/g,"\\$&")}var ar={fuzzyLink:!0,fuzzyEmail:!0,fuzzyIP:!1};function vq(t){return Object.keys(t||{}).reduce(function(e,n){return e||ar.hasOwnProperty(n)},!1)}var Lq={"http:":{validate:function(t,e,n){var a=t.slice(e);return n.re.http||(n.re.http=new RegExp("^\\/\\/"+n.re.src_auth+n.re.src_host_port_strict+n.re.src_path,"i")),n.re.http.test(a)?a.match(n.re.http)[0].length:0}},"https:":"http:","ftp:":"http:","//":{validate:function(t,e,n){var a=t.slice(e);return n.re.no_http||(n.re.no_http=new RegExp("^"+n.re.src_auth+"(?:localhost|(?:(?:"+n.re.src_domain+")\\.)+"+n.re.src_domain_root+")"+n.re.src_port+n.re.src_host_terminator+n.re.src_path,"i")),n.re.no_http.test(a)?e>=3&&t[e-3]===":"||e>=3&&t[e-3]==="/"?0:a.match(n.re.no_http)[0].length:0}},"mailto:":{validate:function(t,e,n){var a=t.slice(e);return n.re.mailto||(n.re.mailto=new RegExp("^"+n.re.src_email_name+"@"+n.re.src_host_strict,"i")),n.re.mailto.test(a)?a.match(n.re.mailto)[0].length:0}}},Tq="a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]",xq="biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф".split("|");function kq(t){t.__index__=-1,t.__text_cache__=""}function Cq(t){return function(e,n){var a=e.slice(n);return t.test(a)?a.match(t)[0].length:0}}function ja(){return function(t,e){e.normalize(t)}}function Ct(t){var e=t.re=bq()(t.__opts__),n=t.__tlds__.slice();t.onCompile(),t.__tlds_replaced__||n.push(Tq),n.push(e.src_xn),e.src_tlds=n.join("|");function a(o){return o.replace("%TLDS%",e.src_tlds)}e.email_fuzzy=RegExp(a(e.tpl_email_fuzzy),"i"),e.link_fuzzy=RegExp(a(e.tpl_link_fuzzy),"i"),e.link_no_ip_fuzzy=RegExp(a(e.tpl_link_no_ip_fuzzy),"i"),e.host_fuzzy_test=RegExp(a(e.tpl_host_fuzzy_test),"i");var s=[];t.__compiled__={};function r(o,l){throw new Error('(LinkifyIt) Invalid schema "'+o+'": '+l)}Object.keys(t.__schemas__).forEach(function(o){var l=t.__schemas__[o];if(l!==null){var m={validate:null,link:null};if(t.__compiled__[o]=m,hq(l)){fq(l.validate)?m.validate=Cq(l.validate):Ha(l.validate)?m.validate=l.validate:r(o,l),Ha(l.normalize)?m.normalize=l.normalize:l.normalize?r(o,l):m.normalize=ja();return}if(dq(l)){s.push(o);return}r(o,l)}}),s.forEach(function(o){t.__compiled__[t.__schemas__[o]]&&(t.__compiled__[o].validate=t.__compiled__[t.__schemas__[o]].validate,t.__compiled__[o].normalize=t.__compiled__[t.__schemas__[o]].normalize)}),t.__compiled__[""]={validate:null,normalize:ja()};var i=Object.keys(t.__compiled__).filter(function(o){return o.length>0&&t.__compiled__[o]}).map(yq).join("|");t.re.schema_test=RegExp("(^|(?!_)(?:[><｜]|"+e.src_ZPCc+"))("+i+")","i"),t.re.schema_search=RegExp("(^|(?!_)(?:[><｜]|"+e.src_ZPCc+"))("+i+")","ig"),t.re.schema_at_start=RegExp("^"+t.re.schema_search.source,"i"),t.re.pretest=RegExp("("+t.re.schema_test.source+")|("+t.re.host_fuzzy_test.source+")|@","i"),kq(t)}function _q(t,e){var n=t.__index__,a=t.__last_index__,s=t.__text_cache__.slice(n,a);this.schema=t.__schema__.toLowerCase(),this.index=n+e,this.lastIndex=a+e,this.raw=s,this.text=s,this.url=s}function Cn(t,e){var n=new _q(t,e);return t.__compiled__[n.schema].normalize(n,t),n}function he(t,e){if(!(this instanceof he))return new he(t,e);e||vq(t)&&(e=t,t={}),this.__opts__=kn({},ar,e),this.__index__=-1,this.__last_index__=-1,this.__schema__="",this.__text_cache__="",this.__schemas__=kn({},Lq,t),this.__compiled__={},this.__tlds__=xq,this.__tlds_replaced__=!1,this.re={},Ct(this)}he.prototype.add=function(e,n){return this.__schemas__[e]=n,Ct(this),this};he.prototype.set=function(e){return this.__opts__=kn(this.__opts__,e),this};he.prototype.test=function(e){if(this.__text_cache__=e,this.__index__=-1,!e.length)return!1;var n,a,s,r,i,o,l,m,g;if(this.re.schema_test.test(e)){for(l=this.re.schema_search,l.lastIndex=0;(n=l.exec(e))!==null;)if(r=this.testSchemaAt(e,n[2],l.lastIndex),r){this.__schema__=n[2],this.__index__=n.index+n[1].length,this.__last_index__=n.index+n[0].length+r;break}}return this.__opts__.fuzzyLink&&this.__compiled__["http:"]&&(m=e.search(this.re.host_fuzzy_test),m>=0&&(this.__index__<0||m<this.__index__)&&(a=e.match(this.__opts__.fuzzyIP?this.re.link_fuzzy:this.re.link_no_ip_fuzzy))!==null&&(i=a.index+a[1].length,(this.__index__<0||i<this.__index__)&&(this.__schema__="",this.__index__=i,this.__last_index__=a.index+a[0].length))),this.__opts__.fuzzyEmail&&this.__compiled__["mailto:"]&&(g=e.indexOf("@"),g>=0&&(s=e.match(this.re.email_fuzzy))!==null&&(i=s.index+s[1].length,o=s.index+s[0].length,(this.__index__<0||i<this.__index__||i===this.__index__&&o>this.__last_index__)&&(this.__schema__="mailto:",this.__index__=i,this.__last_index__=o))),this.__index__>=0};he.prototype.pretest=function(e){return this.re.pretest.test(e)};he.prototype.testSchemaAt=function(e,n,a){return this.__compiled__[n.toLowerCase()]?this.__compiled__[n.toLowerCase()].validate(e,a,this):0};he.prototype.match=function(e){var n=0,a=[];this.__index__>=0&&this.__text_cache__===e&&(a.push(Cn(this,n)),n=this.__last_index__);for(var s=n?e.slice(n):e;this.test(s);)a.push(Cn(this,n)),s=s.slice(this.__last_index__),n+=this.__last_index__;return a.length?a:null};he.prototype.matchAtStart=function(e){if(this.__text_cache__=e,this.__index__=-1,!e.length)return null;var n=this.re.schema_at_start.exec(e);if(!n)return null;var a=this.testSchemaAt(e,n[2],n[0].length);return a?(this.__schema__=n[2],this.__index__=n.index+n[1].length,this.__last_index__=n.index+n[0].length+a,Cn(this,0)):null};he.prototype.tlds=function(e,n){return e=Array.isArray(e)?e:[e],n?(this.__tlds__=this.__tlds__.concat(e).sort().filter(function(a,s,r){return a!==r[s-1]}).reverse(),Ct(this),this):(this.__tlds__=e.slice(),this.__tlds_replaced__=!0,Ct(this),this)};he.prototype.normalize=function(e){e.schema||(e.url="http://"+e.url),e.schema==="mailto:"&&!/^mailto:/i.test(e.url)&&(e.url="mailto:"+e.url)};he.prototype.onCompile=function(){};var wq=he;const Eq={},Pq=Object.freeze(Object.defineProperty({__proto__:null,default:Eq},Symbol.toStringTag,{value:"Module"})),Sq=Hi(Pq);var Aq={options:{html:!1,xhtmlOut:!1,breaks:!1,langPrefix:"language-",linkify:!1,typographer:!1,quotes:"“”‘’",highlight:null,maxNesting:100},components:{core:{},block:{},inline:{}}},Iq={options:{html:!1,xhtmlOut:!1,breaks:!1,langPrefix:"language-",linkify:!1,typographer:!1,quotes:"“”‘’",highlight:null,maxNesting:20},components:{core:{rules:["normalize","block","inline","text_join"]},block:{rules:["paragraph"]},inline:{rules:["text"],rules2:["balance_pairs","fragments_join"]}}},Gq={options:{html:!0,xhtmlOut:!0,breaks:!1,langPrefix:"language-",linkify:!1,typographer:!1,quotes:"“”‘’",highlight:null,maxNesting:20},components:{core:{rules:["normalize","block","inline","text_join"]},block:{rules:["blockquote","code","fence","heading","hr","html_block","lheading","list","reference","paragraph"]},inline:{rules:["autolink","backticks","emphasis","entity","escape","html_inline","image","link","newline","text"],rules2:["balance_pairs","emphasis","fragments_join"]}}},it=Z,Rq=At,Dq=DO,Mq=sB,Nq=OB,Oq=pq,Bq=wq,Oe=Qe,sr=Sq,qq={default:Aq,zero:Iq,commonmark:Gq},Fq=/^(vbscript|javascript|file|data):/,zq=/^data:image\/(gif|png|jpeg|webp);/;function Vq(t){var e=t.trim().toLowerCase();return Fq.test(e)?!!zq.test(e):!0}var rr=["http:","https:","mailto:"];function Hq(t){var e=Oe.parse(t,!0);if(e.hostname&&(!e.protocol||rr.indexOf(e.protocol)>=0))try{e.hostname=sr.toASCII(e.hostname)}catch{}return Oe.encode(Oe.format(e))}function jq(t){var e=Oe.parse(t,!0);if(e.hostname&&(!e.protocol||rr.indexOf(e.protocol)>=0))try{e.hostname=sr.toUnicode(e.hostname)}catch{}return Oe.decode(Oe.format(e),Oe.decode.defaultChars+"%")}function Le(t,e){if(!(this instanceof Le))return new Le(t,e);e||it.isString(t)||(e=t||{},t="default"),this.inline=new Oq,this.block=new Nq,this.core=new Mq,this.renderer=new Dq,this.linkify=new Bq,this.validateLink=Vq,this.normalizeLink=Hq,this.normalizeLinkText=jq,this.utils=it,this.helpers=it.assign({},Rq),this.options={},this.configure(t),e&&this.set(e)}Le.prototype.set=function(t){return it.assign(this.options,t),this};Le.prototype.configure=function(t){var e=this,n;if(it.isString(t)&&(n=t,t=qq[n],!t))throw new Error('Wrong `markdown-it` preset "'+n+'", check name');if(!t)throw new Error("Wrong `markdown-it` preset, can't be empty");return t.options&&e.set(t.options),t.components&&Object.keys(t.components).forEach(function(a){t.components[a].rules&&e[a].ruler.enableOnly(t.components[a].rules),t.components[a].rules2&&e[a].ruler2.enableOnly(t.components[a].rules2)}),this};Le.prototype.enable=function(t,e){var n=[];Array.isArray(t)||(t=[t]),["core","block","inline"].forEach(function(s){n=n.concat(this[s].ruler.enable(t,!0))},this),n=n.concat(this.inline.ruler2.enable(t,!0));var a=t.filter(function(s){return n.indexOf(s)<0});if(a.length&&!e)throw new Error("MarkdownIt. Failed to enable unknown rule(s): "+a);return this};Le.prototype.disable=function(t,e){var n=[];Array.isArray(t)||(t=[t]),["core","block","inline"].forEach(function(s){n=n.concat(this[s].ruler.disable(t,!0))},this),n=n.concat(this.inline.ruler2.disable(t,!0));var a=t.filter(function(s){return n.indexOf(s)<0});if(a.length&&!e)throw new Error("MarkdownIt. Failed to disable unknown rule(s): "+a);return this};Le.prototype.use=function(t){var e=[this].concat(Array.prototype.slice.call(arguments,1));return t.apply(t,e),this};Le.prototype.parse=function(t,e){if(typeof t!="string")throw new Error("Input data should be a String");var n=new this.core.State(t,this,e);return this.core.process(n),n.tokens};Le.prototype.render=function(t,e){return e=e||{},this.renderer.render(this.parse(t,e),this.options,e)};Le.prototype.parseInline=function(t,e){var n=new this.core.State(t,this,e);return n.inlineMode=!0,this.core.process(n),n.tokens};Le.prototype.renderInline=function(t,e){return e=e||{},this.renderer.render(this.parseInline(t,e),this.options,e)};var Uq=Le;(function(t){t.exports=Uq})(ji);const $q=Ws(xn);function or(t){throw new Error('Could not dynamically require "'+t+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var _t={},Wq={get exports(){return _t},set exports(t){_t=t}},_n={},Kq={get exports(){return _n},set exports(t){_n=t}};(function(t){var e=typeof window<"u"?window:typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope?self:{};/**
 * Prism: Lightweight, robust, elegant syntax highlighting
 *
 * @license MIT <https://opensource.org/licenses/MIT>
 * @author Lea Verou <https://lea.verou.me>
 * @namespace
 * @public
 */var n=function(a){var s=/(?:^|\s)lang(?:uage)?-([\w-]+)(?=\s|$)/i,r=0,i={},o={manual:a.Prism&&a.Prism.manual,disableWorkerMessageHandler:a.Prism&&a.Prism.disableWorkerMessageHandler,util:{encode:function b(h){return h instanceof l?new l(h.type,b(h.content),h.alias):Array.isArray(h)?h.map(b):h.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/\u00a0/g," ")},type:function(b){return Object.prototype.toString.call(b).slice(8,-1)},objId:function(b){return b.__id||Object.defineProperty(b,"__id",{value:++r}),b.__id},clone:function b(h,v){v=v||{};var d,L;switch(o.util.type(h)){case"Object":if(L=o.util.objId(h),v[L])return v[L];d={},v[L]=d;for(var C in h)h.hasOwnProperty(C)&&(d[C]=b(h[C],v));return d;case"Array":return L=o.util.objId(h),v[L]?v[L]:(d=[],v[L]=d,h.forEach(function(A,I){d[I]=b(A,v)}),d);default:return h}},getLanguage:function(b){for(;b;){var h=s.exec(b.className);if(h)return h[1].toLowerCase();b=b.parentElement}return"none"},setLanguage:function(b,h){b.className=b.className.replace(RegExp(s,"gi"),""),b.classList.add("language-"+h)},currentScript:function(){if(typeof document>"u")return null;if("currentScript"in document&&1<2)return document.currentScript;try{throw new Error}catch(d){var b=(/at [^(\r\n]*\((.*):[^:]+:[^:]+\)$/i.exec(d.stack)||[])[1];if(b){var h=document.getElementsByTagName("script");for(var v in h)if(h[v].src==b)return h[v]}return null}},isActive:function(b,h,v){for(var d="no-"+h;b;){var L=b.classList;if(L.contains(h))return!0;if(L.contains(d))return!1;b=b.parentElement}return!!v}},languages:{plain:i,plaintext:i,text:i,txt:i,extend:function(b,h){var v=o.util.clone(o.languages[b]);for(var d in h)v[d]=h[d];return v},insertBefore:function(b,h,v,d){d=d||o.languages;var L=d[b],C={};for(var A in L)if(L.hasOwnProperty(A)){if(A==h)for(var I in v)v.hasOwnProperty(I)&&(C[I]=v[I]);v.hasOwnProperty(A)||(C[A]=L[A])}var R=d[b];return d[b]=C,o.languages.DFS(o.languages,function(y,E){E===R&&y!=b&&(this[y]=C)}),C},DFS:function b(h,v,d,L){L=L||{};var C=o.util.objId;for(var A in h)if(h.hasOwnProperty(A)){v.call(h,A,h[A],d||A);var I=h[A],R=o.util.type(I);R==="Object"&&!L[C(I)]?(L[C(I)]=!0,b(I,v,null,L)):R==="Array"&&!L[C(I)]&&(L[C(I)]=!0,b(I,v,A,L))}}},plugins:{},highlightAll:function(b,h){o.highlightAllUnder(document,b,h)},highlightAllUnder:function(b,h,v){var d={callback:v,container:b,selector:'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'};o.hooks.run("before-highlightall",d),d.elements=Array.prototype.slice.apply(d.container.querySelectorAll(d.selector)),o.hooks.run("before-all-elements-highlight",d);for(var L=0,C;C=d.elements[L++];)o.highlightElement(C,h===!0,d.callback)},highlightElement:function(b,h,v){var d=o.util.getLanguage(b),L=o.languages[d];o.util.setLanguage(b,d);var C=b.parentElement;C&&C.nodeName.toLowerCase()==="pre"&&o.util.setLanguage(C,d);var A=b.textContent,I={element:b,language:d,grammar:L,code:A};function R(E){I.highlightedCode=E,o.hooks.run("before-insert",I),I.element.innerHTML=I.highlightedCode,o.hooks.run("after-highlight",I),o.hooks.run("complete",I),v&&v.call(I.element)}if(o.hooks.run("before-sanity-check",I),C=I.element.parentElement,C&&C.nodeName.toLowerCase()==="pre"&&!C.hasAttribute("tabindex")&&C.setAttribute("tabindex","0"),!I.code){o.hooks.run("complete",I),v&&v.call(I.element);return}if(o.hooks.run("before-highlight",I),!I.grammar){R(o.util.encode(I.code));return}if(h&&a.Worker){var y=new Worker(o.filename);y.onmessage=function(E){R(E.data)},y.postMessage(JSON.stringify({language:I.language,code:I.code,immediateClose:!0}))}else R(o.highlight(I.code,I.grammar,I.language))},highlight:function(b,h,v){var d={code:b,grammar:h,language:v};if(o.hooks.run("before-tokenize",d),!d.grammar)throw new Error('The language "'+d.language+'" has no grammar.');return d.tokens=o.tokenize(d.code,d.grammar),o.hooks.run("after-tokenize",d),l.stringify(o.util.encode(d.tokens),d.language)},tokenize:function(b,h){var v=h.rest;if(v){for(var d in v)h[d]=v[d];delete h.rest}var L=new p;return u(L,L.head,b),g(b,L,h,L.head,0),k(L)},hooks:{all:{},add:function(b,h){var v=o.hooks.all;v[b]=v[b]||[],v[b].push(h)},run:function(b,h){var v=o.hooks.all[b];if(!(!v||!v.length))for(var d=0,L;L=v[d++];)L(h)}},Token:l};a.Prism=o;function l(b,h,v,d){this.type=b,this.content=h,this.alias=v,this.length=(d||"").length|0}l.stringify=function b(h,v){if(typeof h=="string")return h;if(Array.isArray(h)){var d="";return h.forEach(function(R){d+=b(R,v)}),d}var L={type:h.type,content:b(h.content,v),tag:"span",classes:["token",h.type],attributes:{},language:v},C=h.alias;C&&(Array.isArray(C)?Array.prototype.push.apply(L.classes,C):L.classes.push(C)),o.hooks.run("wrap",L);var A="";for(var I in L.attributes)A+=" "+I+'="'+(L.attributes[I]||"").replace(/"/g,"&quot;")+'"';return"<"+L.tag+' class="'+L.classes.join(" ")+'"'+A+">"+L.content+"</"+L.tag+">"};function m(b,h,v,d){b.lastIndex=h;var L=b.exec(v);if(L&&d&&L[1]){var C=L[1].length;L.index+=C,L[0]=L[0].slice(C)}return L}function g(b,h,v,d,L,C){for(var A in v)if(!(!v.hasOwnProperty(A)||!v[A])){var I=v[A];I=Array.isArray(I)?I:[I];for(var R=0;R<I.length;++R){if(C&&C.cause==A+","+R)return;var y=I[R],E=y.inside,S=!!y.lookbehind,T=!!y.greedy,P=y.alias;if(T&&!y.pattern.global){var w=y.pattern.toString().match(/[imsuy]*$/)[0];y.pattern=RegExp(y.pattern.source,w+"g")}for(var D=y.pattern||y,M=d.next,z=L;M!==h.tail&&!(C&&z>=C.reach);z+=M.value.length,M=M.next){var H=M.value;if(h.length>b.length)return;if(!(H instanceof l)){var Q=1,$;if(T){if($=m(D,z,b,S),!$||$.index>=b.length)break;var re=$.index,le=$.index+$[0].length,se=z;for(se+=M.value.length;re>=se;)M=M.next,se+=M.value.length;if(se-=M.value.length,z=se,M.value instanceof l)continue;for(var pe=M;pe!==h.tail&&(se<le||typeof pe.value=="string");pe=pe.next)Q++,se+=pe.value.length;Q--,H=b.slice(z,se),$.index-=z}else if($=m(D,0,H,S),!$)continue;var re=$.index,G=$[0],O=H.slice(0,re),N=H.slice(re+G.length),B=z+H.length;C&&B>C.reach&&(C.reach=B);var K=M.prev;O&&(K=u(h,K,O),z+=O.length),c(h,K,Q);var J=new l(A,E?o.tokenize(G,E):G,P,G);if(M=u(h,K,J),N&&u(h,M,N),Q>1){var j={cause:A+","+R,reach:B};g(b,h,v,M.prev,z,j),C&&j.reach>C.reach&&(C.reach=j.reach)}}}}}}function p(){var b={value:null,prev:null,next:null},h={value:null,prev:b,next:null};b.next=h,this.head=b,this.tail=h,this.length=0}function u(b,h,v){var d=h.next,L={value:v,prev:h,next:d};return h.next=L,d.prev=L,b.length++,L}function c(b,h,v){for(var d=h.next,L=0;L<v&&d!==b.tail;L++)d=d.next;h.next=d,d.prev=h,b.length-=L}function k(b){for(var h=[],v=b.head.next;v!==b.tail;)h.push(v.value),v=v.next;return h}if(!a.document)return a.addEventListener&&(o.disableWorkerMessageHandler||a.addEventListener("message",function(b){var h=JSON.parse(b.data),v=h.language,d=h.code,L=h.immediateClose;a.postMessage(o.highlight(d,o.languages[v],v)),L&&a.close()},!1)),o;var _=o.util.currentScript();_&&(o.filename=_.src,_.hasAttribute("data-manual")&&(o.manual=!0));function x(){o.manual||o.highlightAll()}if(!o.manual){var f=document.readyState;f==="loading"||f==="interactive"&&_&&_.defer?document.addEventListener("DOMContentLoaded",x):window.requestAnimationFrame?window.requestAnimationFrame(x):window.setTimeout(x,16)}return o}(e);t.exports&&(t.exports=n),typeof q<"u"&&(q.Prism=n),n.languages.markup={comment:{pattern:/<!--(?:(?!<!--)[\s\S])*?-->/,greedy:!0},prolog:{pattern:/<\?[\s\S]+?\?>/,greedy:!0},doctype:{pattern:/<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:[^<"'\]]|"[^"]*"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>/i,greedy:!0,inside:{"internal-subset":{pattern:/(^[^\[]*\[)[\s\S]+(?=\]>$)/,lookbehind:!0,greedy:!0,inside:null},string:{pattern:/"[^"]*"|'[^']*'/,greedy:!0},punctuation:/^<!|>$|[[\]]/,"doctype-tag":/^DOCTYPE/i,name:/[^\s<>'"]+/}},cdata:{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,greedy:!0},tag:{pattern:/<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/,greedy:!0,inside:{tag:{pattern:/^<\/?[^\s>\/]+/,inside:{punctuation:/^<\/?/,namespace:/^[^\s>\/:]+:/}},"special-attr":[],"attr-value":{pattern:/=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/,inside:{punctuation:[{pattern:/^=/,alias:"attr-equals"},{pattern:/^(\s*)["']|["']$/,lookbehind:!0}]}},punctuation:/\/?>/,"attr-name":{pattern:/[^\s>\/]+/,inside:{namespace:/^[^\s>\/:]+:/}}}},entity:[{pattern:/&[\da-z]{1,8};/i,alias:"named-entity"},/&#x?[\da-f]{1,8};/i]},n.languages.markup.tag.inside["attr-value"].inside.entity=n.languages.markup.entity,n.languages.markup.doctype.inside["internal-subset"].inside=n.languages.markup,n.hooks.add("wrap",function(a){a.type==="entity"&&(a.attributes.title=a.content.replace(/&amp;/,"&"))}),Object.defineProperty(n.languages.markup.tag,"addInlined",{value:function(s,r){var i={};i["language-"+r]={pattern:/(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,lookbehind:!0,inside:n.languages[r]},i.cdata=/^<!\[CDATA\[|\]\]>$/i;var o={"included-cdata":{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,inside:i}};o["language-"+r]={pattern:/[\s\S]+/,inside:n.languages[r]};var l={};l[s]={pattern:RegExp(/(<__[^>]*>)(?:<!\[CDATA\[(?:[^\]]|\](?!\]>))*\]\]>|(?!<!\[CDATA\[)[\s\S])*?(?=<\/__>)/.source.replace(/__/g,function(){return s}),"i"),lookbehind:!0,greedy:!0,inside:o},n.languages.insertBefore("markup","cdata",l)}}),Object.defineProperty(n.languages.markup.tag,"addAttribute",{value:function(a,s){n.languages.markup.tag.inside["special-attr"].push({pattern:RegExp(/(^|["'\s])/.source+"(?:"+a+")"+/\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))/.source,"i"),lookbehind:!0,inside:{"attr-name":/^[^\s=]+/,"attr-value":{pattern:/=[\s\S]+/,inside:{value:{pattern:/(^=\s*(["']|(?!["'])))\S[\s\S]*(?=\2$)/,lookbehind:!0,alias:[s,"language-"+s],inside:n.languages[s]},punctuation:[{pattern:/^=/,alias:"attr-equals"},/"|'/]}}}})}}),n.languages.html=n.languages.markup,n.languages.mathml=n.languages.markup,n.languages.svg=n.languages.markup,n.languages.xml=n.languages.extend("markup",{}),n.languages.ssml=n.languages.xml,n.languages.atom=n.languages.xml,n.languages.rss=n.languages.xml,function(a){var s=/(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/;a.languages.css={comment:/\/\*[\s\S]*?\*\//,atrule:{pattern:RegExp("@[\\w-](?:"+/[^;{\s"']|\s+(?!\s)/.source+"|"+s.source+")*?"+/(?:;|(?=\s*\{))/.source),inside:{rule:/^@[\w-]+/,"selector-function-argument":{pattern:/(\bselector\s*\(\s*(?![\s)]))(?:[^()\s]|\s+(?![\s)])|\((?:[^()]|\([^()]*\))*\))+(?=\s*\))/,lookbehind:!0,alias:"selector"},keyword:{pattern:/(^|[^\w-])(?:and|not|only|or)(?![\w-])/,lookbehind:!0}}},url:{pattern:RegExp("\\burl\\((?:"+s.source+"|"+/(?:[^\\\r\n()"']|\\[\s\S])*/.source+")\\)","i"),greedy:!0,inside:{function:/^url/i,punctuation:/^\(|\)$/,string:{pattern:RegExp("^"+s.source+"$"),alias:"url"}}},selector:{pattern:RegExp(`(^|[{}\\s])[^{}\\s](?:[^{};"'\\s]|\\s+(?![\\s{])|`+s.source+")*(?=\\s*\\{)"),lookbehind:!0},string:{pattern:s,greedy:!0},property:{pattern:/(^|[^-\w\xA0-\uFFFF])(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*(?=\s*:)/i,lookbehind:!0},important:/!important\b/i,function:{pattern:/(^|[^-a-z0-9])[-a-z0-9]+(?=\()/i,lookbehind:!0},punctuation:/[(){};:,]/},a.languages.css.atrule.inside.rest=a.languages.css;var r=a.languages.markup;r&&(r.tag.addInlined("style","css"),r.tag.addAttribute("style","css"))}(n),n.languages.clike={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,lookbehind:!0,greedy:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},"class-name":{pattern:/(\b(?:class|extends|implements|instanceof|interface|new|trait)\s+|\bcatch\s+\()[\w.\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\]/}},keyword:/\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\b/,boolean:/\b(?:false|true)\b/,function:/\b\w+(?=\()/,number:/\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,operator:/[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,punctuation:/[{}[\];(),.:]/},n.languages.javascript=n.languages.extend("clike",{"class-name":[n.languages.clike["class-name"],{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:constructor|prototype))/,lookbehind:!0}],keyword:[{pattern:/((?:^|\})\s*)catch\b/,lookbehind:!0},{pattern:/(^|[^.]|\.\.\.\s*)\b(?:as|assert(?=\s*\{)|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\s*(?:\{|$))|for|from(?=\s*(?:['"]|$))|function|(?:get|set)(?=\s*(?:[#\[$\w\xA0-\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,lookbehind:!0}],function:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,number:{pattern:RegExp(/(^|[^\w$])/.source+"(?:"+(/NaN|Infinity/.source+"|"+/0[bB][01]+(?:_[01]+)*n?/.source+"|"+/0[oO][0-7]+(?:_[0-7]+)*n?/.source+"|"+/0[xX][\dA-Fa-f]+(?:_[\dA-Fa-f]+)*n?/.source+"|"+/\d+(?:_\d+)*n/.source+"|"+/(?:\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[Ee][+-]?\d+(?:_\d+)*)?/.source)+")"+/(?![\w$])/.source),lookbehind:!0},operator:/--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/}),n.languages.javascript["class-name"][0].pattern=/(\b(?:class|extends|implements|instanceof|interface|new)\s+)[\w.\\]+/,n.languages.insertBefore("javascript","keyword",{regex:{pattern:RegExp(/((?:^|[^$\w\xA0-\uFFFF."'\])\s]|\b(?:return|yield))\s*)/.source+/\//.source+"(?:"+/(?:\[(?:[^\]\\\r\n]|\\.)*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}/.source+"|"+/(?:\[(?:[^[\]\\\r\n]|\\.|\[(?:[^[\]\\\r\n]|\\.|\[(?:[^[\]\\\r\n]|\\.)*\])*\])*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source+")"+/(?=(?:\s|\/\*(?:[^*]|\*(?!\/))*\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))/.source),lookbehind:!0,greedy:!0,inside:{"regex-source":{pattern:/^(\/)[\s\S]+(?=\/[a-z]*$)/,lookbehind:!0,alias:"language-regex",inside:n.languages.regex},"regex-delimiter":/^\/|\/$/,"regex-flags":/^[a-z]+$/}},"function-variable":{pattern:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,alias:"function"},parameter:[{pattern:/(function(?:\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)?\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\))/,lookbehind:!0,inside:n.languages.javascript},{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=>)/i,lookbehind:!0,inside:n.languages.javascript},{pattern:/(\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*=>)/,lookbehind:!0,inside:n.languages.javascript},{pattern:/((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*\{)/,lookbehind:!0,inside:n.languages.javascript}],constant:/\b[A-Z](?:[A-Z_]|\dx?)*\b/}),n.languages.insertBefore("javascript","string",{hashbang:{pattern:/^#!.*/,greedy:!0,alias:"comment"},"template-string":{pattern:/`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`/,greedy:!0,inside:{"template-punctuation":{pattern:/^`|`$/,alias:"string"},interpolation:{pattern:/((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,lookbehind:!0,inside:{"interpolation-punctuation":{pattern:/^\$\{|\}$/,alias:"punctuation"},rest:n.languages.javascript}},string:/[\s\S]+/}},"string-property":{pattern:/((?:^|[,{])[ \t]*)(["'])(?:\\(?:\r\n|[\s\S])|(?!\2)[^\\\r\n])*\2(?=\s*:)/m,lookbehind:!0,greedy:!0,alias:"property"}}),n.languages.insertBefore("javascript","operator",{"literal-property":{pattern:/((?:^|[,{])[ \t]*)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)/m,lookbehind:!0,alias:"property"}}),n.languages.markup&&(n.languages.markup.tag.addInlined("script","javascript"),n.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,"javascript")),n.languages.js=n.languages.javascript,function(){if(typeof n>"u"||typeof document>"u")return;Element.prototype.matches||(Element.prototype.matches=Element.prototype.msMatchesSelector||Element.prototype.webkitMatchesSelector);var a="Loading…",s=function(_,x){return"✖ Error "+_+" while fetching file: "+x},r="✖ Error: File does not exist or is empty",i={js:"javascript",py:"python",rb:"ruby",ps1:"powershell",psm1:"powershell",sh:"bash",bat:"batch",h:"c",tex:"latex"},o="data-src-status",l="loading",m="loaded",g="failed",p="pre[data-src]:not(["+o+'="'+m+'"]):not(['+o+'="'+l+'"])';function u(_,x,f){var b=new XMLHttpRequest;b.open("GET",_,!0),b.onreadystatechange=function(){b.readyState==4&&(b.status<400&&b.responseText?x(b.responseText):b.status>=400?f(s(b.status,b.statusText)):f(r))},b.send(null)}function c(_){var x=/^\s*(\d+)\s*(?:(,)\s*(?:(\d+)\s*)?)?$/.exec(_||"");if(x){var f=Number(x[1]),b=x[2],h=x[3];return b?h?[f,Number(h)]:[f,void 0]:[f,f]}}n.hooks.add("before-highlightall",function(_){_.selector+=", "+p}),n.hooks.add("before-sanity-check",function(_){var x=_.element;if(x.matches(p)){_.code="",x.setAttribute(o,l);var f=x.appendChild(document.createElement("CODE"));f.textContent=a;var b=x.getAttribute("data-src"),h=_.language;if(h==="none"){var v=(/\.(\w+)$/.exec(b)||[,"none"])[1];h=i[v]||v}n.util.setLanguage(f,h),n.util.setLanguage(x,h);var d=n.plugins.autoloader;d&&d.loadLanguages(h),u(b,function(L){x.setAttribute(o,m);var C=c(x.getAttribute("data-range"));if(C){var A=L.split(/\r\n?|\n/g),I=C[0],R=C[1]==null?A.length:C[1];I<0&&(I+=A.length),I=Math.max(0,Math.min(I-1,A.length)),R<0&&(R+=A.length),R=Math.max(0,Math.min(R,A.length)),L=A.slice(I,R).join(`
`),x.hasAttribute("data-start")||x.setAttribute("data-start",String(I+1))}f.textContent=L,n.highlightElement(f)},function(L){x.setAttribute(o,g),f.textContent=L})}}),n.plugins.fileHighlight={highlight:function(x){for(var f=(x||document).querySelectorAll(p),b=0,h;h=f[b++];)n.highlightElement(h)}};var k=!1;n.fileHighlight=function(){k||(console.warn("Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead."),k=!0),n.plugins.fileHighlight.highlight.apply(this,arguments)}}()})(Kq);var wn={},Xq={get exports(){return wn},set exports(t){wn=t}};(function(t){var e={core:{meta:{path:"components/prism-core.js",option:"mandatory"},core:"Core"},themes:{meta:{path:"themes/{id}.css",link:"index.html?theme={id}",exclusive:!0},prism:{title:"Default",option:"default"},"prism-dark":"Dark","prism-funky":"Funky","prism-okaidia":{title:"Okaidia",owner:"ocodia"},"prism-twilight":{title:"Twilight",owner:"remybach"},"prism-coy":{title:"Coy",owner:"tshedor"},"prism-solarizedlight":{title:"Solarized Light",owner:"hectormatos2011 "},"prism-tomorrow":{title:"Tomorrow Night",owner:"Rosey"}},languages:{meta:{path:"components/prism-{id}",noCSS:!0,examplesPath:"examples/prism-{id}",addCheckAll:!0},markup:{title:"Markup",alias:["html","xml","svg","mathml","ssml","atom","rss"],aliasTitles:{html:"HTML",xml:"XML",svg:"SVG",mathml:"MathML",ssml:"SSML",atom:"Atom",rss:"RSS"},option:"default"},css:{title:"CSS",option:"default",modify:"markup"},clike:{title:"C-like",option:"default"},javascript:{title:"JavaScript",require:"clike",modify:"markup",optional:"regex",alias:"js",option:"default"},abap:{title:"ABAP",owner:"dellagustin"},abnf:{title:"ABNF",owner:"RunDevelopment"},actionscript:{title:"ActionScript",require:"javascript",modify:"markup",owner:"Golmote"},ada:{title:"Ada",owner:"Lucretia"},agda:{title:"Agda",owner:"xy-ren"},al:{title:"AL",owner:"RunDevelopment"},antlr4:{title:"ANTLR4",alias:"g4",owner:"RunDevelopment"},apacheconf:{title:"Apache Configuration",owner:"GuiTeK"},apex:{title:"Apex",require:["clike","sql"],owner:"RunDevelopment"},apl:{title:"APL",owner:"ngn"},applescript:{title:"AppleScript",owner:"Golmote"},aql:{title:"AQL",owner:"RunDevelopment"},arduino:{title:"Arduino",require:"cpp",alias:"ino",owner:"dkern"},arff:{title:"ARFF",owner:"Golmote"},armasm:{title:"ARM Assembly",alias:"arm-asm",owner:"RunDevelopment"},arturo:{title:"Arturo",alias:"art",optional:["bash","css","javascript","markup","markdown","sql"],owner:"drkameleon"},asciidoc:{alias:"adoc",title:"AsciiDoc",owner:"Golmote"},aspnet:{title:"ASP.NET (C#)",require:["markup","csharp"],owner:"nauzilus"},asm6502:{title:"6502 Assembly",owner:"kzurawel"},asmatmel:{title:"Atmel AVR Assembly",owner:"cerkit"},autohotkey:{title:"AutoHotkey",owner:"aviaryan"},autoit:{title:"AutoIt",owner:"Golmote"},avisynth:{title:"AviSynth",alias:"avs",owner:"Zinfidel"},"avro-idl":{title:"Avro IDL",alias:"avdl",owner:"RunDevelopment"},awk:{title:"AWK",alias:"gawk",aliasTitles:{gawk:"GAWK"},owner:"RunDevelopment"},bash:{title:"Bash",alias:["sh","shell"],aliasTitles:{sh:"Shell",shell:"Shell"},owner:"zeitgeist87"},basic:{title:"BASIC",owner:"Golmote"},batch:{title:"Batch",owner:"Golmote"},bbcode:{title:"BBcode",alias:"shortcode",aliasTitles:{shortcode:"Shortcode"},owner:"RunDevelopment"},bbj:{title:"BBj",owner:"hyyan"},bicep:{title:"Bicep",owner:"johnnyreilly"},birb:{title:"Birb",require:"clike",owner:"Calamity210"},bison:{title:"Bison",require:"c",owner:"Golmote"},bnf:{title:"BNF",alias:"rbnf",aliasTitles:{rbnf:"RBNF"},owner:"RunDevelopment"},bqn:{title:"BQN",owner:"yewscion"},brainfuck:{title:"Brainfuck",owner:"Golmote"},brightscript:{title:"BrightScript",owner:"RunDevelopment"},bro:{title:"Bro",owner:"wayward710"},bsl:{title:"BSL (1C:Enterprise)",alias:"oscript",aliasTitles:{oscript:"OneScript"},owner:"Diversus23"},c:{title:"C",require:"clike",owner:"zeitgeist87"},csharp:{title:"C#",require:"clike",alias:["cs","dotnet"],owner:"mvalipour"},cpp:{title:"C++",require:"c",owner:"zeitgeist87"},cfscript:{title:"CFScript",require:"clike",alias:"cfc",owner:"mjclemente"},chaiscript:{title:"ChaiScript",require:["clike","cpp"],owner:"RunDevelopment"},cil:{title:"CIL",owner:"sbrl"},cilkc:{title:"Cilk/C",require:"c",alias:"cilk-c",owner:"OpenCilk"},cilkcpp:{title:"Cilk/C++",require:"cpp",alias:["cilk-cpp","cilk"],owner:"OpenCilk"},clojure:{title:"Clojure",owner:"troglotit"},cmake:{title:"CMake",owner:"mjrogozinski"},cobol:{title:"COBOL",owner:"RunDevelopment"},coffeescript:{title:"CoffeeScript",require:"javascript",alias:"coffee",owner:"R-osey"},concurnas:{title:"Concurnas",alias:"conc",owner:"jasontatton"},csp:{title:"Content-Security-Policy",owner:"ScottHelme"},cooklang:{title:"Cooklang",owner:"ahue"},coq:{title:"Coq",owner:"RunDevelopment"},crystal:{title:"Crystal",require:"ruby",owner:"MakeNowJust"},"css-extras":{title:"CSS Extras",require:"css",modify:"css",owner:"milesj"},csv:{title:"CSV",owner:"RunDevelopment"},cue:{title:"CUE",owner:"RunDevelopment"},cypher:{title:"Cypher",owner:"RunDevelopment"},d:{title:"D",require:"clike",owner:"Golmote"},dart:{title:"Dart",require:"clike",owner:"Golmote"},dataweave:{title:"DataWeave",owner:"machaval"},dax:{title:"DAX",owner:"peterbud"},dhall:{title:"Dhall",owner:"RunDevelopment"},diff:{title:"Diff",owner:"uranusjr"},django:{title:"Django/Jinja2",require:"markup-templating",alias:"jinja2",owner:"romanvm"},"dns-zone-file":{title:"DNS zone file",owner:"RunDevelopment",alias:"dns-zone"},docker:{title:"Docker",alias:"dockerfile",owner:"JustinBeckwith"},dot:{title:"DOT (Graphviz)",alias:"gv",optional:"markup",owner:"RunDevelopment"},ebnf:{title:"EBNF",owner:"RunDevelopment"},editorconfig:{title:"EditorConfig",owner:"osipxd"},eiffel:{title:"Eiffel",owner:"Conaclos"},ejs:{title:"EJS",require:["javascript","markup-templating"],owner:"RunDevelopment",alias:"eta",aliasTitles:{eta:"Eta"}},elixir:{title:"Elixir",owner:"Golmote"},elm:{title:"Elm",owner:"zwilias"},etlua:{title:"Embedded Lua templating",require:["lua","markup-templating"],owner:"RunDevelopment"},erb:{title:"ERB",require:["ruby","markup-templating"],owner:"Golmote"},erlang:{title:"Erlang",owner:"Golmote"},"excel-formula":{title:"Excel Formula",alias:["xlsx","xls"],owner:"RunDevelopment"},fsharp:{title:"F#",require:"clike",owner:"simonreynolds7"},factor:{title:"Factor",owner:"catb0t"},false:{title:"False",owner:"edukisto"},"firestore-security-rules":{title:"Firestore security rules",require:"clike",owner:"RunDevelopment"},flow:{title:"Flow",require:"javascript",owner:"Golmote"},fortran:{title:"Fortran",owner:"Golmote"},ftl:{title:"FreeMarker Template Language",require:"markup-templating",owner:"RunDevelopment"},gml:{title:"GameMaker Language",alias:"gamemakerlanguage",require:"clike",owner:"LiarOnce"},gap:{title:"GAP (CAS)",owner:"RunDevelopment"},gcode:{title:"G-code",owner:"RunDevelopment"},gdscript:{title:"GDScript",owner:"RunDevelopment"},gedcom:{title:"GEDCOM",owner:"Golmote"},gettext:{title:"gettext",alias:"po",owner:"RunDevelopment"},gherkin:{title:"Gherkin",owner:"hason"},git:{title:"Git",owner:"lgiraudel"},glsl:{title:"GLSL",require:"c",owner:"Golmote"},gn:{title:"GN",alias:"gni",owner:"RunDevelopment"},"linker-script":{title:"GNU Linker Script",alias:"ld",owner:"RunDevelopment"},go:{title:"Go",require:"clike",owner:"arnehormann"},"go-module":{title:"Go module",alias:"go-mod",owner:"RunDevelopment"},gradle:{title:"Gradle",require:"clike",owner:"zeabdelkhalek-badido18"},graphql:{title:"GraphQL",optional:"markdown",owner:"Golmote"},groovy:{title:"Groovy",require:"clike",owner:"robfletcher"},haml:{title:"Haml",require:"ruby",optional:["css","css-extras","coffeescript","erb","javascript","less","markdown","scss","textile"],owner:"Golmote"},handlebars:{title:"Handlebars",require:"markup-templating",alias:["hbs","mustache"],aliasTitles:{mustache:"Mustache"},owner:"Golmote"},haskell:{title:"Haskell",alias:"hs",owner:"bholst"},haxe:{title:"Haxe",require:"clike",optional:"regex",owner:"Golmote"},hcl:{title:"HCL",owner:"outsideris"},hlsl:{title:"HLSL",require:"c",owner:"RunDevelopment"},hoon:{title:"Hoon",owner:"matildepark"},http:{title:"HTTP",optional:["csp","css","hpkp","hsts","javascript","json","markup","uri"],owner:"danielgtaylor"},hpkp:{title:"HTTP Public-Key-Pins",owner:"ScottHelme"},hsts:{title:"HTTP Strict-Transport-Security",owner:"ScottHelme"},ichigojam:{title:"IchigoJam",owner:"BlueCocoa"},icon:{title:"Icon",owner:"Golmote"},"icu-message-format":{title:"ICU Message Format",owner:"RunDevelopment"},idris:{title:"Idris",alias:"idr",owner:"KeenS",require:"haskell"},ignore:{title:".ignore",owner:"osipxd",alias:["gitignore","hgignore","npmignore"],aliasTitles:{gitignore:".gitignore",hgignore:".hgignore",npmignore:".npmignore"}},inform7:{title:"Inform 7",owner:"Golmote"},ini:{title:"Ini",owner:"aviaryan"},io:{title:"Io",owner:"AlesTsurko"},j:{title:"J",owner:"Golmote"},java:{title:"Java",require:"clike",owner:"sherblot"},javadoc:{title:"JavaDoc",require:["markup","java","javadoclike"],modify:"java",optional:"scala",owner:"RunDevelopment"},javadoclike:{title:"JavaDoc-like",modify:["java","javascript","php"],owner:"RunDevelopment"},javastacktrace:{title:"Java stack trace",owner:"RunDevelopment"},jexl:{title:"Jexl",owner:"czosel"},jolie:{title:"Jolie",require:"clike",owner:"thesave"},jq:{title:"JQ",owner:"RunDevelopment"},jsdoc:{title:"JSDoc",require:["javascript","javadoclike","typescript"],modify:"javascript",optional:["actionscript","coffeescript"],owner:"RunDevelopment"},"js-extras":{title:"JS Extras",require:"javascript",modify:"javascript",optional:["actionscript","coffeescript","flow","n4js","typescript"],owner:"RunDevelopment"},json:{title:"JSON",alias:"webmanifest",aliasTitles:{webmanifest:"Web App Manifest"},owner:"CupOfTea696"},json5:{title:"JSON5",require:"json",owner:"RunDevelopment"},jsonp:{title:"JSONP",require:"json",owner:"RunDevelopment"},jsstacktrace:{title:"JS stack trace",owner:"sbrl"},"js-templates":{title:"JS Templates",require:"javascript",modify:"javascript",optional:["css","css-extras","graphql","markdown","markup","sql"],owner:"RunDevelopment"},julia:{title:"Julia",owner:"cdagnino"},keepalived:{title:"Keepalived Configure",owner:"dev-itsheng"},keyman:{title:"Keyman",owner:"mcdurdin"},kotlin:{title:"Kotlin",alias:["kt","kts"],aliasTitles:{kts:"Kotlin Script"},require:"clike",owner:"Golmote"},kumir:{title:"KuMir (КуМир)",alias:"kum",owner:"edukisto"},kusto:{title:"Kusto",owner:"RunDevelopment"},latex:{title:"LaTeX",alias:["tex","context"],aliasTitles:{tex:"TeX",context:"ConTeXt"},owner:"japborst"},latte:{title:"Latte",require:["clike","markup-templating","php"],owner:"nette"},less:{title:"Less",require:"css",optional:"css-extras",owner:"Golmote"},lilypond:{title:"LilyPond",require:"scheme",alias:"ly",owner:"RunDevelopment"},liquid:{title:"Liquid",require:"markup-templating",owner:"cinhtau"},lisp:{title:"Lisp",alias:["emacs","elisp","emacs-lisp"],owner:"JuanCaicedo"},livescript:{title:"LiveScript",owner:"Golmote"},llvm:{title:"LLVM IR",owner:"porglezomp"},log:{title:"Log file",optional:"javastacktrace",owner:"RunDevelopment"},lolcode:{title:"LOLCODE",owner:"Golmote"},lua:{title:"Lua",owner:"Golmote"},magma:{title:"Magma (CAS)",owner:"RunDevelopment"},makefile:{title:"Makefile",owner:"Golmote"},markdown:{title:"Markdown",require:"markup",optional:"yaml",alias:"md",owner:"Golmote"},"markup-templating":{title:"Markup templating",require:"markup",owner:"Golmote"},mata:{title:"Mata",owner:"RunDevelopment"},matlab:{title:"MATLAB",owner:"Golmote"},maxscript:{title:"MAXScript",owner:"RunDevelopment"},mel:{title:"MEL",owner:"Golmote"},mermaid:{title:"Mermaid",owner:"RunDevelopment"},metafont:{title:"METAFONT",owner:"LaeriExNihilo"},mizar:{title:"Mizar",owner:"Golmote"},mongodb:{title:"MongoDB",owner:"airs0urce",require:"javascript"},monkey:{title:"Monkey",owner:"Golmote"},moonscript:{title:"MoonScript",alias:"moon",owner:"RunDevelopment"},n1ql:{title:"N1QL",owner:"TMWilds"},n4js:{title:"N4JS",require:"javascript",optional:"jsdoc",alias:"n4jsd",owner:"bsmith-n4"},"nand2tetris-hdl":{title:"Nand To Tetris HDL",owner:"stephanmax"},naniscript:{title:"Naninovel Script",owner:"Elringus",alias:"nani"},nasm:{title:"NASM",owner:"rbmj"},neon:{title:"NEON",owner:"nette"},nevod:{title:"Nevod",owner:"nezaboodka"},nginx:{title:"nginx",owner:"volado"},nim:{title:"Nim",owner:"Golmote"},nix:{title:"Nix",owner:"Golmote"},nsis:{title:"NSIS",owner:"idleberg"},objectivec:{title:"Objective-C",require:"c",alias:"objc",owner:"uranusjr"},ocaml:{title:"OCaml",owner:"Golmote"},odin:{title:"Odin",owner:"edukisto"},opencl:{title:"OpenCL",require:"c",modify:["c","cpp"],owner:"Milania1"},openqasm:{title:"OpenQasm",alias:"qasm",owner:"RunDevelopment"},oz:{title:"Oz",owner:"Golmote"},parigp:{title:"PARI/GP",owner:"Golmote"},parser:{title:"Parser",require:"markup",owner:"Golmote"},pascal:{title:"Pascal",alias:"objectpascal",aliasTitles:{objectpascal:"Object Pascal"},owner:"Golmote"},pascaligo:{title:"Pascaligo",owner:"DefinitelyNotAGoat"},psl:{title:"PATROL Scripting Language",owner:"bertysentry"},pcaxis:{title:"PC-Axis",alias:"px",owner:"RunDevelopment"},peoplecode:{title:"PeopleCode",alias:"pcode",owner:"RunDevelopment"},perl:{title:"Perl",owner:"Golmote"},php:{title:"PHP",require:"markup-templating",owner:"milesj"},phpdoc:{title:"PHPDoc",require:["php","javadoclike"],modify:"php",owner:"RunDevelopment"},"php-extras":{title:"PHP Extras",require:"php",modify:"php",owner:"milesj"},"plant-uml":{title:"PlantUML",alias:"plantuml",owner:"RunDevelopment"},plsql:{title:"PL/SQL",require:"sql",owner:"Golmote"},powerquery:{title:"PowerQuery",alias:["pq","mscript"],owner:"peterbud"},powershell:{title:"PowerShell",owner:"nauzilus"},processing:{title:"Processing",require:"clike",owner:"Golmote"},prolog:{title:"Prolog",owner:"Golmote"},promql:{title:"PromQL",owner:"arendjr"},properties:{title:".properties",owner:"Golmote"},protobuf:{title:"Protocol Buffers",require:"clike",owner:"just-boris"},pug:{title:"Pug",require:["markup","javascript"],optional:["coffeescript","ejs","handlebars","less","livescript","markdown","scss","stylus","twig"],owner:"Golmote"},puppet:{title:"Puppet",owner:"Golmote"},pure:{title:"Pure",optional:["c","cpp","fortran"],owner:"Golmote"},purebasic:{title:"PureBasic",require:"clike",alias:"pbfasm",owner:"HeX0R101"},purescript:{title:"PureScript",require:"haskell",alias:"purs",owner:"sriharshachilakapati"},python:{title:"Python",alias:"py",owner:"multipetros"},qsharp:{title:"Q#",require:"clike",alias:"qs",owner:"fedonman"},q:{title:"Q (kdb+ database)",owner:"Golmote"},qml:{title:"QML",require:"javascript",owner:"RunDevelopment"},qore:{title:"Qore",require:"clike",owner:"temnroegg"},r:{title:"R",owner:"Golmote"},racket:{title:"Racket",require:"scheme",alias:"rkt",owner:"RunDevelopment"},cshtml:{title:"Razor C#",alias:"razor",require:["markup","csharp"],optional:["css","css-extras","javascript","js-extras"],owner:"RunDevelopment"},jsx:{title:"React JSX",require:["markup","javascript"],optional:["jsdoc","js-extras","js-templates"],owner:"vkbansal"},tsx:{title:"React TSX",require:["jsx","typescript"]},reason:{title:"Reason",require:"clike",owner:"Golmote"},regex:{title:"Regex",owner:"RunDevelopment"},rego:{title:"Rego",owner:"JordanSh"},renpy:{title:"Ren'py",alias:"rpy",owner:"HyuchiaDiego"},rescript:{title:"ReScript",alias:"res",owner:"vmarcosp"},rest:{title:"reST (reStructuredText)",owner:"Golmote"},rip:{title:"Rip",owner:"ravinggenius"},roboconf:{title:"Roboconf",owner:"Golmote"},robotframework:{title:"Robot Framework",alias:"robot",owner:"RunDevelopment"},ruby:{title:"Ruby",require:"clike",alias:"rb",owner:"samflores"},rust:{title:"Rust",owner:"Golmote"},sas:{title:"SAS",optional:["groovy","lua","sql"],owner:"Golmote"},sass:{title:"Sass (Sass)",require:"css",optional:"css-extras",owner:"Golmote"},scss:{title:"Sass (SCSS)",require:"css",optional:"css-extras",owner:"MoOx"},scala:{title:"Scala",require:"java",owner:"jozic"},scheme:{title:"Scheme",owner:"bacchus123"},"shell-session":{title:"Shell session",require:"bash",alias:["sh-session","shellsession"],owner:"RunDevelopment"},smali:{title:"Smali",owner:"RunDevelopment"},smalltalk:{title:"Smalltalk",owner:"Golmote"},smarty:{title:"Smarty",require:"markup-templating",optional:"php",owner:"Golmote"},sml:{title:"SML",alias:"smlnj",aliasTitles:{smlnj:"SML/NJ"},owner:"RunDevelopment"},solidity:{title:"Solidity (Ethereum)",alias:"sol",require:"clike",owner:"glachaud"},"solution-file":{title:"Solution file",alias:"sln",owner:"RunDevelopment"},soy:{title:"Soy (Closure Template)",require:"markup-templating",owner:"Golmote"},sparql:{title:"SPARQL",require:"turtle",owner:"Triply-Dev",alias:"rq"},"splunk-spl":{title:"Splunk SPL",owner:"RunDevelopment"},sqf:{title:"SQF: Status Quo Function (Arma 3)",require:"clike",owner:"RunDevelopment"},sql:{title:"SQL",owner:"multipetros"},squirrel:{title:"Squirrel",require:"clike",owner:"RunDevelopment"},stan:{title:"Stan",owner:"RunDevelopment"},stata:{title:"Stata Ado",require:["mata","java","python"],owner:"RunDevelopment"},iecst:{title:"Structured Text (IEC 61131-3)",owner:"serhioromano"},stylus:{title:"Stylus",owner:"vkbansal"},supercollider:{title:"SuperCollider",alias:"sclang",owner:"RunDevelopment"},swift:{title:"Swift",owner:"chrischares"},systemd:{title:"Systemd configuration file",owner:"RunDevelopment"},"t4-templating":{title:"T4 templating",owner:"RunDevelopment"},"t4-cs":{title:"T4 Text Templates (C#)",require:["t4-templating","csharp"],alias:"t4",owner:"RunDevelopment"},"t4-vb":{title:"T4 Text Templates (VB)",require:["t4-templating","vbnet"],owner:"RunDevelopment"},tap:{title:"TAP",owner:"isaacs",require:"yaml"},tcl:{title:"Tcl",owner:"PeterChaplin"},tt2:{title:"Template Toolkit 2",require:["clike","markup-templating"],owner:"gflohr"},textile:{title:"Textile",require:"markup",optional:"css",owner:"Golmote"},toml:{title:"TOML",owner:"RunDevelopment"},tremor:{title:"Tremor",alias:["trickle","troy"],owner:"darach",aliasTitles:{trickle:"trickle",troy:"troy"}},turtle:{title:"Turtle",alias:"trig",aliasTitles:{trig:"TriG"},owner:"jakubklimek"},twig:{title:"Twig",require:"markup-templating",owner:"brandonkelly"},typescript:{title:"TypeScript",require:"javascript",optional:"js-templates",alias:"ts",owner:"vkbansal"},typoscript:{title:"TypoScript",alias:"tsconfig",aliasTitles:{tsconfig:"TSConfig"},owner:"dkern"},unrealscript:{title:"UnrealScript",alias:["uscript","uc"],owner:"RunDevelopment"},uorazor:{title:"UO Razor Script",owner:"jaseowns"},uri:{title:"URI",alias:"url",aliasTitles:{url:"URL"},owner:"RunDevelopment"},v:{title:"V",require:"clike",owner:"taggon"},vala:{title:"Vala",require:"clike",optional:"regex",owner:"TemplarVolk"},vbnet:{title:"VB.Net",require:"basic",owner:"Bigsby"},velocity:{title:"Velocity",require:"markup",owner:"Golmote"},verilog:{title:"Verilog",owner:"a-rey"},vhdl:{title:"VHDL",owner:"a-rey"},vim:{title:"vim",owner:"westonganger"},"visual-basic":{title:"Visual Basic",alias:["vb","vba"],aliasTitles:{vba:"VBA"},owner:"Golmote"},warpscript:{title:"WarpScript",owner:"RunDevelopment"},wasm:{title:"WebAssembly",owner:"Golmote"},"web-idl":{title:"Web IDL",alias:"webidl",owner:"RunDevelopment"},wgsl:{title:"WGSL",owner:"Dr4gonthree"},wiki:{title:"Wiki markup",require:"markup",owner:"Golmote"},wolfram:{title:"Wolfram language",alias:["mathematica","nb","wl"],aliasTitles:{mathematica:"Mathematica",nb:"Mathematica Notebook"},owner:"msollami"},wren:{title:"Wren",owner:"clsource"},xeora:{title:"Xeora",require:"markup",alias:"xeoracube",aliasTitles:{xeoracube:"XeoraCube"},owner:"freakmaxi"},"xml-doc":{title:"XML doc (.net)",require:"markup",modify:["csharp","fsharp","vbnet"],owner:"RunDevelopment"},xojo:{title:"Xojo (REALbasic)",owner:"Golmote"},xquery:{title:"XQuery",require:"markup",owner:"Golmote"},yaml:{title:"YAML",alias:"yml",owner:"hason"},yang:{title:"YANG",owner:"RunDevelopment"},zig:{title:"Zig",owner:"RunDevelopment"}},plugins:{meta:{path:"plugins/{id}/prism-{id}",link:"plugins/{id}/"},"line-highlight":{title:"Line Highlight",description:"Highlights specific lines and/or line ranges."},"line-numbers":{title:"Line Numbers",description:"Line number at the beginning of code lines.",owner:"kuba-kubula"},"show-invisibles":{title:"Show Invisibles",description:"Show hidden characters such as tabs and line breaks.",optional:["autolinker","data-uri-highlight"]},autolinker:{title:"Autolinker",description:"Converts URLs and emails in code to clickable links. Parses Markdown links in comments."},wpd:{title:"WebPlatform Docs",description:'Makes tokens link to <a href="https://webplatform.github.io/docs/">WebPlatform.org documentation</a>. The links open in a new tab.'},"custom-class":{title:"Custom Class",description:"This plugin allows you to prefix Prism's default classes (<code>.comment</code> can become <code>.namespace--comment</code>) or replace them with your defined ones (like <code>.editor__comment</code>). You can even add new classes.",owner:"dvkndn",noCSS:!0},"file-highlight":{title:"File Highlight",description:"Fetch external files and highlight them with Prism. Used on the Prism website itself.",noCSS:!0},"show-language":{title:"Show Language",description:"Display the highlighted language in code blocks (inline code does not show the label).",owner:"nauzilus",noCSS:!0,require:"toolbar"},"jsonp-highlight":{title:"JSONP Highlight",description:"Fetch content with JSONP and highlight some interesting content (e.g. GitHub/Gists or Bitbucket API).",noCSS:!0,owner:"nauzilus"},"highlight-keywords":{title:"Highlight Keywords",description:"Adds special CSS classes for each keyword for fine-grained highlighting.",owner:"vkbansal",noCSS:!0},"remove-initial-line-feed":{title:"Remove initial line feed",description:"Removes the initial line feed in code blocks.",owner:"Golmote",noCSS:!0},"inline-color":{title:"Inline color",description:"Adds a small inline preview for colors in style sheets.",require:"css-extras",owner:"RunDevelopment"},previewers:{title:"Previewers",description:"Previewers for angles, colors, gradients, easing and time.",require:"css-extras",owner:"Golmote"},autoloader:{title:"Autoloader",description:"Automatically loads the needed languages to highlight the code blocks.",owner:"Golmote",noCSS:!0},"keep-markup":{title:"Keep Markup",description:"Prevents custom markup from being dropped out during highlighting.",owner:"Golmote",optional:"normalize-whitespace",noCSS:!0},"command-line":{title:"Command Line",description:"Display a command line with a prompt and, optionally, the output/response from the commands.",owner:"chriswells0"},"unescaped-markup":{title:"Unescaped Markup",description:"Write markup without having to escape anything."},"normalize-whitespace":{title:"Normalize Whitespace",description:"Supports multiple operations to normalize whitespace in code blocks.",owner:"zeitgeist87",optional:"unescaped-markup",noCSS:!0},"data-uri-highlight":{title:"Data-URI Highlight",description:"Highlights data-URI contents.",owner:"Golmote",noCSS:!0},toolbar:{title:"Toolbar",description:"Attach a toolbar for plugins to easily register buttons on the top of a code block.",owner:"mAAdhaTTah"},"copy-to-clipboard":{title:"Copy to Clipboard Button",description:"Add a button that copies the code block to the clipboard when clicked.",owner:"mAAdhaTTah",require:"toolbar",noCSS:!0},"download-button":{title:"Download Button",description:"A button in the toolbar of a code block adding a convenient way to download a code file.",owner:"Golmote",require:"toolbar",noCSS:!0},"match-braces":{title:"Match braces",description:"Highlights matching braces.",owner:"RunDevelopment"},"diff-highlight":{title:"Diff Highlight",description:"Highlights the code inside diff blocks.",owner:"RunDevelopment",require:"diff"},"filter-highlight-all":{title:"Filter highlightAll",description:"Filters the elements the <code>highlightAll</code> and <code>highlightAllUnder</code> methods actually highlight.",owner:"RunDevelopment",noCSS:!0},treeview:{title:"Treeview",description:"A language with special styles to highlight file system tree structures.",owner:"Golmote"}}};t.exports&&(t.exports=e)})(Xq);var En={},Zq={get exports(){return En},set exports(t){En=t}};(function(t){var e=function(){var n=function(){};function a(p,u){Array.isArray(p)?p.forEach(u):p!=null&&u(p,0)}function s(p){for(var u={},c=0,k=p.length;c<k;c++)u[p[c]]=!0;return u}function r(p){var u={};for(var c in p){var k=p[c];for(var _ in k)if(_!="meta"){var x=k[_];u[_]=typeof x=="string"?{title:x}:x}}return u}function i(p){var u={},c=[];function k(_,x){if(!(_ in u)){x.push(_);var f=x.indexOf(_);if(f<x.length-1)throw new Error("Circular dependency: "+x.slice(f).join(" -> "));var b={},h=p[_];if(h){let v=function(d){if(!(d in p))throw new Error(_+" depends on an unknown component "+d);if(!(d in b)){k(d,x),b[d]=!0;for(var L in u[d])b[L]=!0}};a(h.require,v),a(h.optional,v),a(h.modify,v)}u[_]=b,x.pop()}}return function(_){var x=u[_];return x||(k(_,c),x=u[_]),x}}function o(p){var u;return function(c){if(c in p)return c;if(!u){u={};for(var k in p){var _=p[k];a(_&&_.alias,function(x){if(x in u)throw new Error(x+" cannot be alias for both "+k+" and "+u[x]);if(x in p)throw new Error(x+" cannot be alias of "+k+" because it is a component.");u[x]=k})}}return u[c]||c}}function l(p,u,c,k){var _=k?k.series:void 0,x=k?k.parallel:n,f={},b={};function h(C){if(C in f)return f[C];b[C]=!0;var A=[];for(var I in p(C))I in u&&A.push(I);var R;if(A.length===0)R=c(C);else{var y=x(A.map(function(E){var S=h(E);return delete b[E],S}));_?R=_(y,function(){return c(C)}):c(C)}return f[C]=R}for(var v in u)h(v);var d=[];for(var L in b)d.push(f[L]);return x(d)}function m(p){for(var u in p)return!0;return!1}function g(p,u,c){var k=r(p),_=o(k);u=u.map(_),c=(c||[]).map(_);var x=s(u),f=s(c);u.forEach(b);function b(E){var S=k[E];a(S&&S.require,function(T){T in f||(x[T]=!0,b(T))})}for(var h=i(k),v=x,d;m(v);){d={};for(var L in v){var C=k[L];a(C&&C.modify,function(E){E in f&&(d[E]=!0)})}for(var A in f)if(!(A in x)){for(var I in h(A))if(I in x){d[A]=!0;break}}v=d;for(var R in v)x[R]=!0}var y={getIds:function(){var E=[];return y.load(function(S){E.push(S)}),E},load:function(E,S){return l(h,x,E,S)}};return y}return g}();t.exports=e})(Zq);const an=wn,Yq=En,Ua=new Set;function On(t){t===void 0?t=Object.keys(an.languages).filter(n=>n!="meta"):Array.isArray(t)||(t=[t]);const e=[...Ua,...Object.keys(Prism.languages)];Yq(an,t,e).load(n=>{if(!(n in an.languages)){On.silent||console.warn("Language does not exist: "+n);return}const a="./prism-"+n;delete require.cache[require.resolve(a)],delete Prism.languages[n],or(a),Ua.add(n)})}On.silent=!1;var Qq=On;(function(t,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=S;var n=s(_n),a=s(Qq);function s(T){return T&&T.__esModule?T:{default:T}}function r(T,P){var w=Object.keys(T);if(Object.getOwnPropertySymbols){var D=Object.getOwnPropertySymbols(T);P&&(D=D.filter(function(M){return Object.getOwnPropertyDescriptor(T,M).enumerable})),w.push.apply(w,D)}return w}function i(T){for(var P=1;P<arguments.length;P++){var w=arguments[P]!=null?arguments[P]:{};P%2?r(Object(w),!0).forEach(function(D){o(T,D,w[D])}):Object.getOwnPropertyDescriptors?Object.defineProperties(T,Object.getOwnPropertyDescriptors(w)):r(Object(w)).forEach(function(D){Object.defineProperty(T,D,Object.getOwnPropertyDescriptor(w,D))})}return T}function o(T,P,w){return P in T?Object.defineProperty(T,P,{value:w,enumerable:!0,configurable:!0,writable:!0}):T[P]=w,T}function l(T,P){return p(T)||g(T,P)||c(T,P)||m()}function m(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function g(T,P){var w=T==null?null:typeof Symbol<"u"&&T[Symbol.iterator]||T["@@iterator"];if(w!=null){var D=[],M=!0,z=!1,H,Q;try{for(w=w.call(T);!(M=(H=w.next()).done)&&(D.push(H.value),!(P&&D.length===P));M=!0);}catch($){z=!0,Q=$}finally{try{!M&&w.return!=null&&w.return()}finally{if(z)throw Q}}return D}}function p(T){if(Array.isArray(T))return T}function u(T,P){var w=typeof Symbol<"u"&&T[Symbol.iterator]||T["@@iterator"];if(!w){if(Array.isArray(T)||(w=c(T))||P&&T&&typeof T.length=="number"){w&&(T=w);var D=0,M=function(){};return{s:M,n:function(){return D>=T.length?{done:!0}:{done:!1,value:T[D++]}},e:function(le){throw le},f:M}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}var z=!0,H=!1,Q;return{s:function(){w=w.call(T)},n:function(){var le=w.next();return z=le.done,le},e:function(le){H=!0,Q=le},f:function(){try{!z&&w.return!=null&&w.return()}finally{if(H)throw Q}}}}function c(T,P){if(T){if(typeof T=="string")return k(T,P);var w=Object.prototype.toString.call(T).slice(8,-1);if(w==="Object"&&T.constructor&&(w=T.constructor.name),w==="Map"||w==="Set")return Array.from(T);if(w==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(w))return k(T,P)}}function k(T,P){(P==null||P>T.length)&&(P=T.length);for(var w=0,D=new Array(P);w<P;w++)D[w]=T[w];return D}const _="de.joshuagleitze.markdown-it-prism.specifiedLanguage",x={highlightInlineCode:!1,plugins:[],init:()=>{},defaultLanguageForUnknown:void 0,defaultLanguageForUnspecified:void 0,defaultLanguage:void 0};function f(T){if(!T)return;let P=n.default.languages[T];return P===void 0&&((0,a.default)([T]),P=n.default.languages[T]),P}function b(T){try{or(`prismjs/plugins/${T}/prism-${T}`)}catch{throw new Error(`Cannot load Prism plugin "${T}". Please check the spelling.`)}}function h(T,P){let w=P;w===""&&T.defaultLanguageForUnspecified!==void 0&&(w=T.defaultLanguageForUnspecified);let D=f(w);return D===void 0&&T.defaultLanguageForUnknown!==void 0&&(w=T.defaultLanguageForUnknown,D=f(w)),[w,D]}function v(T,P,w,D){return d(T,P,w,h(P,D))}function d(T,P,w,[D,M]){return M?n.default.highlight(w,M,D):T.utils.escapeHtml(w)}function L(T,P){return T.options.langPrefix+P}function C(T){var P=u(T.tokens),w;try{for(P.s();!(w=P.n()).done;){const z=w.value;if(z.type==="inline"&&z.children!==null){var D=u(z.children.entries()),M;try{for(D.s();!(M=D.n()).done;){const H=l(M.value,2),Q=H[0],$=H[1];$.type==="code_inline"&&Q+1<z.children.length&&A($,z.children[Q+1])}}catch(H){D.e(H)}finally{D.f()}}}}catch(z){P.e(z)}finally{P.f()}}function A(T,P){const w=P.content.match(/^\{((?:[^\s}]+\s)*)language=([^\s}]+)((?:\s[^\s}]+)*)}/);w!==null&&(T.meta=i(i({},T.meta),{},{[_]:w[2]}),P.content=P.content.slice(w[0].length),(w[1]||w[3])&&(P.content=`{${w[1]||""}${(w[3]||" ").slice(1)}}${P.content}`))}function I(T,P,w){return(D,M,z,H,Q)=>{const $=D[M],se=($.info?T.utils.unescapeAll($.info).trim():"").split(/(\s+)/g)[0],pe=h(P,se),re=l(pe,1),G=re[0];if(G){$.info=G;const O=w(D,M,z,H,Q),N=L(T,T.utils.escapeHtml(G));return O.replace(/<((?:pre|code)[^>]*?)(?:\s+class="([^"]*)"([^>]*))?>/g,(B,K,J,j)=>J!=null&&J.includes(N)?B:`<${K} class="${J?`${J} `:""}${N}"${j||""}>`)}else return w(D,M,z,H,Q)}}function R(T,P,w){return(D,M,z,H,Q)=>{const $=D[M],le=$.meta&&$.meta[_]||"",se=h(P,le),pe=l(se,2),re=pe[0],G=pe[1];if(re){const O=d(T,P,$.content,[re,G]);return $.attrJoin("class",L(T,re)),`<code${Q.renderAttrs($)}>${O}</code>`}else return w(D,M,z,H,Q)}}function y(T,P){const w=T[P];if(w!==void 0&&f(w)===void 0)throw new Error(`Bad option ${P}: There is no Prism language '${w}'.`)}function E(T,P,w,D,M){return M.renderToken(T,P,w)}function S(T,P){const w=Object.assign({},x,P);y(w,"defaultLanguage"),y(w,"defaultLanguageForUnknown"),y(w,"defaultLanguageForUnspecified"),w.defaultLanguageForUnknown=w.defaultLanguageForUnknown||w.defaultLanguage,w.defaultLanguageForUnspecified=w.defaultLanguageForUnspecified||w.defaultLanguage,w.plugins.forEach(b),w.init(n.default),T.options.highlight=(D,M)=>v(T,w,D,M),T.renderer.rules.fence=I(T,w,T.renderer.rules.fence||E),w.highlightInlineCode&&(T.core.ruler.after("inline","prism_inline_code_language",C),T.renderer.rules.code_inline=R(T,w,T.renderer.rules.code_inline||E))}t.exports=e.default,t.exports.default=e.default})(Wq,_t);const Jq=Ws(_t);function eF(t,e){var n,a,s=t.attrs[t.attrIndex("href")][1];for(n=0;n<e.length;++n){if(a=e[n],typeof a.matcher=="function"){if(a.matcher(s,a))return a;continue}return a}}function tF(t,e,n){Object.keys(n).forEach(function(a){var s,r=n[a];a==="className"&&(a="class"),s=e[t].attrIndex(a),s<0?e[t].attrPush([a,r]):e[t].attrs[s][1]=r})}function ir(t,e){e?e=Array.isArray(e)?e:[e]:e=[],Object.freeze(e);var n=t.renderer.rules.link_open||this.defaultRender;t.renderer.rules.link_open=function(a,s,r,i,o){var l=eF(a[s],e),m=l&&l.attrs;return m&&tF(s,a,m),n(a,s,r,i,o)}}ir.defaultRender=function(t,e,n,a,s){return s.renderToken(t,e,n)};var nF=ir,sn={},at={},rn={},on={},dt={},$a;function aF(){return $a||($a=1,Object.defineProperty(dt,"__esModule",{value:!0}),dt.default=new Uint16Array('ᵁ<Õıʊҝջאٵ۞ޢߖࠏ੊ઑඡ๭༉༦჊ረዡᐕᒝᓃᓟᔥ\0\0\0\0\0\0ᕫᛍᦍᰒᷝ὾⁠↰⊍⏀⏻⑂⠤⤒ⴈ⹈⿎〖㊺㘹㞬㣾㨨㩱㫠㬮ࠀEMabcfglmnoprstu\\bfms¦³¹ÈÏlig耻Æ䃆P耻&䀦cute耻Á䃁reve;䄂Āiyx}rc耻Â䃂;䐐r;쀀𝔄rave耻À䃀pha;䎑acr;䄀d;橓Āgp¡on;䄄f;쀀𝔸plyFunction;恡ing耻Å䃅Ācs¾Ãr;쀀𝒜ign;扔ilde耻Ã䃃ml耻Ä䃄ЀaceforsuåûþėĜĢħĪĀcrêòkslash;或Ŷöø;櫧ed;挆y;䐑ƀcrtąċĔause;戵noullis;愬a;䎒r;쀀𝔅pf;쀀𝔹eve;䋘còēmpeq;扎܀HOacdefhilorsuōőŖƀƞƢƵƷƺǜȕɳɸɾcy;䐧PY耻©䂩ƀcpyŝŢźute;䄆Ā;iŧŨ拒talDifferentialD;慅leys;愭ȀaeioƉƎƔƘron;䄌dil耻Ç䃇rc;䄈nint;戰ot;䄊ĀdnƧƭilla;䂸terDot;䂷òſi;䎧rcleȀDMPTǇǋǑǖot;抙inus;抖lus;投imes;抗oĀcsǢǸkwiseContourIntegral;戲eCurlyĀDQȃȏoubleQuote;思uote;怙ȀlnpuȞȨɇɕonĀ;eȥȦ户;橴ƀgitȯȶȺruent;扡nt;戯ourIntegral;戮ĀfrɌɎ;愂oduct;成nterClockwiseContourIntegral;戳oss;樯cr;쀀𝒞pĀ;Cʄʅ拓ap;才րDJSZacefiosʠʬʰʴʸˋ˗ˡ˦̳ҍĀ;oŹʥtrahd;椑cy;䐂cy;䐅cy;䐏ƀgrsʿ˄ˇger;怡r;憡hv;櫤Āayː˕ron;䄎;䐔lĀ;t˝˞戇a;䎔r;쀀𝔇Āaf˫̧Ācm˰̢riticalȀADGT̖̜̀̆cute;䂴oŴ̋̍;䋙bleAcute;䋝rave;䁠ilde;䋜ond;拄ferentialD;慆Ѱ̽\0\0\0͔͂\0Ѕf;쀀𝔻ƀ;DE͈͉͍䂨ot;惜qual;扐blèCDLRUVͣͲ΂ϏϢϸontourIntegraìȹoɴ͹\0\0ͻ»͉nArrow;懓Āeo·ΤftƀARTΐΖΡrrow;懐ightArrow;懔eåˊngĀLRΫτeftĀARγιrrow;柸ightArrow;柺ightArrow;柹ightĀATϘϞrrow;懒ee;抨pɁϩ\0\0ϯrrow;懑ownArrow;懕erticalBar;戥ǹABLRTaВЪаўѿͼrrowƀ;BUНОТ憓ar;椓pArrow;懵reve;䌑eft˒к\0ц\0ѐightVector;楐eeVector;楞ectorĀ;Bљњ憽ar;楖ightǔѧ\0ѱeeVector;楟ectorĀ;BѺѻ懁ar;楗eeĀ;A҆҇护rrow;憧ĀctҒҗr;쀀𝒟rok;䄐ࠀNTacdfglmopqstuxҽӀӄӋӞӢӧӮӵԡԯԶՒ՝ՠեG;䅊H耻Ð䃐cute耻É䃉ƀaiyӒӗӜron;䄚rc耻Ê䃊;䐭ot;䄖r;쀀𝔈rave耻È䃈ement;戈ĀapӺӾcr;䄒tyɓԆ\0\0ԒmallSquare;旻erySmallSquare;斫ĀgpԦԪon;䄘f;쀀𝔼silon;䎕uĀaiԼՉlĀ;TՂՃ橵ilde;扂librium;懌Āci՗՚r;愰m;橳a;䎗ml耻Ë䃋Āipժկsts;戃onentialE;慇ʀcfiosօֈ֍ֲ׌y;䐤r;쀀𝔉lledɓ֗\0\0֣mallSquare;旼erySmallSquare;斪Ͱֺ\0ֿ\0\0ׄf;쀀𝔽All;戀riertrf;愱cò׋؀JTabcdfgorstר׬ׯ׺؀ؒؖ؛؝أ٬ٲcy;䐃耻>䀾mmaĀ;d׷׸䎓;䏜reve;䄞ƀeiy؇،ؐdil;䄢rc;䄜;䐓ot;䄠r;쀀𝔊;拙pf;쀀𝔾eater̀EFGLSTصلَٖٛ٦qualĀ;Lؾؿ扥ess;招ullEqual;执reater;檢ess;扷lantEqual;橾ilde;扳cr;쀀𝒢;扫ЀAacfiosuڅڋږڛڞڪھۊRDcy;䐪Āctڐڔek;䋇;䁞irc;䄤r;愌lbertSpace;愋ǰگ\0ڲf;愍izontalLine;攀Āctۃۅòکrok;䄦mpńېۘownHumðįqual;扏܀EJOacdfgmnostuۺ۾܃܇܎ܚܞܡܨ݄ݸދޏޕcy;䐕lig;䄲cy;䐁cute耻Í䃍Āiyܓܘrc耻Î䃎;䐘ot;䄰r;愑rave耻Ì䃌ƀ;apܠܯܿĀcgܴܷr;䄪inaryI;慈lieóϝǴ݉\0ݢĀ;eݍݎ戬Āgrݓݘral;戫section;拂isibleĀCTݬݲomma;恣imes;恢ƀgptݿރވon;䄮f;쀀𝕀a;䎙cr;愐ilde;䄨ǫޚ\0ޞcy;䐆l耻Ï䃏ʀcfosuެ޷޼߂ߐĀiyޱ޵rc;䄴;䐙r;쀀𝔍pf;쀀𝕁ǣ߇\0ߌr;쀀𝒥rcy;䐈kcy;䐄΀HJacfosߤߨ߽߬߱ࠂࠈcy;䐥cy;䐌ppa;䎚Āey߶߻dil;䄶;䐚r;쀀𝔎pf;쀀𝕂cr;쀀𝒦րJTaceflmostࠥࠩࠬࡐࡣ঳সে্਷ੇcy;䐉耻<䀼ʀcmnpr࠷࠼ࡁࡄࡍute;䄹bda;䎛g;柪lacetrf;愒r;憞ƀaeyࡗ࡜ࡡron;䄽dil;䄻;䐛Āfsࡨ॰tԀACDFRTUVarࡾࢩࢱࣦ࣠ࣼयज़ΐ४Ānrࢃ࢏gleBracket;柨rowƀ;BR࢙࢚࢞憐ar;懤ightArrow;懆eiling;挈oǵࢷ\0ࣃbleBracket;柦nǔࣈ\0࣒eeVector;楡ectorĀ;Bࣛࣜ懃ar;楙loor;挊ightĀAV࣯ࣵrrow;憔ector;楎Āerँगeƀ;AVउऊऐ抣rrow;憤ector;楚iangleƀ;BEतथऩ抲ar;槏qual;抴pƀDTVषूौownVector;楑eeVector;楠ectorĀ;Bॖॗ憿ar;楘ectorĀ;B॥०憼ar;楒ightáΜs̀EFGLSTॾঋকঝঢভqualGreater;拚ullEqual;扦reater;扶ess;檡lantEqual;橽ilde;扲r;쀀𝔏Ā;eঽা拘ftarrow;懚idot;䄿ƀnpw৔ਖਛgȀLRlr৞৷ਂਐeftĀAR০৬rrow;柵ightArrow;柷ightArrow;柶eftĀarγਊightáοightáϊf;쀀𝕃erĀLRਢਬeftArrow;憙ightArrow;憘ƀchtਾੀੂòࡌ;憰rok;䅁;扪Ѐacefiosuਗ਼੝੠੷੼અઋ઎p;椅y;䐜Ādl੥੯iumSpace;恟lintrf;愳r;쀀𝔐nusPlus;戓pf;쀀𝕄cò੶;䎜ҀJacefostuણધભીଔଙඑ඗ඞcy;䐊cute;䅃ƀaey઴હાron;䅇dil;䅅;䐝ƀgswે૰଎ativeƀMTV૓૟૨ediumSpace;怋hiĀcn૦૘ë૙eryThiî૙tedĀGL૸ଆreaterGreateòٳessLesóੈLine;䀊r;쀀𝔑ȀBnptଢନଷ଺reak;恠BreakingSpace;䂠f;愕ڀ;CDEGHLNPRSTV୕ୖ୪୼஡௫ఄ౞಄ದ೘ൡඅ櫬Āou୛୤ngruent;扢pCap;扭oubleVerticalBar;戦ƀlqxஃஊ஛ement;戉ualĀ;Tஒஓ扠ilde;쀀≂̸ists;戄reater΀;EFGLSTஶஷ஽௉௓௘௥扯qual;扱ullEqual;쀀≧̸reater;쀀≫̸ess;批lantEqual;쀀⩾̸ilde;扵umpń௲௽ownHump;쀀≎̸qual;쀀≏̸eĀfsఊధtTriangleƀ;BEచఛడ拪ar;쀀⧏̸qual;括s̀;EGLSTవశ఼ౄోౘ扮qual;扰reater;扸ess;쀀≪̸lantEqual;쀀⩽̸ilde;扴estedĀGL౨౹reaterGreater;쀀⪢̸essLess;쀀⪡̸recedesƀ;ESಒಓಛ技qual;쀀⪯̸lantEqual;拠ĀeiಫಹverseElement;戌ghtTriangleƀ;BEೋೌ೒拫ar;쀀⧐̸qual;拭ĀquೝഌuareSuĀbp೨೹setĀ;E೰ೳ쀀⊏̸qual;拢ersetĀ;Eഃആ쀀⊐̸qual;拣ƀbcpഓതൎsetĀ;Eഛഞ쀀⊂⃒qual;抈ceedsȀ;ESTലള഻െ抁qual;쀀⪰̸lantEqual;拡ilde;쀀≿̸ersetĀ;E൘൛쀀⊃⃒qual;抉ildeȀ;EFT൮൯൵ൿ扁qual;扄ullEqual;扇ilde;扉erticalBar;戤cr;쀀𝒩ilde耻Ñ䃑;䎝܀Eacdfgmoprstuvලෂ෉෕ෛ෠෧෼ขภยา฿ไlig;䅒cute耻Ó䃓Āiy෎ීrc耻Ô䃔;䐞blac;䅐r;쀀𝔒rave耻Ò䃒ƀaei෮ෲ෶cr;䅌ga;䎩cron;䎟pf;쀀𝕆enCurlyĀDQฎบoubleQuote;怜uote;怘;橔Āclวฬr;쀀𝒪ash耻Ø䃘iŬื฼de耻Õ䃕es;樷ml耻Ö䃖erĀBP๋๠Āar๐๓r;怾acĀek๚๜;揞et;掴arenthesis;揜Ҁacfhilors๿ງຊຏຒດຝະ໼rtialD;戂y;䐟r;쀀𝔓i;䎦;䎠usMinus;䂱Āipຢອncareplanåڝf;愙Ȁ;eio຺ູ໠໤檻cedesȀ;EST່້໏໚扺qual;檯lantEqual;扼ilde;找me;怳Ādp໩໮uct;戏ortionĀ;aȥ໹l;戝Āci༁༆r;쀀𝒫;䎨ȀUfos༑༖༛༟OT耻"䀢r;쀀𝔔pf;愚cr;쀀𝒬؀BEacefhiorsu༾གྷཇའཱིྦྷྪྭ႖ႩႴႾarr;椐G耻®䂮ƀcnrཎནབute;䅔g;柫rĀ;tཛྷཝ憠l;椖ƀaeyཧཬཱron;䅘dil;䅖;䐠Ā;vླྀཹ愜erseĀEUྂྙĀlq྇ྎement;戋uilibrium;懋pEquilibrium;楯r»ཹo;䎡ghtЀACDFTUVa࿁࿫࿳ဢဨၛႇϘĀnr࿆࿒gleBracket;柩rowƀ;BL࿜࿝࿡憒ar;懥eftArrow;懄eiling;按oǵ࿹\0စbleBracket;柧nǔည\0နeeVector;楝ectorĀ;Bဝသ懂ar;楕loor;挋Āerိ၃eƀ;AVဵံြ抢rrow;憦ector;楛iangleƀ;BEၐၑၕ抳ar;槐qual;抵pƀDTVၣၮၸownVector;楏eeVector;楜ectorĀ;Bႂႃ憾ar;楔ectorĀ;B႑႒懀ar;楓Āpuႛ႞f;愝ndImplies;楰ightarrow;懛ĀchႹႼr;愛;憱leDelayed;槴ڀHOacfhimoqstuფჱჷჽᄙᄞᅑᅖᅡᅧᆵᆻᆿĀCcჩხHcy;䐩y;䐨FTcy;䐬cute;䅚ʀ;aeiyᄈᄉᄎᄓᄗ檼ron;䅠dil;䅞rc;䅜;䐡r;쀀𝔖ortȀDLRUᄪᄴᄾᅉownArrow»ОeftArrow»࢚ightArrow»࿝pArrow;憑gma;䎣allCircle;战pf;쀀𝕊ɲᅭ\0\0ᅰt;戚areȀ;ISUᅻᅼᆉᆯ斡ntersection;抓uĀbpᆏᆞsetĀ;Eᆗᆘ抏qual;抑ersetĀ;Eᆨᆩ抐qual;抒nion;抔cr;쀀𝒮ar;拆ȀbcmpᇈᇛሉላĀ;sᇍᇎ拐etĀ;Eᇍᇕqual;抆ĀchᇠህeedsȀ;ESTᇭᇮᇴᇿ扻qual;檰lantEqual;扽ilde;承Tháྌ;我ƀ;esሒሓሣ拑rsetĀ;Eሜም抃qual;抇et»ሓրHRSacfhiorsሾቄ቉ቕ቞ቱቶኟዂወዑORN耻Þ䃞ADE;愢ĀHc቎ቒcy;䐋y;䐦Ābuቚቜ;䀉;䎤ƀaeyብቪቯron;䅤dil;䅢;䐢r;쀀𝔗Āeiቻ኉ǲኀ\0ኇefore;戴a;䎘Ācn኎ኘkSpace;쀀  Space;怉ldeȀ;EFTካኬኲኼ戼qual;扃ullEqual;扅ilde;扈pf;쀀𝕋ipleDot;惛Āctዖዛr;쀀𝒯rok;䅦ૡዷጎጚጦ\0ጬጱ\0\0\0\0\0ጸጽ፷ᎅ\0᏿ᐄᐊᐐĀcrዻጁute耻Ú䃚rĀ;oጇገ憟cir;楉rǣጓ\0጖y;䐎ve;䅬Āiyጞጣrc耻Û䃛;䐣blac;䅰r;쀀𝔘rave耻Ù䃙acr;䅪Ādiፁ፩erĀBPፈ፝Āarፍፐr;䁟acĀekፗፙ;揟et;掵arenthesis;揝onĀ;P፰፱拃lus;抎Āgp፻፿on;䅲f;쀀𝕌ЀADETadps᎕ᎮᎸᏄϨᏒᏗᏳrrowƀ;BDᅐᎠᎤar;椒ownArrow;懅ownArrow;憕quilibrium;楮eeĀ;AᏋᏌ报rrow;憥ownáϳerĀLRᏞᏨeftArrow;憖ightArrow;憗iĀ;lᏹᏺ䏒on;䎥ing;䅮cr;쀀𝒰ilde;䅨ml耻Ü䃜ҀDbcdefosvᐧᐬᐰᐳᐾᒅᒊᒐᒖash;披ar;櫫y;䐒ashĀ;lᐻᐼ抩;櫦Āerᑃᑅ;拁ƀbtyᑌᑐᑺar;怖Ā;iᑏᑕcalȀBLSTᑡᑥᑪᑴar;戣ine;䁼eparator;杘ilde;所ThinSpace;怊r;쀀𝔙pf;쀀𝕍cr;쀀𝒱dash;抪ʀcefosᒧᒬᒱᒶᒼirc;䅴dge;拀r;쀀𝔚pf;쀀𝕎cr;쀀𝒲Ȁfiosᓋᓐᓒᓘr;쀀𝔛;䎞pf;쀀𝕏cr;쀀𝒳ҀAIUacfosuᓱᓵᓹᓽᔄᔏᔔᔚᔠcy;䐯cy;䐇cy;䐮cute耻Ý䃝Āiyᔉᔍrc;䅶;䐫r;쀀𝔜pf;쀀𝕐cr;쀀𝒴ml;䅸ЀHacdefosᔵᔹᔿᕋᕏᕝᕠᕤcy;䐖cute;䅹Āayᕄᕉron;䅽;䐗ot;䅻ǲᕔ\0ᕛoWidtè૙a;䎖r;愨pf;愤cr;쀀𝒵௡ᖃᖊᖐ\0ᖰᖶᖿ\0\0\0\0ᗆᗛᗫᙟ᙭\0ᚕ᚛ᚲᚹ\0ᚾcute耻á䃡reve;䄃̀;Ediuyᖜᖝᖡᖣᖨᖭ戾;쀀∾̳;房rc耻â䃢te肻´̆;䐰lig耻æ䃦Ā;r²ᖺ;쀀𝔞rave耻à䃠ĀepᗊᗖĀfpᗏᗔsym;愵èᗓha;䎱ĀapᗟcĀclᗤᗧr;䄁g;樿ɤᗰ\0\0ᘊʀ;adsvᗺᗻᗿᘁᘇ戧nd;橕;橜lope;橘;橚΀;elmrszᘘᘙᘛᘞᘿᙏᙙ戠;榤e»ᘙsdĀ;aᘥᘦ戡ѡᘰᘲᘴᘶᘸᘺᘼᘾ;榨;榩;榪;榫;榬;榭;榮;榯tĀ;vᙅᙆ戟bĀ;dᙌᙍ抾;榝Āptᙔᙗh;戢»¹arr;捼Āgpᙣᙧon;䄅f;쀀𝕒΀;Eaeiop዁ᙻᙽᚂᚄᚇᚊ;橰cir;橯;扊d;手s;䀧roxĀ;e዁ᚒñᚃing耻å䃥ƀctyᚡᚦᚨr;쀀𝒶;䀪mpĀ;e዁ᚯñʈilde耻ã䃣ml耻ä䃤Āciᛂᛈoninôɲnt;樑ࠀNabcdefiklnoprsu᛭ᛱᜰ᜼ᝃᝈ᝸᝽០៦ᠹᡐᜍ᤽᥈ᥰot;櫭Ācrᛶ᜞kȀcepsᜀᜅᜍᜓong;扌psilon;䏶rime;怵imĀ;e᜚᜛戽q;拍Ŷᜢᜦee;抽edĀ;gᜬᜭ挅e»ᜭrkĀ;t፜᜷brk;掶Āoyᜁᝁ;䐱quo;怞ʀcmprtᝓ᝛ᝡᝤᝨausĀ;eĊĉptyv;榰séᜌnoõēƀahwᝯ᝱ᝳ;䎲;愶een;扬r;쀀𝔟g΀costuvwឍឝឳេ៕៛៞ƀaiuបពរðݠrc;旯p»፱ƀdptឤឨឭot;樀lus;樁imes;樂ɱឹ\0\0ើcup;樆ar;昅riangleĀdu៍្own;施p;斳plus;樄eåᑄåᒭarow;植ƀako៭ᠦᠵĀcn៲ᠣkƀlst៺֫᠂ozenge;槫riangleȀ;dlr᠒᠓᠘᠝斴own;斾eft;旂ight;斸k;搣Ʊᠫ\0ᠳƲᠯ\0ᠱ;斒;斑4;斓ck;斈ĀeoᠾᡍĀ;qᡃᡆ쀀=⃥uiv;쀀≡⃥t;挐Ȁptwxᡙᡞᡧᡬf;쀀𝕓Ā;tᏋᡣom»Ꮜtie;拈؀DHUVbdhmptuvᢅᢖᢪᢻᣗᣛᣬ᣿ᤅᤊᤐᤡȀLRlrᢎᢐᢒᢔ;敗;敔;敖;敓ʀ;DUduᢡᢢᢤᢦᢨ敐;敦;敩;敤;敧ȀLRlrᢳᢵᢷᢹ;敝;敚;敜;教΀;HLRhlrᣊᣋᣍᣏᣑᣓᣕ救;敬;散;敠;敫;敢;敟ox;槉ȀLRlrᣤᣦᣨᣪ;敕;敒;攐;攌ʀ;DUduڽ᣷᣹᣻᣽;敥;敨;攬;攴inus;抟lus;択imes;抠ȀLRlrᤙᤛᤝ᤟;敛;敘;攘;攔΀;HLRhlrᤰᤱᤳᤵᤷ᤻᤹攂;敪;敡;敞;攼;攤;攜Āevģ᥂bar耻¦䂦Ȁceioᥑᥖᥚᥠr;쀀𝒷mi;恏mĀ;e᜚᜜lƀ;bhᥨᥩᥫ䁜;槅sub;柈Ŭᥴ᥾lĀ;e᥹᥺怢t»᥺pƀ;Eeįᦅᦇ;檮Ā;qۜۛೡᦧ\0᧨ᨑᨕᨲ\0ᨷᩐ\0\0᪴\0\0᫁\0\0ᬡᬮ᭍᭒\0᯽\0ᰌƀcpr᦭ᦲ᧝ute;䄇̀;abcdsᦿᧀᧄ᧊᧕᧙戩nd;橄rcup;橉Āau᧏᧒p;橋p;橇ot;橀;쀀∩︀Āeo᧢᧥t;恁îړȀaeiu᧰᧻ᨁᨅǰ᧵\0᧸s;橍on;䄍dil耻ç䃧rc;䄉psĀ;sᨌᨍ橌m;橐ot;䄋ƀdmnᨛᨠᨦil肻¸ƭptyv;榲t脀¢;eᨭᨮ䂢räƲr;쀀𝔠ƀceiᨽᩀᩍy;䑇ckĀ;mᩇᩈ朓ark»ᩈ;䏇r΀;Ecefms᩟᩠ᩢᩫ᪤᪪᪮旋;槃ƀ;elᩩᩪᩭ䋆q;扗eɡᩴ\0\0᪈rrowĀlr᩼᪁eft;憺ight;憻ʀRSacd᪒᪔᪖᪚᪟»ཇ;擈st;抛irc;抚ash;抝nint;樐id;櫯cir;槂ubsĀ;u᪻᪼晣it»᪼ˬ᫇᫔᫺\0ᬊonĀ;eᫍᫎ䀺Ā;qÇÆɭ᫙\0\0᫢aĀ;t᫞᫟䀬;䁀ƀ;fl᫨᫩᫫戁îᅠeĀmx᫱᫶ent»᫩eóɍǧ᫾\0ᬇĀ;dኻᬂot;橭nôɆƀfryᬐᬔᬗ;쀀𝕔oäɔ脀©;sŕᬝr;愗Āaoᬥᬩrr;憵ss;朗Ācuᬲᬷr;쀀𝒸Ābpᬼ᭄Ā;eᭁᭂ櫏;櫑Ā;eᭉᭊ櫐;櫒dot;拯΀delprvw᭠᭬᭷ᮂᮬᯔ᯹arrĀlr᭨᭪;椸;椵ɰ᭲\0\0᭵r;拞c;拟arrĀ;p᭿ᮀ憶;椽̀;bcdosᮏᮐᮖᮡᮥᮨ截rcap;橈Āauᮛᮞp;橆p;橊ot;抍r;橅;쀀∪︀Ȁalrv᮵ᮿᯞᯣrrĀ;mᮼᮽ憷;椼yƀevwᯇᯔᯘqɰᯎ\0\0ᯒreã᭳uã᭵ee;拎edge;拏en耻¤䂤earrowĀlrᯮ᯳eft»ᮀight»ᮽeäᯝĀciᰁᰇoninôǷnt;戱lcty;挭ঀAHabcdefhijlorstuwz᰸᰻᰿ᱝᱩᱵᲊᲞᲬᲷ᳻᳿ᴍᵻᶑᶫᶻ᷆᷍rò΁ar;楥Ȁglrs᱈ᱍ᱒᱔ger;怠eth;愸òᄳhĀ;vᱚᱛ怐»ऊūᱡᱧarow;椏aã̕Āayᱮᱳron;䄏;䐴ƀ;ao̲ᱼᲄĀgrʿᲁr;懊tseq;橷ƀglmᲑᲔᲘ耻°䂰ta;䎴ptyv;榱ĀirᲣᲨsht;楿;쀀𝔡arĀlrᲳᲵ»ࣜ»သʀaegsv᳂͸᳖᳜᳠mƀ;oș᳊᳔ndĀ;ș᳑uit;晦amma;䏝in;拲ƀ;io᳧᳨᳸䃷de脀÷;o᳧ᳰntimes;拇nø᳷cy;䑒cɯᴆ\0\0ᴊrn;挞op;挍ʀlptuwᴘᴝᴢᵉᵕlar;䀤f;쀀𝕕ʀ;emps̋ᴭᴷᴽᵂqĀ;d͒ᴳot;扑inus;戸lus;戔quare;抡blebarwedgåúnƀadhᄮᵝᵧownarrowóᲃarpoonĀlrᵲᵶefôᲴighôᲶŢᵿᶅkaro÷གɯᶊ\0\0ᶎrn;挟op;挌ƀcotᶘᶣᶦĀryᶝᶡ;쀀𝒹;䑕l;槶rok;䄑Ādrᶰᶴot;拱iĀ;fᶺ᠖斿Āah᷀᷃ròЩaòྦangle;榦Āci᷒ᷕy;䑟grarr;柿ऀDacdefglmnopqrstuxḁḉḙḸոḼṉṡṾấắẽỡἪἷὄ὎὚ĀDoḆᴴoôᲉĀcsḎḔute耻é䃩ter;橮ȀaioyḢḧḱḶron;䄛rĀ;cḭḮ扖耻ê䃪lon;払;䑍ot;䄗ĀDrṁṅot;扒;쀀𝔢ƀ;rsṐṑṗ檚ave耻è䃨Ā;dṜṝ檖ot;檘Ȁ;ilsṪṫṲṴ檙nters;揧;愓Ā;dṹṺ檕ot;檗ƀapsẅẉẗcr;䄓tyƀ;svẒẓẕ戅et»ẓpĀ1;ẝẤĳạả;怄;怅怃ĀgsẪẬ;䅋p;怂ĀgpẴẸon;䄙f;쀀𝕖ƀalsỄỎỒrĀ;sỊị拕l;槣us;橱iƀ;lvỚớở䎵on»ớ;䏵ȀcsuvỪỳἋἣĀioữḱrc»Ḯɩỹ\0\0ỻíՈantĀglἂἆtr»ṝess»Ṻƀaeiἒ἖Ἒls;䀽st;扟vĀ;DȵἠD;橸parsl;槥ĀDaἯἳot;打rr;楱ƀcdiἾὁỸr;愯oô͒ĀahὉὋ;䎷耻ð䃰Āmrὓὗl耻ë䃫o;悬ƀcipὡὤὧl;䀡sôծĀeoὬὴctatioîՙnentialåչৡᾒ\0ᾞ\0ᾡᾧ\0\0ῆῌ\0ΐ\0ῦῪ \0 ⁚llingdotseñṄy;䑄male;晀ƀilrᾭᾳ῁lig;耀ﬃɩᾹ\0\0᾽g;耀ﬀig;耀ﬄ;쀀𝔣lig;耀ﬁlig;쀀fjƀaltῙ῜ῡt;晭ig;耀ﬂns;斱of;䆒ǰ΅\0ῳf;쀀𝕗ĀakֿῷĀ;vῼ´拔;櫙artint;樍Āao‌⁕Ācs‑⁒α‚‰‸⁅⁈\0⁐β•‥‧‪‬\0‮耻½䂽;慓耻¼䂼;慕;慙;慛Ƴ‴\0‶;慔;慖ʴ‾⁁\0\0⁃耻¾䂾;慗;慜5;慘ƶ⁌\0⁎;慚;慝8;慞l;恄wn;挢cr;쀀𝒻ࢀEabcdefgijlnorstv₂₉₟₥₰₴⃰⃵⃺⃿℃ℒℸ̗ℾ⅒↞Ā;lٍ₇;檌ƀcmpₐₕ₝ute;䇵maĀ;dₜ᳚䎳;檆reve;䄟Āiy₪₮rc;䄝;䐳ot;䄡Ȁ;lqsؾق₽⃉ƀ;qsؾٌ⃄lanô٥Ȁ;cdl٥⃒⃥⃕c;檩otĀ;o⃜⃝檀Ā;l⃢⃣檂;檄Ā;e⃪⃭쀀⋛︀s;檔r;쀀𝔤Ā;gٳ؛mel;愷cy;䑓Ȁ;Eajٚℌℎℐ;檒;檥;檤ȀEaesℛℝ℩ℴ;扩pĀ;p℣ℤ檊rox»ℤĀ;q℮ℯ檈Ā;q℮ℛim;拧pf;쀀𝕘Āci⅃ⅆr;愊mƀ;el٫ⅎ⅐;檎;檐茀>;cdlqr׮ⅠⅪⅮⅳⅹĀciⅥⅧ;檧r;橺ot;拗Par;榕uest;橼ʀadelsↄⅪ←ٖ↛ǰ↉\0↎proø₞r;楸qĀlqؿ↖lesó₈ií٫Āen↣↭rtneqq;쀀≩︀Å↪ԀAabcefkosy⇄⇇⇱⇵⇺∘∝∯≨≽ròΠȀilmr⇐⇔⇗⇛rsðᒄf»․ilôکĀdr⇠⇤cy;䑊ƀ;cwࣴ⇫⇯ir;楈;憭ar;意irc;䄥ƀalr∁∎∓rtsĀ;u∉∊晥it»∊lip;怦con;抹r;쀀𝔥sĀew∣∩arow;椥arow;椦ʀamopr∺∾≃≞≣rr;懿tht;戻kĀlr≉≓eftarrow;憩ightarrow;憪f;쀀𝕙bar;怕ƀclt≯≴≸r;쀀𝒽asè⇴rok;䄧Ābp⊂⊇ull;恃hen»ᱛૡ⊣\0⊪\0⊸⋅⋎\0⋕⋳\0\0⋸⌢⍧⍢⍿\0⎆⎪⎴cute耻í䃭ƀ;iyݱ⊰⊵rc耻î䃮;䐸Ācx⊼⊿y;䐵cl耻¡䂡ĀfrΟ⋉;쀀𝔦rave耻ì䃬Ȁ;inoܾ⋝⋩⋮Āin⋢⋦nt;樌t;戭fin;槜ta;愩lig;䄳ƀaop⋾⌚⌝ƀcgt⌅⌈⌗r;䄫ƀelpܟ⌏⌓inåގarôܠh;䄱f;抷ed;䆵ʀ;cfotӴ⌬⌱⌽⍁are;愅inĀ;t⌸⌹戞ie;槝doô⌙ʀ;celpݗ⍌⍐⍛⍡al;抺Āgr⍕⍙eróᕣã⍍arhk;樗rod;樼Ȁcgpt⍯⍲⍶⍻y;䑑on;䄯f;쀀𝕚a;䎹uest耻¿䂿Āci⎊⎏r;쀀𝒾nʀ;EdsvӴ⎛⎝⎡ӳ;拹ot;拵Ā;v⎦⎧拴;拳Ā;iݷ⎮lde;䄩ǫ⎸\0⎼cy;䑖l耻ï䃯̀cfmosu⏌⏗⏜⏡⏧⏵Āiy⏑⏕rc;䄵;䐹r;쀀𝔧ath;䈷pf;쀀𝕛ǣ⏬\0⏱r;쀀𝒿rcy;䑘kcy;䑔Ѐacfghjos␋␖␢␧␭␱␵␻ppaĀ;v␓␔䎺;䏰Āey␛␠dil;䄷;䐺r;쀀𝔨reen;䄸cy;䑅cy;䑜pf;쀀𝕜cr;쀀𝓀஀ABEHabcdefghjlmnoprstuv⑰⒁⒆⒍⒑┎┽╚▀♎♞♥♹♽⚚⚲⛘❝❨➋⟀⠁⠒ƀart⑷⑺⑼rò৆òΕail;椛arr;椎Ā;gঔ⒋;檋ar;楢ॣ⒥\0⒪\0⒱\0\0\0\0\0⒵Ⓔ\0ⓆⓈⓍ\0⓹ute;䄺mptyv;榴raîࡌbda;䎻gƀ;dlࢎⓁⓃ;榑åࢎ;檅uo耻«䂫rЀ;bfhlpst࢙ⓞⓦⓩ⓫⓮⓱⓵Ā;f࢝ⓣs;椟s;椝ë≒p;憫l;椹im;楳l;憢ƀ;ae⓿─┄檫il;椙Ā;s┉┊檭;쀀⪭︀ƀabr┕┙┝rr;椌rk;杲Āak┢┬cĀek┨┪;䁻;䁛Āes┱┳;榋lĀdu┹┻;榏;榍Ȁaeuy╆╋╖╘ron;䄾Ādi═╔il;䄼ìࢰâ┩;䐻Ȁcqrs╣╦╭╽a;椶uoĀ;rนᝆĀdu╲╷har;楧shar;楋h;憲ʀ;fgqs▋▌উ◳◿扤tʀahlrt▘▤▷◂◨rrowĀ;t࢙□aé⓶arpoonĀdu▯▴own»њp»०eftarrows;懇ightƀahs◍◖◞rrowĀ;sࣴࢧarpoonó྘quigarro÷⇰hreetimes;拋ƀ;qs▋ও◺lanôবʀ;cdgsব☊☍☝☨c;檨otĀ;o☔☕橿Ā;r☚☛檁;檃Ā;e☢☥쀀⋚︀s;檓ʀadegs☳☹☽♉♋pproøⓆot;拖qĀgq♃♅ôউgtò⒌ôছiíলƀilr♕࣡♚sht;楼;쀀𝔩Ā;Eজ♣;檑š♩♶rĀdu▲♮Ā;l॥♳;楪lk;斄cy;䑙ʀ;achtੈ⚈⚋⚑⚖rò◁orneòᴈard;楫ri;旺Āio⚟⚤dot;䅀ustĀ;a⚬⚭掰che»⚭ȀEaes⚻⚽⛉⛔;扨pĀ;p⛃⛄檉rox»⛄Ā;q⛎⛏檇Ā;q⛎⚻im;拦Ѐabnoptwz⛩⛴⛷✚✯❁❇❐Ānr⛮⛱g;柬r;懽rëࣁgƀlmr⛿✍✔eftĀar০✇ightá৲apsto;柼ightá৽parrowĀlr✥✩efô⓭ight;憬ƀafl✶✹✽r;榅;쀀𝕝us;樭imes;樴š❋❏st;戗áፎƀ;ef❗❘᠀旊nge»❘arĀ;l❤❥䀨t;榓ʀachmt❳❶❼➅➇ròࢨorneòᶌarĀ;d྘➃;業;怎ri;抿̀achiqt➘➝ੀ➢➮➻quo;怹r;쀀𝓁mƀ;egল➪➬;檍;檏Ābu┪➳oĀ;rฟ➹;怚rok;䅂萀<;cdhilqrࠫ⟒☹⟜⟠⟥⟪⟰Āci⟗⟙;檦r;橹reå◲mes;拉arr;楶uest;橻ĀPi⟵⟹ar;榖ƀ;ef⠀भ᠛旃rĀdu⠇⠍shar;楊har;楦Āen⠗⠡rtneqq;쀀≨︀Å⠞܀Dacdefhilnopsu⡀⡅⢂⢎⢓⢠⢥⢨⣚⣢⣤ઃ⣳⤂Dot;戺Ȁclpr⡎⡒⡣⡽r耻¯䂯Āet⡗⡙;時Ā;e⡞⡟朠se»⡟Ā;sျ⡨toȀ;dluျ⡳⡷⡻owîҌefôएðᏑker;斮Āoy⢇⢌mma;権;䐼ash;怔asuredangle»ᘦr;쀀𝔪o;愧ƀcdn⢯⢴⣉ro耻µ䂵Ȁ;acdᑤ⢽⣀⣄sôᚧir;櫰ot肻·Ƶusƀ;bd⣒ᤃ⣓戒Ā;uᴼ⣘;横ţ⣞⣡p;櫛ò−ðઁĀdp⣩⣮els;抧f;쀀𝕞Āct⣸⣽r;쀀𝓂pos»ᖝƀ;lm⤉⤊⤍䎼timap;抸ఀGLRVabcdefghijlmoprstuvw⥂⥓⥾⦉⦘⧚⧩⨕⨚⩘⩝⪃⪕⪤⪨⬄⬇⭄⭿⮮ⰴⱧⱼ⳩Āgt⥇⥋;쀀⋙̸Ā;v⥐௏쀀≫⃒ƀelt⥚⥲⥶ftĀar⥡⥧rrow;懍ightarrow;懎;쀀⋘̸Ā;v⥻ే쀀≪⃒ightarrow;懏ĀDd⦎⦓ash;抯ash;抮ʀbcnpt⦣⦧⦬⦱⧌la»˞ute;䅄g;쀀∠⃒ʀ;Eiop඄⦼⧀⧅⧈;쀀⩰̸d;쀀≋̸s;䅉roø඄urĀ;a⧓⧔普lĀ;s⧓ସǳ⧟\0⧣p肻 ଷmpĀ;e௹ఀʀaeouy⧴⧾⨃⨐⨓ǰ⧹\0⧻;橃on;䅈dil;䅆ngĀ;dൾ⨊ot;쀀⩭̸p;橂;䐽ash;怓΀;Aadqsxஒ⨩⨭⨻⩁⩅⩐rr;懗rĀhr⨳⨶k;椤Ā;oᏲᏰot;쀀≐̸uiöୣĀei⩊⩎ar;椨í஘istĀ;s஠டr;쀀𝔫ȀEest௅⩦⩹⩼ƀ;qs஼⩭௡ƀ;qs஼௅⩴lanô௢ií௪Ā;rஶ⪁»ஷƀAap⪊⪍⪑rò⥱rr;憮ar;櫲ƀ;svྍ⪜ྌĀ;d⪡⪢拼;拺cy;䑚΀AEadest⪷⪺⪾⫂⫅⫶⫹rò⥦;쀀≦̸rr;憚r;急Ȁ;fqs఻⫎⫣⫯tĀar⫔⫙rro÷⫁ightarro÷⪐ƀ;qs఻⪺⫪lanôౕĀ;sౕ⫴»శiíౝĀ;rవ⫾iĀ;eచథiäඐĀpt⬌⬑f;쀀𝕟膀¬;in⬙⬚⬶䂬nȀ;Edvஉ⬤⬨⬮;쀀⋹̸ot;쀀⋵̸ǡஉ⬳⬵;拷;拶iĀ;vಸ⬼ǡಸ⭁⭃;拾;拽ƀaor⭋⭣⭩rȀ;ast୻⭕⭚⭟lleì୻l;쀀⫽⃥;쀀∂̸lint;樔ƀ;ceಒ⭰⭳uåಥĀ;cಘ⭸Ā;eಒ⭽ñಘȀAait⮈⮋⮝⮧rò⦈rrƀ;cw⮔⮕⮙憛;쀀⤳̸;쀀↝̸ghtarrow»⮕riĀ;eೋೖ΀chimpqu⮽⯍⯙⬄୸⯤⯯Ȁ;cerല⯆ഷ⯉uå൅;쀀𝓃ortɭ⬅\0\0⯖ará⭖mĀ;e൮⯟Ā;q൴൳suĀbp⯫⯭å೸åഋƀbcp⯶ⰑⰙȀ;Ees⯿ⰀഢⰄ抄;쀀⫅̸etĀ;eഛⰋqĀ;qണⰀcĀ;eലⰗñസȀ;EesⰢⰣൟⰧ抅;쀀⫆̸etĀ;e൘ⰮqĀ;qൠⰣȀgilrⰽⰿⱅⱇìௗlde耻ñ䃱çృiangleĀlrⱒⱜeftĀ;eచⱚñదightĀ;eೋⱥñ೗Ā;mⱬⱭ䎽ƀ;esⱴⱵⱹ䀣ro;愖p;怇ҀDHadgilrsⲏⲔⲙⲞⲣⲰⲶⳓⳣash;抭arr;椄p;쀀≍⃒ash;抬ĀetⲨⲬ;쀀≥⃒;쀀>⃒nfin;槞ƀAetⲽⳁⳅrr;椂;쀀≤⃒Ā;rⳊⳍ쀀<⃒ie;쀀⊴⃒ĀAtⳘⳜrr;椃rie;쀀⊵⃒im;쀀∼⃒ƀAan⳰⳴ⴂrr;懖rĀhr⳺⳽k;椣Ā;oᏧᏥear;椧ቓ᪕\0\0\0\0\0\0\0\0\0\0\0\0\0ⴭ\0ⴸⵈⵠⵥ⵲ⶄᬇ\0\0ⶍⶫ\0ⷈⷎ\0ⷜ⸙⸫⸾⹃Ācsⴱ᪗ute耻ó䃳ĀiyⴼⵅrĀ;c᪞ⵂ耻ô䃴;䐾ʀabios᪠ⵒⵗǈⵚlac;䅑v;樸old;榼lig;䅓Ācr⵩⵭ir;榿;쀀𝔬ͯ⵹\0\0⵼\0ⶂn;䋛ave耻ò䃲;槁Ābmⶈ෴ar;榵Ȁacitⶕ⶘ⶥⶨrò᪀Āir⶝ⶠr;榾oss;榻nå๒;槀ƀaeiⶱⶵⶹcr;䅍ga;䏉ƀcdnⷀⷅǍron;䎿;榶pf;쀀𝕠ƀaelⷔ⷗ǒr;榷rp;榹΀;adiosvⷪⷫⷮ⸈⸍⸐⸖戨rò᪆Ȁ;efmⷷⷸ⸂⸅橝rĀ;oⷾⷿ愴f»ⷿ耻ª䂪耻º䂺gof;抶r;橖lope;橗;橛ƀclo⸟⸡⸧ò⸁ash耻ø䃸l;折iŬⸯ⸴de耻õ䃵esĀ;aǛ⸺s;樶ml耻ö䃶bar;挽ૡ⹞\0⹽\0⺀⺝\0⺢⺹\0\0⻋ຜ\0⼓\0\0⼫⾼\0⿈rȀ;astЃ⹧⹲຅脀¶;l⹭⹮䂶leìЃɩ⹸\0\0⹻m;櫳;櫽y;䐿rʀcimpt⺋⺏⺓ᡥ⺗nt;䀥od;䀮il;怰enk;怱r;쀀𝔭ƀimo⺨⺰⺴Ā;v⺭⺮䏆;䏕maô੶ne;明ƀ;tv⺿⻀⻈䏀chfork»´;䏖Āau⻏⻟nĀck⻕⻝kĀ;h⇴⻛;愎ö⇴sҀ;abcdemst⻳⻴ᤈ⻹⻽⼄⼆⼊⼎䀫cir;樣ir;樢Āouᵀ⼂;樥;橲n肻±ຝim;樦wo;樧ƀipu⼙⼠⼥ntint;樕f;쀀𝕡nd耻£䂣Ԁ;Eaceinosu່⼿⽁⽄⽇⾁⾉⾒⽾⾶;檳p;檷uå໙Ā;c໎⽌̀;acens່⽙⽟⽦⽨⽾pproø⽃urlyeñ໙ñ໎ƀaes⽯⽶⽺pprox;檹qq;檵im;拨iíໟmeĀ;s⾈ຮ怲ƀEas⽸⾐⽺ð⽵ƀdfp໬⾙⾯ƀals⾠⾥⾪lar;挮ine;挒urf;挓Ā;t໻⾴ï໻rel;抰Āci⿀⿅r;쀀𝓅;䏈ncsp;怈̀fiopsu⿚⋢⿟⿥⿫⿱r;쀀𝔮pf;쀀𝕢rime;恗cr;쀀𝓆ƀaeo⿸〉〓tĀei⿾々rnionóڰnt;樖stĀ;e【】䀿ñἙô༔઀ABHabcdefhilmnoprstux぀けさすムㄎㄫㅇㅢㅲㆎ㈆㈕㈤㈩㉘㉮㉲㊐㊰㊷ƀartぇおがròႳòϝail;検aròᱥar;楤΀cdenqrtとふへみわゔヌĀeuねぱ;쀀∽̱te;䅕iãᅮmptyv;榳gȀ;del࿑らるろ;榒;榥å࿑uo耻»䂻rր;abcfhlpstw࿜ガクシスゼゾダッデナp;極Ā;f࿠ゴs;椠;椳s;椞ë≝ð✮l;楅im;楴l;憣;憝Āaiパフil;椚oĀ;nホボ戶aló༞ƀabrョリヮrò៥rk;杳ĀakンヽcĀekヹ・;䁽;䁝Āes㄂㄄;榌lĀduㄊㄌ;榎;榐Ȁaeuyㄗㄜㄧㄩron;䅙Ādiㄡㄥil;䅗ì࿲âヺ;䑀Ȁclqsㄴㄷㄽㅄa;椷dhar;楩uoĀ;rȎȍh;憳ƀacgㅎㅟངlȀ;ipsླྀㅘㅛႜnåႻarôྩt;断ƀilrㅩဣㅮsht;楽;쀀𝔯ĀaoㅷㆆrĀduㅽㅿ»ѻĀ;l႑ㆄ;楬Ā;vㆋㆌ䏁;䏱ƀgns㆕ㇹㇼht̀ahlrstㆤㆰ㇂㇘㇤㇮rrowĀ;t࿜ㆭaéトarpoonĀduㆻㆿowîㅾp»႒eftĀah㇊㇐rrowó࿪arpoonóՑightarrows;應quigarro÷ニhreetimes;拌g;䋚ingdotseñἲƀahm㈍㈐㈓rò࿪aòՑ;怏oustĀ;a㈞㈟掱che»㈟mid;櫮Ȁabpt㈲㈽㉀㉒Ānr㈷㈺g;柭r;懾rëဃƀafl㉇㉊㉎r;榆;쀀𝕣us;樮imes;樵Āap㉝㉧rĀ;g㉣㉤䀩t;榔olint;樒arò㇣Ȁachq㉻㊀Ⴜ㊅quo;怺r;쀀𝓇Ābu・㊊oĀ;rȔȓƀhir㊗㊛㊠reåㇸmes;拊iȀ;efl㊪ၙᠡ㊫方tri;槎luhar;楨;愞ൡ㋕㋛㋟㌬㌸㍱\0㍺㎤\0\0㏬㏰\0㐨㑈㑚㒭㒱㓊㓱\0㘖\0\0㘳cute;䅛quï➺Ԁ;Eaceinpsyᇭ㋳㋵㋿㌂㌋㌏㌟㌦㌩;檴ǰ㋺\0㋼;檸on;䅡uåᇾĀ;dᇳ㌇il;䅟rc;䅝ƀEas㌖㌘㌛;檶p;檺im;择olint;樓iíሄ;䑁otƀ;be㌴ᵇ㌵担;橦΀Aacmstx㍆㍊㍗㍛㍞㍣㍭rr;懘rĀhr㍐㍒ë∨Ā;oਸ਼਴t耻§䂧i;䀻war;椩mĀin㍩ðnuóñt;朶rĀ;o㍶⁕쀀𝔰Ȁacoy㎂㎆㎑㎠rp;景Āhy㎋㎏cy;䑉;䑈rtɭ㎙\0\0㎜iäᑤaraì⹯耻­䂭Āgm㎨㎴maƀ;fv㎱㎲㎲䏃;䏂Ѐ;deglnprካ㏅㏉㏎㏖㏞㏡㏦ot;橪Ā;q኱ኰĀ;E㏓㏔檞;檠Ā;E㏛㏜檝;檟e;扆lus;樤arr;楲aròᄽȀaeit㏸㐈㐏㐗Āls㏽㐄lsetmé㍪hp;樳parsl;槤Ādlᑣ㐔e;挣Ā;e㐜㐝檪Ā;s㐢㐣檬;쀀⪬︀ƀflp㐮㐳㑂tcy;䑌Ā;b㐸㐹䀯Ā;a㐾㐿槄r;挿f;쀀𝕤aĀdr㑍ЂesĀ;u㑔㑕晠it»㑕ƀcsu㑠㑹㒟Āau㑥㑯pĀ;sᆈ㑫;쀀⊓︀pĀ;sᆴ㑵;쀀⊔︀uĀbp㑿㒏ƀ;esᆗᆜ㒆etĀ;eᆗ㒍ñᆝƀ;esᆨᆭ㒖etĀ;eᆨ㒝ñᆮƀ;afᅻ㒦ְrť㒫ֱ»ᅼaròᅈȀcemt㒹㒾㓂㓅r;쀀𝓈tmîñiì㐕aræᆾĀar㓎㓕rĀ;f㓔ឿ昆Āan㓚㓭ightĀep㓣㓪psiloîỠhé⺯s»⡒ʀbcmnp㓻㕞ሉ㖋㖎Ҁ;Edemnprs㔎㔏㔑㔕㔞㔣㔬㔱㔶抂;櫅ot;檽Ā;dᇚ㔚ot;櫃ult;櫁ĀEe㔨㔪;櫋;把lus;檿arr;楹ƀeiu㔽㕒㕕tƀ;en㔎㕅㕋qĀ;qᇚ㔏eqĀ;q㔫㔨m;櫇Ābp㕚㕜;櫕;櫓c̀;acensᇭ㕬㕲㕹㕻㌦pproø㋺urlyeñᇾñᇳƀaes㖂㖈㌛pproø㌚qñ㌗g;晪ڀ123;Edehlmnps㖩㖬㖯ሜ㖲㖴㗀㗉㗕㗚㗟㗨㗭耻¹䂹耻²䂲耻³䂳;櫆Āos㖹㖼t;檾ub;櫘Ā;dሢ㗅ot;櫄sĀou㗏㗒l;柉b;櫗arr;楻ult;櫂ĀEe㗤㗦;櫌;抋lus;櫀ƀeiu㗴㘉㘌tƀ;enሜ㗼㘂qĀ;qሢ㖲eqĀ;q㗧㗤m;櫈Ābp㘑㘓;櫔;櫖ƀAan㘜㘠㘭rr;懙rĀhr㘦㘨ë∮Ā;oਫ਩war;椪lig耻ß䃟௡㙑㙝㙠ዎ㙳㙹\0㙾㛂\0\0\0\0\0㛛㜃\0㜉㝬\0\0\0㞇ɲ㙖\0\0㙛get;挖;䏄rë๟ƀaey㙦㙫㙰ron;䅥dil;䅣;䑂lrec;挕r;쀀𝔱Ȁeiko㚆㚝㚵㚼ǲ㚋\0㚑eĀ4fኄኁaƀ;sv㚘㚙㚛䎸ym;䏑Ācn㚢㚲kĀas㚨㚮pproø዁im»ኬsðኞĀas㚺㚮ð዁rn耻þ䃾Ǭ̟㛆⋧es膀×;bd㛏㛐㛘䃗Ā;aᤏ㛕r;樱;樰ƀeps㛡㛣㜀á⩍Ȁ;bcf҆㛬㛰㛴ot;挶ir;櫱Ā;o㛹㛼쀀𝕥rk;櫚á㍢rime;怴ƀaip㜏㜒㝤dåቈ΀adempst㜡㝍㝀㝑㝗㝜㝟ngleʀ;dlqr㜰㜱㜶㝀㝂斵own»ᶻeftĀ;e⠀㜾ñम;扜ightĀ;e㊪㝋ñၚot;旬inus;樺lus;樹b;槍ime;樻ezium;揢ƀcht㝲㝽㞁Āry㝷㝻;쀀𝓉;䑆cy;䑛rok;䅧Āio㞋㞎xô᝷headĀlr㞗㞠eftarro÷ࡏightarrow»ཝऀAHabcdfghlmoprstuw㟐㟓㟗㟤㟰㟼㠎㠜㠣㠴㡑㡝㡫㢩㣌㣒㣪㣶ròϭar;楣Ācr㟜㟢ute耻ú䃺òᅐrǣ㟪\0㟭y;䑞ve;䅭Āiy㟵㟺rc耻û䃻;䑃ƀabh㠃㠆㠋ròᎭlac;䅱aòᏃĀir㠓㠘sht;楾;쀀𝔲rave耻ù䃹š㠧㠱rĀlr㠬㠮»ॗ»ႃlk;斀Āct㠹㡍ɯ㠿\0\0㡊rnĀ;e㡅㡆挜r»㡆op;挏ri;旸Āal㡖㡚cr;䅫肻¨͉Āgp㡢㡦on;䅳f;쀀𝕦̀adhlsuᅋ㡸㡽፲㢑㢠ownáᎳarpoonĀlr㢈㢌efô㠭ighô㠯iƀ;hl㢙㢚㢜䏅»ᏺon»㢚parrows;懈ƀcit㢰㣄㣈ɯ㢶\0\0㣁rnĀ;e㢼㢽挝r»㢽op;挎ng;䅯ri;旹cr;쀀𝓊ƀdir㣙㣝㣢ot;拰lde;䅩iĀ;f㜰㣨»᠓Āam㣯㣲rò㢨l耻ü䃼angle;榧ހABDacdeflnoprsz㤜㤟㤩㤭㦵㦸㦽㧟㧤㧨㧳㧹㧽㨁㨠ròϷarĀ;v㤦㤧櫨;櫩asèϡĀnr㤲㤷grt;榜΀eknprst㓣㥆㥋㥒㥝㥤㦖appá␕othinçẖƀhir㓫⻈㥙opô⾵Ā;hᎷ㥢ïㆍĀiu㥩㥭gmá㎳Ābp㥲㦄setneqĀ;q㥽㦀쀀⊊︀;쀀⫋︀setneqĀ;q㦏㦒쀀⊋︀;쀀⫌︀Āhr㦛㦟etá㚜iangleĀlr㦪㦯eft»थight»ၑy;䐲ash»ံƀelr㧄㧒㧗ƀ;beⷪ㧋㧏ar;抻q;扚lip;拮Ābt㧜ᑨaòᑩr;쀀𝔳tré㦮suĀbp㧯㧱»ജ»൙pf;쀀𝕧roð໻tré㦴Ācu㨆㨋r;쀀𝓋Ābp㨐㨘nĀEe㦀㨖»㥾nĀEe㦒㨞»㦐igzag;榚΀cefoprs㨶㨻㩖㩛㩔㩡㩪irc;䅵Ādi㩀㩑Ābg㩅㩉ar;機eĀ;qᗺ㩏;扙erp;愘r;쀀𝔴pf;쀀𝕨Ā;eᑹ㩦atèᑹcr;쀀𝓌ૣណ㪇\0㪋\0㪐㪛\0\0㪝㪨㪫㪯\0\0㫃㫎\0㫘ៜ៟tré៑r;쀀𝔵ĀAa㪔㪗ròσrò৶;䎾ĀAa㪡㪤ròθrò৫að✓is;拻ƀdptឤ㪵㪾Āfl㪺ឩ;쀀𝕩imåឲĀAa㫇㫊ròώròਁĀcq㫒ីr;쀀𝓍Āpt៖㫜ré។Ѐacefiosu㫰㫽㬈㬌㬑㬕㬛㬡cĀuy㫶㫻te耻ý䃽;䑏Āiy㬂㬆rc;䅷;䑋n耻¥䂥r;쀀𝔶cy;䑗pf;쀀𝕪cr;쀀𝓎Ācm㬦㬩y;䑎l耻ÿ䃿Ԁacdefhiosw㭂㭈㭔㭘㭤㭩㭭㭴㭺㮀cute;䅺Āay㭍㭒ron;䅾;䐷ot;䅼Āet㭝㭡træᕟa;䎶r;쀀𝔷cy;䐶grarr;懝pf;쀀𝕫cr;쀀𝓏Ājn㮅㮇;怍j;怌'.split("").map(function(t){return t.charCodeAt(0)}))),dt}var ht={},Wa;function sF(){return Wa||(Wa=1,Object.defineProperty(ht,"__esModule",{value:!0}),ht.default=new Uint16Array("Ȁaglq	\x1Bɭ\0\0p;䀦os;䀧t;䀾t;䀼uot;䀢".split("").map(function(t){return t.charCodeAt(0)}))),ht}var ln={},Ka;function Xa(){return Ka||(Ka=1,function(t){var e;Object.defineProperty(t,"__esModule",{value:!0}),t.replaceCodePoint=t.fromCodePoint=void 0;var n=new Map([[0,65533],[128,8364],[130,8218],[131,402],[132,8222],[133,8230],[134,8224],[135,8225],[136,710],[137,8240],[138,352],[139,8249],[140,338],[142,381],[145,8216],[146,8217],[147,8220],[148,8221],[149,8226],[150,8211],[151,8212],[152,732],[153,8482],[154,353],[155,8250],[156,339],[158,382],[159,376]]);t.fromCodePoint=(e=String.fromCodePoint)!==null&&e!==void 0?e:function(r){var i="";return r>65535&&(r-=65536,i+=String.fromCharCode(r>>>10&1023|55296),r=56320|r&1023),i+=String.fromCharCode(r),i};function a(r){var i;return r>=55296&&r<=57343||r>1114111?65533:(i=n.get(r))!==null&&i!==void 0?i:r}t.replaceCodePoint=a;function s(r){return(0,t.fromCodePoint)(a(r))}t.default=s}(ln)),ln}var Za;function lr(){return Za||(Za=1,function(t){var e=q&&q.__createBinding||(Object.create?function(y,E,S,T){T===void 0&&(T=S);var P=Object.getOwnPropertyDescriptor(E,S);(!P||("get"in P?!E.__esModule:P.writable||P.configurable))&&(P={enumerable:!0,get:function(){return E[S]}}),Object.defineProperty(y,T,P)}:function(y,E,S,T){T===void 0&&(T=S),y[T]=E[S]}),n=q&&q.__setModuleDefault||(Object.create?function(y,E){Object.defineProperty(y,"default",{enumerable:!0,value:E})}:function(y,E){y.default=E}),a=q&&q.__importStar||function(y){if(y&&y.__esModule)return y;var E={};if(y!=null)for(var S in y)S!=="default"&&Object.prototype.hasOwnProperty.call(y,S)&&e(E,y,S);return n(E,y),E},s=q&&q.__importDefault||function(y){return y&&y.__esModule?y:{default:y}};Object.defineProperty(t,"__esModule",{value:!0}),t.decodeXML=t.decodeHTMLStrict=t.decodeHTMLAttribute=t.decodeHTML=t.determineBranch=t.EntityDecoder=t.DecodingMode=t.BinTrieFlags=t.fromCodePoint=t.replaceCodePoint=t.decodeCodePoint=t.xmlDecodeTree=t.htmlDecodeTree=void 0;var r=s(aF());t.htmlDecodeTree=r.default;var i=s(sF());t.xmlDecodeTree=i.default;var o=a(Xa());t.decodeCodePoint=o.default;var l=Xa();Object.defineProperty(t,"replaceCodePoint",{enumerable:!0,get:function(){return l.replaceCodePoint}}),Object.defineProperty(t,"fromCodePoint",{enumerable:!0,get:function(){return l.fromCodePoint}});var m;(function(y){y[y.NUM=35]="NUM",y[y.SEMI=59]="SEMI",y[y.EQUALS=61]="EQUALS",y[y.ZERO=48]="ZERO",y[y.NINE=57]="NINE",y[y.LOWER_A=97]="LOWER_A",y[y.LOWER_F=102]="LOWER_F",y[y.LOWER_X=120]="LOWER_X",y[y.LOWER_Z=122]="LOWER_Z",y[y.UPPER_A=65]="UPPER_A",y[y.UPPER_F=70]="UPPER_F",y[y.UPPER_Z=90]="UPPER_Z"})(m||(m={}));var g=32,p;(function(y){y[y.VALUE_LENGTH=49152]="VALUE_LENGTH",y[y.BRANCH_LENGTH=16256]="BRANCH_LENGTH",y[y.JUMP_TABLE=127]="JUMP_TABLE"})(p=t.BinTrieFlags||(t.BinTrieFlags={}));function u(y){return y>=m.ZERO&&y<=m.NINE}function c(y){return y>=m.UPPER_A&&y<=m.UPPER_F||y>=m.LOWER_A&&y<=m.LOWER_F}function k(y){return y>=m.UPPER_A&&y<=m.UPPER_Z||y>=m.LOWER_A&&y<=m.LOWER_Z||u(y)}function _(y){return y===m.EQUALS||k(y)}var x;(function(y){y[y.EntityStart=0]="EntityStart",y[y.NumericStart=1]="NumericStart",y[y.NumericDecimal=2]="NumericDecimal",y[y.NumericHex=3]="NumericHex",y[y.NamedEntity=4]="NamedEntity"})(x||(x={}));var f;(function(y){y[y.Legacy=0]="Legacy",y[y.Strict=1]="Strict",y[y.Attribute=2]="Attribute"})(f=t.DecodingMode||(t.DecodingMode={}));var b=function(){function y(E,S,T){this.decodeTree=E,this.emitCodePoint=S,this.errors=T,this.state=x.EntityStart,this.consumed=1,this.result=0,this.treeIndex=0,this.excess=1,this.decodeMode=f.Strict}return y.prototype.startEntity=function(E){this.decodeMode=E,this.state=x.EntityStart,this.result=0,this.treeIndex=0,this.excess=1,this.consumed=1},y.prototype.write=function(E,S){switch(this.state){case x.EntityStart:return E.charCodeAt(S)===m.NUM?(this.state=x.NumericStart,this.consumed+=1,this.stateNumericStart(E,S+1)):(this.state=x.NamedEntity,this.stateNamedEntity(E,S));case x.NumericStart:return this.stateNumericStart(E,S);case x.NumericDecimal:return this.stateNumericDecimal(E,S);case x.NumericHex:return this.stateNumericHex(E,S);case x.NamedEntity:return this.stateNamedEntity(E,S)}},y.prototype.stateNumericStart=function(E,S){return S>=E.length?-1:(E.charCodeAt(S)|g)===m.LOWER_X?(this.state=x.NumericHex,this.consumed+=1,this.stateNumericHex(E,S+1)):(this.state=x.NumericDecimal,this.stateNumericDecimal(E,S))},y.prototype.addToNumericResult=function(E,S,T,P){if(S!==T){var w=T-S;this.result=this.result*Math.pow(P,w)+parseInt(E.substr(S,w),P),this.consumed+=w}},y.prototype.stateNumericHex=function(E,S){for(var T=S;S<E.length;){var P=E.charCodeAt(S);if(u(P)||c(P))S+=1;else return this.addToNumericResult(E,T,S,16),this.emitNumericEntity(P,3)}return this.addToNumericResult(E,T,S,16),-1},y.prototype.stateNumericDecimal=function(E,S){for(var T=S;S<E.length;){var P=E.charCodeAt(S);if(u(P))S+=1;else return this.addToNumericResult(E,T,S,10),this.emitNumericEntity(P,2)}return this.addToNumericResult(E,T,S,10),-1},y.prototype.emitNumericEntity=function(E,S){var T;if(this.consumed<=S)return(T=this.errors)===null||T===void 0||T.absenceOfDigitsInNumericCharacterReference(this.consumed),0;if(E===m.SEMI)this.consumed+=1;else if(this.decodeMode===f.Strict)return 0;return this.emitCodePoint((0,o.replaceCodePoint)(this.result),this.consumed),this.errors&&(E!==m.SEMI&&this.errors.missingSemicolonAfterCharacterReference(),this.errors.validateNumericCharacterReference(this.result)),this.consumed},y.prototype.stateNamedEntity=function(E,S){for(var T=this.decodeTree,P=T[this.treeIndex],w=(P&p.VALUE_LENGTH)>>14;S<E.length;S++,this.excess++){var D=E.charCodeAt(S);if(this.treeIndex=v(T,P,this.treeIndex+Math.max(1,w),D),this.treeIndex<0)return this.result===0||this.decodeMode===f.Attribute&&(w===0||_(D))?0:this.emitNotTerminatedNamedEntity();if(P=T[this.treeIndex],w=(P&p.VALUE_LENGTH)>>14,w!==0){if(D===m.SEMI)return this.emitNamedEntityData(this.treeIndex,w,this.consumed+this.excess);this.decodeMode!==f.Strict&&(this.result=this.treeIndex,this.consumed+=this.excess,this.excess=0)}}return-1},y.prototype.emitNotTerminatedNamedEntity=function(){var E,S=this,T=S.result,P=S.decodeTree,w=(P[T]&p.VALUE_LENGTH)>>14;return this.emitNamedEntityData(T,w,this.consumed),(E=this.errors)===null||E===void 0||E.missingSemicolonAfterCharacterReference(),this.consumed},y.prototype.emitNamedEntityData=function(E,S,T){var P=this.decodeTree;return this.emitCodePoint(S===1?P[E]&~p.VALUE_LENGTH:P[E+1],T),S===3&&this.emitCodePoint(P[E+2],T),T},y.prototype.end=function(){var E;switch(this.state){case x.NamedEntity:return this.result!==0&&(this.decodeMode!==f.Attribute||this.result===this.treeIndex)?this.emitNotTerminatedNamedEntity():0;case x.NumericDecimal:return this.emitNumericEntity(0,2);case x.NumericHex:return this.emitNumericEntity(0,3);case x.NumericStart:return(E=this.errors)===null||E===void 0||E.absenceOfDigitsInNumericCharacterReference(this.consumed),0;case x.EntityStart:return 0}},y}();t.EntityDecoder=b;function h(y){var E="",S=new b(y,function(T){return E+=(0,o.fromCodePoint)(T)});return function(P,w){for(var D=0,M=0;(M=P.indexOf("&",M))>=0;){E+=P.slice(D,M),S.startEntity(w);var z=S.write(P,M+1);if(z<0){D=M+S.end();break}D=M+z,M=z===0?D+1:D}var H=E+P.slice(D);return E="",H}}function v(y,E,S,T){var P=(E&p.BRANCH_LENGTH)>>7,w=E&p.JUMP_TABLE;if(P===0)return w!==0&&T===w?S:-1;if(w){var D=T-w;return D<0||D>=P?-1:y[S+D]-1}for(var M=S,z=M+P-1;M<=z;){var H=M+z>>>1,Q=y[H];if(Q<T)M=H+1;else if(Q>T)z=H-1;else return y[H+P]}return-1}t.determineBranch=v;var d=h(r.default),L=h(i.default);function C(y,E){return E===void 0&&(E=f.Legacy),d(y,E)}t.decodeHTML=C;function A(y){return d(y,f.Attribute)}t.decodeHTMLAttribute=A;function I(y){return d(y,f.Strict)}t.decodeHTMLStrict=I;function R(y){return L(y,f.Strict)}t.decodeXML=R}(on)),on}var Ya;function ur(){return Ya||(Ya=1,function(t){Object.defineProperty(t,"__esModule",{value:!0}),t.QuoteType=void 0;var e=lr(),n;(function(u){u[u.Tab=9]="Tab",u[u.NewLine=10]="NewLine",u[u.FormFeed=12]="FormFeed",u[u.CarriageReturn=13]="CarriageReturn",u[u.Space=32]="Space",u[u.ExclamationMark=33]="ExclamationMark",u[u.Number=35]="Number",u[u.Amp=38]="Amp",u[u.SingleQuote=39]="SingleQuote",u[u.DoubleQuote=34]="DoubleQuote",u[u.Dash=45]="Dash",u[u.Slash=47]="Slash",u[u.Zero=48]="Zero",u[u.Nine=57]="Nine",u[u.Semi=59]="Semi",u[u.Lt=60]="Lt",u[u.Eq=61]="Eq",u[u.Gt=62]="Gt",u[u.Questionmark=63]="Questionmark",u[u.UpperA=65]="UpperA",u[u.LowerA=97]="LowerA",u[u.UpperF=70]="UpperF",u[u.LowerF=102]="LowerF",u[u.UpperZ=90]="UpperZ",u[u.LowerZ=122]="LowerZ",u[u.LowerX=120]="LowerX",u[u.OpeningSquareBracket=91]="OpeningSquareBracket"})(n||(n={}));var a;(function(u){u[u.Text=1]="Text",u[u.BeforeTagName=2]="BeforeTagName",u[u.InTagName=3]="InTagName",u[u.InSelfClosingTag=4]="InSelfClosingTag",u[u.BeforeClosingTagName=5]="BeforeClosingTagName",u[u.InClosingTagName=6]="InClosingTagName",u[u.AfterClosingTagName=7]="AfterClosingTagName",u[u.BeforeAttributeName=8]="BeforeAttributeName",u[u.InAttributeName=9]="InAttributeName",u[u.AfterAttributeName=10]="AfterAttributeName",u[u.BeforeAttributeValue=11]="BeforeAttributeValue",u[u.InAttributeValueDq=12]="InAttributeValueDq",u[u.InAttributeValueSq=13]="InAttributeValueSq",u[u.InAttributeValueNq=14]="InAttributeValueNq",u[u.BeforeDeclaration=15]="BeforeDeclaration",u[u.InDeclaration=16]="InDeclaration",u[u.InProcessingInstruction=17]="InProcessingInstruction",u[u.BeforeComment=18]="BeforeComment",u[u.CDATASequence=19]="CDATASequence",u[u.InSpecialComment=20]="InSpecialComment",u[u.InCommentLike=21]="InCommentLike",u[u.BeforeSpecialS=22]="BeforeSpecialS",u[u.SpecialStartSequence=23]="SpecialStartSequence",u[u.InSpecialTag=24]="InSpecialTag",u[u.BeforeEntity=25]="BeforeEntity",u[u.BeforeNumericEntity=26]="BeforeNumericEntity",u[u.InNamedEntity=27]="InNamedEntity",u[u.InNumericEntity=28]="InNumericEntity",u[u.InHexEntity=29]="InHexEntity"})(a||(a={}));function s(u){return u===n.Space||u===n.NewLine||u===n.Tab||u===n.FormFeed||u===n.CarriageReturn}function r(u){return u===n.Slash||u===n.Gt||s(u)}function i(u){return u>=n.Zero&&u<=n.Nine}function o(u){return u>=n.LowerA&&u<=n.LowerZ||u>=n.UpperA&&u<=n.UpperZ}function l(u){return u>=n.UpperA&&u<=n.UpperF||u>=n.LowerA&&u<=n.LowerF}var m;(function(u){u[u.NoValue=0]="NoValue",u[u.Unquoted=1]="Unquoted",u[u.Single=2]="Single",u[u.Double=3]="Double"})(m=t.QuoteType||(t.QuoteType={}));var g={Cdata:new Uint8Array([67,68,65,84,65,91]),CdataEnd:new Uint8Array([93,93,62]),CommentEnd:new Uint8Array([45,45,62]),ScriptEnd:new Uint8Array([60,47,115,99,114,105,112,116]),StyleEnd:new Uint8Array([60,47,115,116,121,108,101]),TitleEnd:new Uint8Array([60,47,116,105,116,108,101])},p=function(){function u(c,k){var _=c.xmlMode,x=_===void 0?!1:_,f=c.decodeEntities,b=f===void 0?!0:f;this.cbs=k,this.state=a.Text,this.buffer="",this.sectionStart=0,this.index=0,this.baseState=a.Text,this.isSpecial=!1,this.running=!0,this.offset=0,this.currentSequence=void 0,this.sequenceIndex=0,this.trieIndex=0,this.trieCurrent=0,this.entityResult=0,this.entityExcess=0,this.xmlMode=x,this.decodeEntities=b,this.entityTrie=x?e.xmlDecodeTree:e.htmlDecodeTree}return u.prototype.reset=function(){this.state=a.Text,this.buffer="",this.sectionStart=0,this.index=0,this.baseState=a.Text,this.currentSequence=void 0,this.running=!0,this.offset=0},u.prototype.write=function(c){this.offset+=this.buffer.length,this.buffer=c,this.parse()},u.prototype.end=function(){this.running&&this.finish()},u.prototype.pause=function(){this.running=!1},u.prototype.resume=function(){this.running=!0,this.index<this.buffer.length+this.offset&&this.parse()},u.prototype.getIndex=function(){return this.index},u.prototype.getSectionStart=function(){return this.sectionStart},u.prototype.stateText=function(c){c===n.Lt||!this.decodeEntities&&this.fastForwardTo(n.Lt)?(this.index>this.sectionStart&&this.cbs.ontext(this.sectionStart,this.index),this.state=a.BeforeTagName,this.sectionStart=this.index):this.decodeEntities&&c===n.Amp&&(this.state=a.BeforeEntity)},u.prototype.stateSpecialStartSequence=function(c){var k=this.sequenceIndex===this.currentSequence.length,_=k?r(c):(c|32)===this.currentSequence[this.sequenceIndex];if(!_)this.isSpecial=!1;else if(!k){this.sequenceIndex++;return}this.sequenceIndex=0,this.state=a.InTagName,this.stateInTagName(c)},u.prototype.stateInSpecialTag=function(c){if(this.sequenceIndex===this.currentSequence.length){if(c===n.Gt||s(c)){var k=this.index-this.currentSequence.length;if(this.sectionStart<k){var _=this.index;this.index=k,this.cbs.ontext(this.sectionStart,k),this.index=_}this.isSpecial=!1,this.sectionStart=k+2,this.stateInClosingTagName(c);return}this.sequenceIndex=0}(c|32)===this.currentSequence[this.sequenceIndex]?this.sequenceIndex+=1:this.sequenceIndex===0?this.currentSequence===g.TitleEnd?this.decodeEntities&&c===n.Amp&&(this.state=a.BeforeEntity):this.fastForwardTo(n.Lt)&&(this.sequenceIndex=1):this.sequenceIndex=Number(c===n.Lt)},u.prototype.stateCDATASequence=function(c){c===g.Cdata[this.sequenceIndex]?++this.sequenceIndex===g.Cdata.length&&(this.state=a.InCommentLike,this.currentSequence=g.CdataEnd,this.sequenceIndex=0,this.sectionStart=this.index+1):(this.sequenceIndex=0,this.state=a.InDeclaration,this.stateInDeclaration(c))},u.prototype.fastForwardTo=function(c){for(;++this.index<this.buffer.length+this.offset;)if(this.buffer.charCodeAt(this.index-this.offset)===c)return!0;return this.index=this.buffer.length+this.offset-1,!1},u.prototype.stateInCommentLike=function(c){c===this.currentSequence[this.sequenceIndex]?++this.sequenceIndex===this.currentSequence.length&&(this.currentSequence===g.CdataEnd?this.cbs.oncdata(this.sectionStart,this.index,2):this.cbs.oncomment(this.sectionStart,this.index,2),this.sequenceIndex=0,this.sectionStart=this.index+1,this.state=a.Text):this.sequenceIndex===0?this.fastForwardTo(this.currentSequence[0])&&(this.sequenceIndex=1):c!==this.currentSequence[this.sequenceIndex-1]&&(this.sequenceIndex=0)},u.prototype.isTagStartChar=function(c){return this.xmlMode?!r(c):o(c)},u.prototype.startSpecial=function(c,k){this.isSpecial=!0,this.currentSequence=c,this.sequenceIndex=k,this.state=a.SpecialStartSequence},u.prototype.stateBeforeTagName=function(c){if(c===n.ExclamationMark)this.state=a.BeforeDeclaration,this.sectionStart=this.index+1;else if(c===n.Questionmark)this.state=a.InProcessingInstruction,this.sectionStart=this.index+1;else if(this.isTagStartChar(c)){var k=c|32;this.sectionStart=this.index,!this.xmlMode&&k===g.TitleEnd[2]?this.startSpecial(g.TitleEnd,3):this.state=!this.xmlMode&&k===g.ScriptEnd[2]?a.BeforeSpecialS:a.InTagName}else c===n.Slash?this.state=a.BeforeClosingTagName:(this.state=a.Text,this.stateText(c))},u.prototype.stateInTagName=function(c){r(c)&&(this.cbs.onopentagname(this.sectionStart,this.index),this.sectionStart=-1,this.state=a.BeforeAttributeName,this.stateBeforeAttributeName(c))},u.prototype.stateBeforeClosingTagName=function(c){s(c)||(c===n.Gt?this.state=a.Text:(this.state=this.isTagStartChar(c)?a.InClosingTagName:a.InSpecialComment,this.sectionStart=this.index))},u.prototype.stateInClosingTagName=function(c){(c===n.Gt||s(c))&&(this.cbs.onclosetag(this.sectionStart,this.index),this.sectionStart=-1,this.state=a.AfterClosingTagName,this.stateAfterClosingTagName(c))},u.prototype.stateAfterClosingTagName=function(c){(c===n.Gt||this.fastForwardTo(n.Gt))&&(this.state=a.Text,this.baseState=a.Text,this.sectionStart=this.index+1)},u.prototype.stateBeforeAttributeName=function(c){c===n.Gt?(this.cbs.onopentagend(this.index),this.isSpecial?(this.state=a.InSpecialTag,this.sequenceIndex=0):this.state=a.Text,this.baseState=this.state,this.sectionStart=this.index+1):c===n.Slash?this.state=a.InSelfClosingTag:s(c)||(this.state=a.InAttributeName,this.sectionStart=this.index)},u.prototype.stateInSelfClosingTag=function(c){c===n.Gt?(this.cbs.onselfclosingtag(this.index),this.state=a.Text,this.baseState=a.Text,this.sectionStart=this.index+1,this.isSpecial=!1):s(c)||(this.state=a.BeforeAttributeName,this.stateBeforeAttributeName(c))},u.prototype.stateInAttributeName=function(c){(c===n.Eq||r(c))&&(this.cbs.onattribname(this.sectionStart,this.index),this.sectionStart=-1,this.state=a.AfterAttributeName,this.stateAfterAttributeName(c))},u.prototype.stateAfterAttributeName=function(c){c===n.Eq?this.state=a.BeforeAttributeValue:c===n.Slash||c===n.Gt?(this.cbs.onattribend(m.NoValue,this.index),this.state=a.BeforeAttributeName,this.stateBeforeAttributeName(c)):s(c)||(this.cbs.onattribend(m.NoValue,this.index),this.state=a.InAttributeName,this.sectionStart=this.index)},u.prototype.stateBeforeAttributeValue=function(c){c===n.DoubleQuote?(this.state=a.InAttributeValueDq,this.sectionStart=this.index+1):c===n.SingleQuote?(this.state=a.InAttributeValueSq,this.sectionStart=this.index+1):s(c)||(this.sectionStart=this.index,this.state=a.InAttributeValueNq,this.stateInAttributeValueNoQuotes(c))},u.prototype.handleInAttributeValue=function(c,k){c===k||!this.decodeEntities&&this.fastForwardTo(k)?(this.cbs.onattribdata(this.sectionStart,this.index),this.sectionStart=-1,this.cbs.onattribend(k===n.DoubleQuote?m.Double:m.Single,this.index),this.state=a.BeforeAttributeName):this.decodeEntities&&c===n.Amp&&(this.baseState=this.state,this.state=a.BeforeEntity)},u.prototype.stateInAttributeValueDoubleQuotes=function(c){this.handleInAttributeValue(c,n.DoubleQuote)},u.prototype.stateInAttributeValueSingleQuotes=function(c){this.handleInAttributeValue(c,n.SingleQuote)},u.prototype.stateInAttributeValueNoQuotes=function(c){s(c)||c===n.Gt?(this.cbs.onattribdata(this.sectionStart,this.index),this.sectionStart=-1,this.cbs.onattribend(m.Unquoted,this.index),this.state=a.BeforeAttributeName,this.stateBeforeAttributeName(c)):this.decodeEntities&&c===n.Amp&&(this.baseState=this.state,this.state=a.BeforeEntity)},u.prototype.stateBeforeDeclaration=function(c){c===n.OpeningSquareBracket?(this.state=a.CDATASequence,this.sequenceIndex=0):this.state=c===n.Dash?a.BeforeComment:a.InDeclaration},u.prototype.stateInDeclaration=function(c){(c===n.Gt||this.fastForwardTo(n.Gt))&&(this.cbs.ondeclaration(this.sectionStart,this.index),this.state=a.Text,this.sectionStart=this.index+1)},u.prototype.stateInProcessingInstruction=function(c){(c===n.Gt||this.fastForwardTo(n.Gt))&&(this.cbs.onprocessinginstruction(this.sectionStart,this.index),this.state=a.Text,this.sectionStart=this.index+1)},u.prototype.stateBeforeComment=function(c){c===n.Dash?(this.state=a.InCommentLike,this.currentSequence=g.CommentEnd,this.sequenceIndex=2,this.sectionStart=this.index+1):this.state=a.InDeclaration},u.prototype.stateInSpecialComment=function(c){(c===n.Gt||this.fastForwardTo(n.Gt))&&(this.cbs.oncomment(this.sectionStart,this.index,0),this.state=a.Text,this.sectionStart=this.index+1)},u.prototype.stateBeforeSpecialS=function(c){var k=c|32;k===g.ScriptEnd[3]?this.startSpecial(g.ScriptEnd,4):k===g.StyleEnd[3]?this.startSpecial(g.StyleEnd,4):(this.state=a.InTagName,this.stateInTagName(c))},u.prototype.stateBeforeEntity=function(c){this.entityExcess=1,this.entityResult=0,c===n.Number?this.state=a.BeforeNumericEntity:c===n.Amp||(this.trieIndex=0,this.trieCurrent=this.entityTrie[0],this.state=a.InNamedEntity,this.stateInNamedEntity(c))},u.prototype.stateInNamedEntity=function(c){if(this.entityExcess+=1,this.trieIndex=(0,e.determineBranch)(this.entityTrie,this.trieCurrent,this.trieIndex+1,c),this.trieIndex<0){this.emitNamedEntity(),this.index--;return}this.trieCurrent=this.entityTrie[this.trieIndex];var k=this.trieCurrent&e.BinTrieFlags.VALUE_LENGTH;if(k){var _=(k>>14)-1;if(!this.allowLegacyEntity()&&c!==n.Semi)this.trieIndex+=_;else{var x=this.index-this.entityExcess+1;x>this.sectionStart&&this.emitPartial(this.sectionStart,x),this.entityResult=this.trieIndex,this.trieIndex+=_,this.entityExcess=0,this.sectionStart=this.index+1,_===0&&this.emitNamedEntity()}}},u.prototype.emitNamedEntity=function(){if(this.state=this.baseState,this.entityResult!==0){var c=(this.entityTrie[this.entityResult]&e.BinTrieFlags.VALUE_LENGTH)>>14;switch(c){case 1:{this.emitCodePoint(this.entityTrie[this.entityResult]&~e.BinTrieFlags.VALUE_LENGTH);break}case 2:{this.emitCodePoint(this.entityTrie[this.entityResult+1]);break}case 3:this.emitCodePoint(this.entityTrie[this.entityResult+1]),this.emitCodePoint(this.entityTrie[this.entityResult+2])}}},u.prototype.stateBeforeNumericEntity=function(c){(c|32)===n.LowerX?(this.entityExcess++,this.state=a.InHexEntity):(this.state=a.InNumericEntity,this.stateInNumericEntity(c))},u.prototype.emitNumericEntity=function(c){var k=this.index-this.entityExcess-1,_=k+2+Number(this.state===a.InHexEntity);_!==this.index&&(k>this.sectionStart&&this.emitPartial(this.sectionStart,k),this.sectionStart=this.index+Number(c),this.emitCodePoint((0,e.replaceCodePoint)(this.entityResult))),this.state=this.baseState},u.prototype.stateInNumericEntity=function(c){c===n.Semi?this.emitNumericEntity(!0):i(c)?(this.entityResult=this.entityResult*10+(c-n.Zero),this.entityExcess++):(this.allowLegacyEntity()?this.emitNumericEntity(!1):this.state=this.baseState,this.index--)},u.prototype.stateInHexEntity=function(c){c===n.Semi?this.emitNumericEntity(!0):i(c)?(this.entityResult=this.entityResult*16+(c-n.Zero),this.entityExcess++):l(c)?(this.entityResult=this.entityResult*16+((c|32)-n.LowerA+10),this.entityExcess++):(this.allowLegacyEntity()?this.emitNumericEntity(!1):this.state=this.baseState,this.index--)},u.prototype.allowLegacyEntity=function(){return!this.xmlMode&&(this.baseState===a.Text||this.baseState===a.InSpecialTag)},u.prototype.cleanup=function(){this.running&&this.sectionStart!==this.index&&(this.state===a.Text||this.state===a.InSpecialTag&&this.sequenceIndex===0?(this.cbs.ontext(this.sectionStart,this.index),this.sectionStart=this.index):(this.state===a.InAttributeValueDq||this.state===a.InAttributeValueSq||this.state===a.InAttributeValueNq)&&(this.cbs.onattribdata(this.sectionStart,this.index),this.sectionStart=this.index))},u.prototype.shouldContinue=function(){return this.index<this.buffer.length+this.offset&&this.running},u.prototype.parse=function(){for(;this.shouldContinue();){var c=this.buffer.charCodeAt(this.index-this.offset);switch(this.state){case a.Text:{this.stateText(c);break}case a.SpecialStartSequence:{this.stateSpecialStartSequence(c);break}case a.InSpecialTag:{this.stateInSpecialTag(c);break}case a.CDATASequence:{this.stateCDATASequence(c);break}case a.InAttributeValueDq:{this.stateInAttributeValueDoubleQuotes(c);break}case a.InAttributeName:{this.stateInAttributeName(c);break}case a.InCommentLike:{this.stateInCommentLike(c);break}case a.InSpecialComment:{this.stateInSpecialComment(c);break}case a.BeforeAttributeName:{this.stateBeforeAttributeName(c);break}case a.InTagName:{this.stateInTagName(c);break}case a.InClosingTagName:{this.stateInClosingTagName(c);break}case a.BeforeTagName:{this.stateBeforeTagName(c);break}case a.AfterAttributeName:{this.stateAfterAttributeName(c);break}case a.InAttributeValueSq:{this.stateInAttributeValueSingleQuotes(c);break}case a.BeforeAttributeValue:{this.stateBeforeAttributeValue(c);break}case a.BeforeClosingTagName:{this.stateBeforeClosingTagName(c);break}case a.AfterClosingTagName:{this.stateAfterClosingTagName(c);break}case a.BeforeSpecialS:{this.stateBeforeSpecialS(c);break}case a.InAttributeValueNq:{this.stateInAttributeValueNoQuotes(c);break}case a.InSelfClosingTag:{this.stateInSelfClosingTag(c);break}case a.InDeclaration:{this.stateInDeclaration(c);break}case a.BeforeDeclaration:{this.stateBeforeDeclaration(c);break}case a.BeforeComment:{this.stateBeforeComment(c);break}case a.InProcessingInstruction:{this.stateInProcessingInstruction(c);break}case a.InNamedEntity:{this.stateInNamedEntity(c);break}case a.BeforeEntity:{this.stateBeforeEntity(c);break}case a.InHexEntity:{this.stateInHexEntity(c);break}case a.InNumericEntity:{this.stateInNumericEntity(c);break}default:this.stateBeforeNumericEntity(c)}this.index++}this.cleanup()},u.prototype.finish=function(){this.state===a.InNamedEntity&&this.emitNamedEntity(),this.sectionStart<this.index&&this.handleTrailingData(),this.cbs.onend()},u.prototype.handleTrailingData=function(){var c=this.buffer.length+this.offset;this.state===a.InCommentLike?this.currentSequence===g.CdataEnd?this.cbs.oncdata(this.sectionStart,c,0):this.cbs.oncomment(this.sectionStart,c,0):this.state===a.InNumericEntity&&this.allowLegacyEntity()?this.emitNumericEntity(!1):this.state===a.InHexEntity&&this.allowLegacyEntity()?this.emitNumericEntity(!1):this.state===a.InTagName||this.state===a.BeforeAttributeName||this.state===a.BeforeAttributeValue||this.state===a.AfterAttributeName||this.state===a.InAttributeName||this.state===a.InAttributeValueSq||this.state===a.InAttributeValueDq||this.state===a.InAttributeValueNq||this.state===a.InClosingTagName||this.cbs.ontext(this.sectionStart,c)},u.prototype.emitPartial=function(c,k){this.baseState!==a.Text&&this.baseState!==a.InSpecialTag?this.cbs.onattribdata(c,k):this.cbs.ontext(c,k)},u.prototype.emitCodePoint=function(c){this.baseState!==a.Text&&this.baseState!==a.InSpecialTag?this.cbs.onattribentity(c):this.cbs.ontextentity(c)},u}();t.default=p}(rn)),rn}var Qa;function Ja(){if(Qa)return at;Qa=1;var t=q&&q.__createBinding||(Object.create?function(x,f,b,h){h===void 0&&(h=b);var v=Object.getOwnPropertyDescriptor(f,b);(!v||("get"in v?!f.__esModule:v.writable||v.configurable))&&(v={enumerable:!0,get:function(){return f[b]}}),Object.defineProperty(x,h,v)}:function(x,f,b,h){h===void 0&&(h=b),x[h]=f[b]}),e=q&&q.__setModuleDefault||(Object.create?function(x,f){Object.defineProperty(x,"default",{enumerable:!0,value:f})}:function(x,f){x.default=f}),n=q&&q.__importStar||function(x){if(x&&x.__esModule)return x;var f={};if(x!=null)for(var b in x)b!=="default"&&Object.prototype.hasOwnProperty.call(x,b)&&t(f,x,b);return e(f,x),f};Object.defineProperty(at,"__esModule",{value:!0}),at.Parser=void 0;var a=n(ur()),s=lr(),r=new Set(["input","option","optgroup","select","button","datalist","textarea"]),i=new Set(["p"]),o=new Set(["thead","tbody"]),l=new Set(["dd","dt"]),m=new Set(["rt","rp"]),g=new Map([["tr",new Set(["tr","th","td"])],["th",new Set(["th"])],["td",new Set(["thead","th","td"])],["body",new Set(["head","link","script"])],["li",new Set(["li"])],["p",i],["h1",i],["h2",i],["h3",i],["h4",i],["h5",i],["h6",i],["select",r],["input",r],["output",r],["button",r],["datalist",r],["textarea",r],["option",new Set(["option"])],["optgroup",new Set(["optgroup","option"])],["dd",l],["dt",l],["address",i],["article",i],["aside",i],["blockquote",i],["details",i],["div",i],["dl",i],["fieldset",i],["figcaption",i],["figure",i],["footer",i],["form",i],["header",i],["hr",i],["main",i],["nav",i],["ol",i],["pre",i],["section",i],["table",i],["ul",i],["rt",m],["rp",m],["tbody",o],["tfoot",o]]),p=new Set(["area","base","basefont","br","col","command","embed","frame","hr","img","input","isindex","keygen","link","meta","param","source","track","wbr"]),u=new Set(["math","svg"]),c=new Set(["mi","mo","mn","ms","mtext","annotation-xml","foreignobject","desc","title"]),k=/\s|\//,_=function(){function x(f,b){b===void 0&&(b={});var h,v,d,L,C;this.options=b,this.startIndex=0,this.endIndex=0,this.openTagStart=0,this.tagname="",this.attribname="",this.attribvalue="",this.attribs=null,this.stack=[],this.foreignContext=[],this.buffers=[],this.bufferOffset=0,this.writeIndex=0,this.ended=!1,this.cbs=f??{},this.lowerCaseTagNames=(h=b.lowerCaseTags)!==null&&h!==void 0?h:!b.xmlMode,this.lowerCaseAttributeNames=(v=b.lowerCaseAttributeNames)!==null&&v!==void 0?v:!b.xmlMode,this.tokenizer=new((d=b.Tokenizer)!==null&&d!==void 0?d:a.default)(this.options,this),(C=(L=this.cbs).onparserinit)===null||C===void 0||C.call(L,this)}return x.prototype.ontext=function(f,b){var h,v,d=this.getSlice(f,b);this.endIndex=b-1,(v=(h=this.cbs).ontext)===null||v===void 0||v.call(h,d),this.startIndex=b},x.prototype.ontextentity=function(f){var b,h,v=this.tokenizer.getSectionStart();this.endIndex=v-1,(h=(b=this.cbs).ontext)===null||h===void 0||h.call(b,(0,s.fromCodePoint)(f)),this.startIndex=v},x.prototype.isVoidElement=function(f){return!this.options.xmlMode&&p.has(f)},x.prototype.onopentagname=function(f,b){this.endIndex=b;var h=this.getSlice(f,b);this.lowerCaseTagNames&&(h=h.toLowerCase()),this.emitOpenTag(h)},x.prototype.emitOpenTag=function(f){var b,h,v,d;this.openTagStart=this.startIndex,this.tagname=f;var L=!this.options.xmlMode&&g.get(f);if(L)for(;this.stack.length>0&&L.has(this.stack[this.stack.length-1]);){var C=this.stack.pop();(h=(b=this.cbs).onclosetag)===null||h===void 0||h.call(b,C,!0)}this.isVoidElement(f)||(this.stack.push(f),u.has(f)?this.foreignContext.push(!0):c.has(f)&&this.foreignContext.push(!1)),(d=(v=this.cbs).onopentagname)===null||d===void 0||d.call(v,f),this.cbs.onopentag&&(this.attribs={})},x.prototype.endOpenTag=function(f){var b,h;this.startIndex=this.openTagStart,this.attribs&&((h=(b=this.cbs).onopentag)===null||h===void 0||h.call(b,this.tagname,this.attribs,f),this.attribs=null),this.cbs.onclosetag&&this.isVoidElement(this.tagname)&&this.cbs.onclosetag(this.tagname,!0),this.tagname=""},x.prototype.onopentagend=function(f){this.endIndex=f,this.endOpenTag(!1),this.startIndex=f+1},x.prototype.onclosetag=function(f,b){var h,v,d,L,C,A;this.endIndex=b;var I=this.getSlice(f,b);if(this.lowerCaseTagNames&&(I=I.toLowerCase()),(u.has(I)||c.has(I))&&this.foreignContext.pop(),this.isVoidElement(I))!this.options.xmlMode&&I==="br"&&((v=(h=this.cbs).onopentagname)===null||v===void 0||v.call(h,"br"),(L=(d=this.cbs).onopentag)===null||L===void 0||L.call(d,"br",{},!0),(A=(C=this.cbs).onclosetag)===null||A===void 0||A.call(C,"br",!1));else{var R=this.stack.lastIndexOf(I);if(R!==-1)if(this.cbs.onclosetag)for(var y=this.stack.length-R;y--;)this.cbs.onclosetag(this.stack.pop(),y!==0);else this.stack.length=R;else!this.options.xmlMode&&I==="p"&&(this.emitOpenTag("p"),this.closeCurrentTag(!0))}this.startIndex=b+1},x.prototype.onselfclosingtag=function(f){this.endIndex=f,this.options.xmlMode||this.options.recognizeSelfClosing||this.foreignContext[this.foreignContext.length-1]?(this.closeCurrentTag(!1),this.startIndex=f+1):this.onopentagend(f)},x.prototype.closeCurrentTag=function(f){var b,h,v=this.tagname;this.endOpenTag(f),this.stack[this.stack.length-1]===v&&((h=(b=this.cbs).onclosetag)===null||h===void 0||h.call(b,v,!f),this.stack.pop())},x.prototype.onattribname=function(f,b){this.startIndex=f;var h=this.getSlice(f,b);this.attribname=this.lowerCaseAttributeNames?h.toLowerCase():h},x.prototype.onattribdata=function(f,b){this.attribvalue+=this.getSlice(f,b)},x.prototype.onattribentity=function(f){this.attribvalue+=(0,s.fromCodePoint)(f)},x.prototype.onattribend=function(f,b){var h,v;this.endIndex=b,(v=(h=this.cbs).onattribute)===null||v===void 0||v.call(h,this.attribname,this.attribvalue,f===a.QuoteType.Double?'"':f===a.QuoteType.Single?"'":f===a.QuoteType.NoValue?void 0:null),this.attribs&&!Object.prototype.hasOwnProperty.call(this.attribs,this.attribname)&&(this.attribs[this.attribname]=this.attribvalue),this.attribvalue=""},x.prototype.getInstructionName=function(f){var b=f.search(k),h=b<0?f:f.substr(0,b);return this.lowerCaseTagNames&&(h=h.toLowerCase()),h},x.prototype.ondeclaration=function(f,b){this.endIndex=b;var h=this.getSlice(f,b);if(this.cbs.onprocessinginstruction){var v=this.getInstructionName(h);this.cbs.onprocessinginstruction("!".concat(v),"!".concat(h))}this.startIndex=b+1},x.prototype.onprocessinginstruction=function(f,b){this.endIndex=b;var h=this.getSlice(f,b);if(this.cbs.onprocessinginstruction){var v=this.getInstructionName(h);this.cbs.onprocessinginstruction("?".concat(v),"?".concat(h))}this.startIndex=b+1},x.prototype.oncomment=function(f,b,h){var v,d,L,C;this.endIndex=b,(d=(v=this.cbs).oncomment)===null||d===void 0||d.call(v,this.getSlice(f,b-h)),(C=(L=this.cbs).oncommentend)===null||C===void 0||C.call(L),this.startIndex=b+1},x.prototype.oncdata=function(f,b,h){var v,d,L,C,A,I,R,y,E,S;this.endIndex=b;var T=this.getSlice(f,b-h);this.options.xmlMode||this.options.recognizeCDATA?((d=(v=this.cbs).oncdatastart)===null||d===void 0||d.call(v),(C=(L=this.cbs).ontext)===null||C===void 0||C.call(L,T),(I=(A=this.cbs).oncdataend)===null||I===void 0||I.call(A)):((y=(R=this.cbs).oncomment)===null||y===void 0||y.call(R,"[CDATA[".concat(T,"]]")),(S=(E=this.cbs).oncommentend)===null||S===void 0||S.call(E)),this.startIndex=b+1},x.prototype.onend=function(){var f,b;if(this.cbs.onclosetag){this.endIndex=this.startIndex;for(var h=this.stack.length;h>0;this.cbs.onclosetag(this.stack[--h],!0));}(b=(f=this.cbs).onend)===null||b===void 0||b.call(f)},x.prototype.reset=function(){var f,b,h,v;(b=(f=this.cbs).onreset)===null||b===void 0||b.call(f),this.tokenizer.reset(),this.tagname="",this.attribname="",this.attribs=null,this.stack.length=0,this.startIndex=0,this.endIndex=0,(v=(h=this.cbs).onparserinit)===null||v===void 0||v.call(h,this),this.buffers.length=0,this.bufferOffset=0,this.writeIndex=0,this.ended=!1},x.prototype.parseComplete=function(f){this.reset(),this.end(f)},x.prototype.getSlice=function(f,b){for(;f-this.bufferOffset>=this.buffers[0].length;)this.shiftBuffer();for(var h=this.buffers[0].slice(f-this.bufferOffset,b-this.bufferOffset);b-this.bufferOffset>this.buffers[0].length;)this.shiftBuffer(),h+=this.buffers[0].slice(0,b-this.bufferOffset);return h},x.prototype.shiftBuffer=function(){this.bufferOffset+=this.buffers[0].length,this.writeIndex--,this.buffers.shift()},x.prototype.write=function(f){var b,h;if(this.ended){(h=(b=this.cbs).onerror)===null||h===void 0||h.call(b,new Error(".write() after done!"));return}this.buffers.push(f),this.tokenizer.running&&(this.tokenizer.write(f),this.writeIndex++)},x.prototype.end=function(f){var b,h;if(this.ended){(h=(b=this.cbs).onerror)===null||h===void 0||h.call(b,new Error(".end() after done!"));return}f&&this.write(f),this.ended=!0,this.tokenizer.end()},x.prototype.pause=function(){this.tokenizer.pause()},x.prototype.resume=function(){for(this.tokenizer.resume();this.tokenizer.running&&this.writeIndex<this.buffers.length;)this.tokenizer.write(this.buffers[this.writeIndex++]);this.ended&&this.tokenizer.end()},x.prototype.parseChunk=function(f){this.write(f)},x.prototype.done=function(f){this.end(f)},x}();return at.Parser=_,at}var un={},mn={},es;function ct(){return es||(es=1,function(t){Object.defineProperty(t,"__esModule",{value:!0}),t.Doctype=t.CDATA=t.Tag=t.Style=t.Script=t.Comment=t.Directive=t.Text=t.Root=t.isTag=t.ElementType=void 0;var e;(function(a){a.Root="root",a.Text="text",a.Directive="directive",a.Comment="comment",a.Script="script",a.Style="style",a.Tag="tag",a.CDATA="cdata",a.Doctype="doctype"})(e=t.ElementType||(t.ElementType={}));function n(a){return a.type===e.Tag||a.type===e.Script||a.type===e.Style}t.isTag=n,t.Root=e.Root,t.Text=e.Text,t.Directive=e.Directive,t.Comment=e.Comment,t.Script=e.Script,t.Style=e.Style,t.Tag=e.Tag,t.CDATA=e.CDATA,t.Doctype=e.Doctype}(mn)),mn}var W={},ts;function ns(){if(ts)return W;ts=1;var t=q&&q.__extends||function(){var d=function(L,C){return d=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(A,I){A.__proto__=I}||function(A,I){for(var R in I)Object.prototype.hasOwnProperty.call(I,R)&&(A[R]=I[R])},d(L,C)};return function(L,C){if(typeof C!="function"&&C!==null)throw new TypeError("Class extends value "+String(C)+" is not a constructor or null");d(L,C);function A(){this.constructor=L}L.prototype=C===null?Object.create(C):(A.prototype=C.prototype,new A)}}(),e=q&&q.__assign||function(){return e=Object.assign||function(d){for(var L,C=1,A=arguments.length;C<A;C++){L=arguments[C];for(var I in L)Object.prototype.hasOwnProperty.call(L,I)&&(d[I]=L[I])}return d},e.apply(this,arguments)};Object.defineProperty(W,"__esModule",{value:!0}),W.cloneNode=W.hasChildren=W.isDocument=W.isDirective=W.isComment=W.isText=W.isCDATA=W.isTag=W.Element=W.Document=W.CDATA=W.NodeWithChildren=W.ProcessingInstruction=W.Comment=W.Text=W.DataNode=W.Node=void 0;var n=ct(),a=function(){function d(){this.parent=null,this.prev=null,this.next=null,this.startIndex=null,this.endIndex=null}return Object.defineProperty(d.prototype,"parentNode",{get:function(){return this.parent},set:function(L){this.parent=L},enumerable:!1,configurable:!0}),Object.defineProperty(d.prototype,"previousSibling",{get:function(){return this.prev},set:function(L){this.prev=L},enumerable:!1,configurable:!0}),Object.defineProperty(d.prototype,"nextSibling",{get:function(){return this.next},set:function(L){this.next=L},enumerable:!1,configurable:!0}),d.prototype.cloneNode=function(L){return L===void 0&&(L=!1),h(this,L)},d}();W.Node=a;var s=function(d){t(L,d);function L(C){var A=d.call(this)||this;return A.data=C,A}return Object.defineProperty(L.prototype,"nodeValue",{get:function(){return this.data},set:function(C){this.data=C},enumerable:!1,configurable:!0}),L}(a);W.DataNode=s;var r=function(d){t(L,d);function L(){var C=d!==null&&d.apply(this,arguments)||this;return C.type=n.ElementType.Text,C}return Object.defineProperty(L.prototype,"nodeType",{get:function(){return 3},enumerable:!1,configurable:!0}),L}(s);W.Text=r;var i=function(d){t(L,d);function L(){var C=d!==null&&d.apply(this,arguments)||this;return C.type=n.ElementType.Comment,C}return Object.defineProperty(L.prototype,"nodeType",{get:function(){return 8},enumerable:!1,configurable:!0}),L}(s);W.Comment=i;var o=function(d){t(L,d);function L(C,A){var I=d.call(this,A)||this;return I.name=C,I.type=n.ElementType.Directive,I}return Object.defineProperty(L.prototype,"nodeType",{get:function(){return 1},enumerable:!1,configurable:!0}),L}(s);W.ProcessingInstruction=o;var l=function(d){t(L,d);function L(C){var A=d.call(this)||this;return A.children=C,A}return Object.defineProperty(L.prototype,"firstChild",{get:function(){var C;return(C=this.children[0])!==null&&C!==void 0?C:null},enumerable:!1,configurable:!0}),Object.defineProperty(L.prototype,"lastChild",{get:function(){return this.children.length>0?this.children[this.children.length-1]:null},enumerable:!1,configurable:!0}),Object.defineProperty(L.prototype,"childNodes",{get:function(){return this.children},set:function(C){this.children=C},enumerable:!1,configurable:!0}),L}(a);W.NodeWithChildren=l;var m=function(d){t(L,d);function L(){var C=d!==null&&d.apply(this,arguments)||this;return C.type=n.ElementType.CDATA,C}return Object.defineProperty(L.prototype,"nodeType",{get:function(){return 4},enumerable:!1,configurable:!0}),L}(l);W.CDATA=m;var g=function(d){t(L,d);function L(){var C=d!==null&&d.apply(this,arguments)||this;return C.type=n.ElementType.Root,C}return Object.defineProperty(L.prototype,"nodeType",{get:function(){return 9},enumerable:!1,configurable:!0}),L}(l);W.Document=g;var p=function(d){t(L,d);function L(C,A,I,R){I===void 0&&(I=[]),R===void 0&&(R=C==="script"?n.ElementType.Script:C==="style"?n.ElementType.Style:n.ElementType.Tag);var y=d.call(this,I)||this;return y.name=C,y.attribs=A,y.type=R,y}return Object.defineProperty(L.prototype,"nodeType",{get:function(){return 1},enumerable:!1,configurable:!0}),Object.defineProperty(L.prototype,"tagName",{get:function(){return this.name},set:function(C){this.name=C},enumerable:!1,configurable:!0}),Object.defineProperty(L.prototype,"attributes",{get:function(){var C=this;return Object.keys(this.attribs).map(function(A){var I,R;return{name:A,value:C.attribs[A],namespace:(I=C["x-attribsNamespace"])===null||I===void 0?void 0:I[A],prefix:(R=C["x-attribsPrefix"])===null||R===void 0?void 0:R[A]}})},enumerable:!1,configurable:!0}),L}(l);W.Element=p;function u(d){return(0,n.isTag)(d)}W.isTag=u;function c(d){return d.type===n.ElementType.CDATA}W.isCDATA=c;function k(d){return d.type===n.ElementType.Text}W.isText=k;function _(d){return d.type===n.ElementType.Comment}W.isComment=_;function x(d){return d.type===n.ElementType.Directive}W.isDirective=x;function f(d){return d.type===n.ElementType.Root}W.isDocument=f;function b(d){return Object.prototype.hasOwnProperty.call(d,"children")}W.hasChildren=b;function h(d,L){L===void 0&&(L=!1);var C;if(k(d))C=new r(d.data);else if(_(d))C=new i(d.data);else if(u(d)){var A=L?v(d.children):[],I=new p(d.name,e({},d.attribs),A);A.forEach(function(S){return S.parent=I}),d.namespace!=null&&(I.namespace=d.namespace),d["x-attribsNamespace"]&&(I["x-attribsNamespace"]=e({},d["x-attribsNamespace"])),d["x-attribsPrefix"]&&(I["x-attribsPrefix"]=e({},d["x-attribsPrefix"])),C=I}else if(c(d)){var A=L?v(d.children):[],R=new m(A);A.forEach(function(T){return T.parent=R}),C=R}else if(f(d)){var A=L?v(d.children):[],y=new g(A);A.forEach(function(T){return T.parent=y}),d["x-mode"]&&(y["x-mode"]=d["x-mode"]),C=y}else if(x(d)){var E=new o(d.name,d.data);d["x-name"]!=null&&(E["x-name"]=d["x-name"],E["x-publicId"]=d["x-publicId"],E["x-systemId"]=d["x-systemId"]),C=E}else throw new Error("Not implemented yet: ".concat(d.type));return C.startIndex=d.startIndex,C.endIndex=d.endIndex,d.sourceCodeLocation!=null&&(C.sourceCodeLocation=d.sourceCodeLocation),C}W.cloneNode=h;function v(d){for(var L=d.map(function(A){return h(A,!0)}),C=1;C<L.length;C++)L[C].prev=L[C-1],L[C-1].next=L[C];return L}return W}var as;function Ge(){return as||(as=1,function(t){var e=q&&q.__createBinding||(Object.create?function(o,l,m,g){g===void 0&&(g=m);var p=Object.getOwnPropertyDescriptor(l,m);(!p||("get"in p?!l.__esModule:p.writable||p.configurable))&&(p={enumerable:!0,get:function(){return l[m]}}),Object.defineProperty(o,g,p)}:function(o,l,m,g){g===void 0&&(g=m),o[g]=l[m]}),n=q&&q.__exportStar||function(o,l){for(var m in o)m!=="default"&&!Object.prototype.hasOwnProperty.call(l,m)&&e(l,o,m)};Object.defineProperty(t,"__esModule",{value:!0}),t.DomHandler=void 0;var a=ct(),s=ns();n(ns(),t);var r={withStartIndices:!1,withEndIndices:!1,xmlMode:!1},i=function(){function o(l,m,g){this.dom=[],this.root=new s.Document(this.dom),this.done=!1,this.tagStack=[this.root],this.lastNode=null,this.parser=null,typeof m=="function"&&(g=m,m=r),typeof l=="object"&&(m=l,l=void 0),this.callback=l??null,this.options=m??r,this.elementCB=g??null}return o.prototype.onparserinit=function(l){this.parser=l},o.prototype.onreset=function(){this.dom=[],this.root=new s.Document(this.dom),this.done=!1,this.tagStack=[this.root],this.lastNode=null,this.parser=null},o.prototype.onend=function(){this.done||(this.done=!0,this.parser=null,this.handleCallback(null))},o.prototype.onerror=function(l){this.handleCallback(l)},o.prototype.onclosetag=function(){this.lastNode=null;var l=this.tagStack.pop();this.options.withEndIndices&&(l.endIndex=this.parser.endIndex),this.elementCB&&this.elementCB(l)},o.prototype.onopentag=function(l,m){var g=this.options.xmlMode?a.ElementType.Tag:void 0,p=new s.Element(l,m,void 0,g);this.addNode(p),this.tagStack.push(p)},o.prototype.ontext=function(l){var m=this.lastNode;if(m&&m.type===a.ElementType.Text)m.data+=l,this.options.withEndIndices&&(m.endIndex=this.parser.endIndex);else{var g=new s.Text(l);this.addNode(g),this.lastNode=g}},o.prototype.oncomment=function(l){if(this.lastNode&&this.lastNode.type===a.ElementType.Comment){this.lastNode.data+=l;return}var m=new s.Comment(l);this.addNode(m),this.lastNode=m},o.prototype.oncommentend=function(){this.lastNode=null},o.prototype.oncdatastart=function(){var l=new s.Text(""),m=new s.CDATA([l]);this.addNode(m),l.parent=m,this.lastNode=l},o.prototype.oncdataend=function(){this.lastNode=null},o.prototype.onprocessinginstruction=function(l,m){var g=new s.ProcessingInstruction(l,m);this.addNode(g)},o.prototype.handleCallback=function(l){if(typeof this.callback=="function")this.callback(l,this.dom);else if(l)throw l},o.prototype.addNode=function(l){var m=this.tagStack[this.tagStack.length-1],g=m.children[m.children.length-1];this.options.withStartIndices&&(l.startIndex=this.parser.startIndex),this.options.withEndIndices&&(l.endIndex=this.parser.endIndex),m.children.push(l),g&&(l.prev=g,g.next=l),l.parent=m,this.lastNode=null},o}();t.DomHandler=i,t.default=i}(un)),un}var cn={},be={},je={},gn={},pn={},ft={},ss;function rF(){return ss||(ss=1,Object.defineProperty(ft,"__esModule",{value:!0}),ft.default=new Uint16Array('ᵁ<Õıʊҝջאٵ۞ޢߖࠏ੊ઑඡ๭༉༦჊ረዡᐕᒝᓃᓟᔥ\0\0\0\0\0\0ᕫᛍᦍᰒᷝ὾⁠↰⊍⏀⏻⑂⠤⤒ⴈ⹈⿎〖㊺㘹㞬㣾㨨㩱㫠㬮ࠀEMabcfglmnoprstu\\bfms¦³¹ÈÏlig耻Æ䃆P耻&䀦cute耻Á䃁reve;䄂Āiyx}rc耻Â䃂;䐐r;쀀𝔄rave耻À䃀pha;䎑acr;䄀d;橓Āgp¡on;䄄f;쀀𝔸plyFunction;恡ing耻Å䃅Ācs¾Ãr;쀀𝒜ign;扔ilde耻Ã䃃ml耻Ä䃄ЀaceforsuåûþėĜĢħĪĀcrêòkslash;或Ŷöø;櫧ed;挆y;䐑ƀcrtąċĔause;戵noullis;愬a;䎒r;쀀𝔅pf;쀀𝔹eve;䋘còēmpeq;扎܀HOacdefhilorsuōőŖƀƞƢƵƷƺǜȕɳɸɾcy;䐧PY耻©䂩ƀcpyŝŢźute;䄆Ā;iŧŨ拒talDifferentialD;慅leys;愭ȀaeioƉƎƔƘron;䄌dil耻Ç䃇rc;䄈nint;戰ot;䄊ĀdnƧƭilla;䂸terDot;䂷òſi;䎧rcleȀDMPTǇǋǑǖot;抙inus;抖lus;投imes;抗oĀcsǢǸkwiseContourIntegral;戲eCurlyĀDQȃȏoubleQuote;思uote;怙ȀlnpuȞȨɇɕonĀ;eȥȦ户;橴ƀgitȯȶȺruent;扡nt;戯ourIntegral;戮ĀfrɌɎ;愂oduct;成nterClockwiseContourIntegral;戳oss;樯cr;쀀𝒞pĀ;Cʄʅ拓ap;才րDJSZacefiosʠʬʰʴʸˋ˗ˡ˦̳ҍĀ;oŹʥtrahd;椑cy;䐂cy;䐅cy;䐏ƀgrsʿ˄ˇger;怡r;憡hv;櫤Āayː˕ron;䄎;䐔lĀ;t˝˞戇a;䎔r;쀀𝔇Āaf˫̧Ācm˰̢riticalȀADGT̖̜̀̆cute;䂴oŴ̋̍;䋙bleAcute;䋝rave;䁠ilde;䋜ond;拄ferentialD;慆Ѱ̽\0\0\0͔͂\0Ѕf;쀀𝔻ƀ;DE͈͉͍䂨ot;惜qual;扐blèCDLRUVͣͲ΂ϏϢϸontourIntegraìȹoɴ͹\0\0ͻ»͉nArrow;懓Āeo·ΤftƀARTΐΖΡrrow;懐ightArrow;懔eåˊngĀLRΫτeftĀARγιrrow;柸ightArrow;柺ightArrow;柹ightĀATϘϞrrow;懒ee;抨pɁϩ\0\0ϯrrow;懑ownArrow;懕erticalBar;戥ǹABLRTaВЪаўѿͼrrowƀ;BUНОТ憓ar;椓pArrow;懵reve;䌑eft˒к\0ц\0ѐightVector;楐eeVector;楞ectorĀ;Bљњ憽ar;楖ightǔѧ\0ѱeeVector;楟ectorĀ;BѺѻ懁ar;楗eeĀ;A҆҇护rrow;憧ĀctҒҗr;쀀𝒟rok;䄐ࠀNTacdfglmopqstuxҽӀӄӋӞӢӧӮӵԡԯԶՒ՝ՠեG;䅊H耻Ð䃐cute耻É䃉ƀaiyӒӗӜron;䄚rc耻Ê䃊;䐭ot;䄖r;쀀𝔈rave耻È䃈ement;戈ĀapӺӾcr;䄒tyɓԆ\0\0ԒmallSquare;旻erySmallSquare;斫ĀgpԦԪon;䄘f;쀀𝔼silon;䎕uĀaiԼՉlĀ;TՂՃ橵ilde;扂librium;懌Āci՗՚r;愰m;橳a;䎗ml耻Ë䃋Āipժկsts;戃onentialE;慇ʀcfiosօֈ֍ֲ׌y;䐤r;쀀𝔉lledɓ֗\0\0֣mallSquare;旼erySmallSquare;斪Ͱֺ\0ֿ\0\0ׄf;쀀𝔽All;戀riertrf;愱cò׋؀JTabcdfgorstר׬ׯ׺؀ؒؖ؛؝أ٬ٲcy;䐃耻>䀾mmaĀ;d׷׸䎓;䏜reve;䄞ƀeiy؇،ؐdil;䄢rc;䄜;䐓ot;䄠r;쀀𝔊;拙pf;쀀𝔾eater̀EFGLSTصلَٖٛ٦qualĀ;Lؾؿ扥ess;招ullEqual;执reater;檢ess;扷lantEqual;橾ilde;扳cr;쀀𝒢;扫ЀAacfiosuڅڋږڛڞڪھۊRDcy;䐪Āctڐڔek;䋇;䁞irc;䄤r;愌lbertSpace;愋ǰگ\0ڲf;愍izontalLine;攀Āctۃۅòکrok;䄦mpńېۘownHumðįqual;扏܀EJOacdfgmnostuۺ۾܃܇܎ܚܞܡܨ݄ݸދޏޕcy;䐕lig;䄲cy;䐁cute耻Í䃍Āiyܓܘrc耻Î䃎;䐘ot;䄰r;愑rave耻Ì䃌ƀ;apܠܯܿĀcgܴܷr;䄪inaryI;慈lieóϝǴ݉\0ݢĀ;eݍݎ戬Āgrݓݘral;戫section;拂isibleĀCTݬݲomma;恣imes;恢ƀgptݿރވon;䄮f;쀀𝕀a;䎙cr;愐ilde;䄨ǫޚ\0ޞcy;䐆l耻Ï䃏ʀcfosuެ޷޼߂ߐĀiyޱ޵rc;䄴;䐙r;쀀𝔍pf;쀀𝕁ǣ߇\0ߌr;쀀𝒥rcy;䐈kcy;䐄΀HJacfosߤߨ߽߬߱ࠂࠈcy;䐥cy;䐌ppa;䎚Āey߶߻dil;䄶;䐚r;쀀𝔎pf;쀀𝕂cr;쀀𝒦րJTaceflmostࠥࠩࠬࡐࡣ঳সে্਷ੇcy;䐉耻<䀼ʀcmnpr࠷࠼ࡁࡄࡍute;䄹bda;䎛g;柪lacetrf;愒r;憞ƀaeyࡗ࡜ࡡron;䄽dil;䄻;䐛Āfsࡨ॰tԀACDFRTUVarࡾࢩࢱࣦ࣠ࣼयज़ΐ४Ānrࢃ࢏gleBracket;柨rowƀ;BR࢙࢚࢞憐ar;懤ightArrow;懆eiling;挈oǵࢷ\0ࣃbleBracket;柦nǔࣈ\0࣒eeVector;楡ectorĀ;Bࣛࣜ懃ar;楙loor;挊ightĀAV࣯ࣵrrow;憔ector;楎Āerँगeƀ;AVउऊऐ抣rrow;憤ector;楚iangleƀ;BEतथऩ抲ar;槏qual;抴pƀDTVषूौownVector;楑eeVector;楠ectorĀ;Bॖॗ憿ar;楘ectorĀ;B॥०憼ar;楒ightáΜs̀EFGLSTॾঋকঝঢভqualGreater;拚ullEqual;扦reater;扶ess;檡lantEqual;橽ilde;扲r;쀀𝔏Ā;eঽা拘ftarrow;懚idot;䄿ƀnpw৔ਖਛgȀLRlr৞৷ਂਐeftĀAR০৬rrow;柵ightArrow;柷ightArrow;柶eftĀarγਊightáοightáϊf;쀀𝕃erĀLRਢਬeftArrow;憙ightArrow;憘ƀchtਾੀੂòࡌ;憰rok;䅁;扪Ѐacefiosuਗ਼੝੠੷੼અઋ઎p;椅y;䐜Ādl੥੯iumSpace;恟lintrf;愳r;쀀𝔐nusPlus;戓pf;쀀𝕄cò੶;䎜ҀJacefostuણધભીଔଙඑ඗ඞcy;䐊cute;䅃ƀaey઴હાron;䅇dil;䅅;䐝ƀgswે૰଎ativeƀMTV૓૟૨ediumSpace;怋hiĀcn૦૘ë૙eryThiî૙tedĀGL૸ଆreaterGreateòٳessLesóੈLine;䀊r;쀀𝔑ȀBnptଢନଷ଺reak;恠BreakingSpace;䂠f;愕ڀ;CDEGHLNPRSTV୕ୖ୪୼஡௫ఄ౞಄ದ೘ൡඅ櫬Āou୛୤ngruent;扢pCap;扭oubleVerticalBar;戦ƀlqxஃஊ஛ement;戉ualĀ;Tஒஓ扠ilde;쀀≂̸ists;戄reater΀;EFGLSTஶஷ஽௉௓௘௥扯qual;扱ullEqual;쀀≧̸reater;쀀≫̸ess;批lantEqual;쀀⩾̸ilde;扵umpń௲௽ownHump;쀀≎̸qual;쀀≏̸eĀfsఊధtTriangleƀ;BEచఛడ拪ar;쀀⧏̸qual;括s̀;EGLSTవశ఼ౄోౘ扮qual;扰reater;扸ess;쀀≪̸lantEqual;쀀⩽̸ilde;扴estedĀGL౨౹reaterGreater;쀀⪢̸essLess;쀀⪡̸recedesƀ;ESಒಓಛ技qual;쀀⪯̸lantEqual;拠ĀeiಫಹverseElement;戌ghtTriangleƀ;BEೋೌ೒拫ar;쀀⧐̸qual;拭ĀquೝഌuareSuĀbp೨೹setĀ;E೰ೳ쀀⊏̸qual;拢ersetĀ;Eഃആ쀀⊐̸qual;拣ƀbcpഓതൎsetĀ;Eഛഞ쀀⊂⃒qual;抈ceedsȀ;ESTലള഻െ抁qual;쀀⪰̸lantEqual;拡ilde;쀀≿̸ersetĀ;E൘൛쀀⊃⃒qual;抉ildeȀ;EFT൮൯൵ൿ扁qual;扄ullEqual;扇ilde;扉erticalBar;戤cr;쀀𝒩ilde耻Ñ䃑;䎝܀Eacdfgmoprstuvලෂ෉෕ෛ෠෧෼ขภยา฿ไlig;䅒cute耻Ó䃓Āiy෎ීrc耻Ô䃔;䐞blac;䅐r;쀀𝔒rave耻Ò䃒ƀaei෮ෲ෶cr;䅌ga;䎩cron;䎟pf;쀀𝕆enCurlyĀDQฎบoubleQuote;怜uote;怘;橔Āclวฬr;쀀𝒪ash耻Ø䃘iŬื฼de耻Õ䃕es;樷ml耻Ö䃖erĀBP๋๠Āar๐๓r;怾acĀek๚๜;揞et;掴arenthesis;揜Ҁacfhilors๿ງຊຏຒດຝະ໼rtialD;戂y;䐟r;쀀𝔓i;䎦;䎠usMinus;䂱Āipຢອncareplanåڝf;愙Ȁ;eio຺ູ໠໤檻cedesȀ;EST່້໏໚扺qual;檯lantEqual;扼ilde;找me;怳Ādp໩໮uct;戏ortionĀ;aȥ໹l;戝Āci༁༆r;쀀𝒫;䎨ȀUfos༑༖༛༟OT耻"䀢r;쀀𝔔pf;愚cr;쀀𝒬؀BEacefhiorsu༾གྷཇའཱིྦྷྪྭ႖ႩႴႾarr;椐G耻®䂮ƀcnrཎནབute;䅔g;柫rĀ;tཛྷཝ憠l;椖ƀaeyཧཬཱron;䅘dil;䅖;䐠Ā;vླྀཹ愜erseĀEUྂྙĀlq྇ྎement;戋uilibrium;懋pEquilibrium;楯r»ཹo;䎡ghtЀACDFTUVa࿁࿫࿳ဢဨၛႇϘĀnr࿆࿒gleBracket;柩rowƀ;BL࿜࿝࿡憒ar;懥eftArrow;懄eiling;按oǵ࿹\0စbleBracket;柧nǔည\0နeeVector;楝ectorĀ;Bဝသ懂ar;楕loor;挋Āerိ၃eƀ;AVဵံြ抢rrow;憦ector;楛iangleƀ;BEၐၑၕ抳ar;槐qual;抵pƀDTVၣၮၸownVector;楏eeVector;楜ectorĀ;Bႂႃ憾ar;楔ectorĀ;B႑႒懀ar;楓Āpuႛ႞f;愝ndImplies;楰ightarrow;懛ĀchႹႼr;愛;憱leDelayed;槴ڀHOacfhimoqstuფჱჷჽᄙᄞᅑᅖᅡᅧᆵᆻᆿĀCcჩხHcy;䐩y;䐨FTcy;䐬cute;䅚ʀ;aeiyᄈᄉᄎᄓᄗ檼ron;䅠dil;䅞rc;䅜;䐡r;쀀𝔖ortȀDLRUᄪᄴᄾᅉownArrow»ОeftArrow»࢚ightArrow»࿝pArrow;憑gma;䎣allCircle;战pf;쀀𝕊ɲᅭ\0\0ᅰt;戚areȀ;ISUᅻᅼᆉᆯ斡ntersection;抓uĀbpᆏᆞsetĀ;Eᆗᆘ抏qual;抑ersetĀ;Eᆨᆩ抐qual;抒nion;抔cr;쀀𝒮ar;拆ȀbcmpᇈᇛሉላĀ;sᇍᇎ拐etĀ;Eᇍᇕqual;抆ĀchᇠህeedsȀ;ESTᇭᇮᇴᇿ扻qual;檰lantEqual;扽ilde;承Tháྌ;我ƀ;esሒሓሣ拑rsetĀ;Eሜም抃qual;抇et»ሓրHRSacfhiorsሾቄ቉ቕ቞ቱቶኟዂወዑORN耻Þ䃞ADE;愢ĀHc቎ቒcy;䐋y;䐦Ābuቚቜ;䀉;䎤ƀaeyብቪቯron;䅤dil;䅢;䐢r;쀀𝔗Āeiቻ኉ǲኀ\0ኇefore;戴a;䎘Ācn኎ኘkSpace;쀀  Space;怉ldeȀ;EFTካኬኲኼ戼qual;扃ullEqual;扅ilde;扈pf;쀀𝕋ipleDot;惛Āctዖዛr;쀀𝒯rok;䅦ૡዷጎጚጦ\0ጬጱ\0\0\0\0\0ጸጽ፷ᎅ\0᏿ᐄᐊᐐĀcrዻጁute耻Ú䃚rĀ;oጇገ憟cir;楉rǣጓ\0጖y;䐎ve;䅬Āiyጞጣrc耻Û䃛;䐣blac;䅰r;쀀𝔘rave耻Ù䃙acr;䅪Ādiፁ፩erĀBPፈ፝Āarፍፐr;䁟acĀekፗፙ;揟et;掵arenthesis;揝onĀ;P፰፱拃lus;抎Āgp፻፿on;䅲f;쀀𝕌ЀADETadps᎕ᎮᎸᏄϨᏒᏗᏳrrowƀ;BDᅐᎠᎤar;椒ownArrow;懅ownArrow;憕quilibrium;楮eeĀ;AᏋᏌ报rrow;憥ownáϳerĀLRᏞᏨeftArrow;憖ightArrow;憗iĀ;lᏹᏺ䏒on;䎥ing;䅮cr;쀀𝒰ilde;䅨ml耻Ü䃜ҀDbcdefosvᐧᐬᐰᐳᐾᒅᒊᒐᒖash;披ar;櫫y;䐒ashĀ;lᐻᐼ抩;櫦Āerᑃᑅ;拁ƀbtyᑌᑐᑺar;怖Ā;iᑏᑕcalȀBLSTᑡᑥᑪᑴar;戣ine;䁼eparator;杘ilde;所ThinSpace;怊r;쀀𝔙pf;쀀𝕍cr;쀀𝒱dash;抪ʀcefosᒧᒬᒱᒶᒼirc;䅴dge;拀r;쀀𝔚pf;쀀𝕎cr;쀀𝒲Ȁfiosᓋᓐᓒᓘr;쀀𝔛;䎞pf;쀀𝕏cr;쀀𝒳ҀAIUacfosuᓱᓵᓹᓽᔄᔏᔔᔚᔠcy;䐯cy;䐇cy;䐮cute耻Ý䃝Āiyᔉᔍrc;䅶;䐫r;쀀𝔜pf;쀀𝕐cr;쀀𝒴ml;䅸ЀHacdefosᔵᔹᔿᕋᕏᕝᕠᕤcy;䐖cute;䅹Āayᕄᕉron;䅽;䐗ot;䅻ǲᕔ\0ᕛoWidtè૙a;䎖r;愨pf;愤cr;쀀𝒵௡ᖃᖊᖐ\0ᖰᖶᖿ\0\0\0\0ᗆᗛᗫᙟ᙭\0ᚕ᚛ᚲᚹ\0ᚾcute耻á䃡reve;䄃̀;Ediuyᖜᖝᖡᖣᖨᖭ戾;쀀∾̳;房rc耻â䃢te肻´̆;䐰lig耻æ䃦Ā;r²ᖺ;쀀𝔞rave耻à䃠ĀepᗊᗖĀfpᗏᗔsym;愵èᗓha;䎱ĀapᗟcĀclᗤᗧr;䄁g;樿ɤᗰ\0\0ᘊʀ;adsvᗺᗻᗿᘁᘇ戧nd;橕;橜lope;橘;橚΀;elmrszᘘᘙᘛᘞᘿᙏᙙ戠;榤e»ᘙsdĀ;aᘥᘦ戡ѡᘰᘲᘴᘶᘸᘺᘼᘾ;榨;榩;榪;榫;榬;榭;榮;榯tĀ;vᙅᙆ戟bĀ;dᙌᙍ抾;榝Āptᙔᙗh;戢»¹arr;捼Āgpᙣᙧon;䄅f;쀀𝕒΀;Eaeiop዁ᙻᙽᚂᚄᚇᚊ;橰cir;橯;扊d;手s;䀧roxĀ;e዁ᚒñᚃing耻å䃥ƀctyᚡᚦᚨr;쀀𝒶;䀪mpĀ;e዁ᚯñʈilde耻ã䃣ml耻ä䃤Āciᛂᛈoninôɲnt;樑ࠀNabcdefiklnoprsu᛭ᛱᜰ᜼ᝃᝈ᝸᝽០៦ᠹᡐᜍ᤽᥈ᥰot;櫭Ācrᛶ᜞kȀcepsᜀᜅᜍᜓong;扌psilon;䏶rime;怵imĀ;e᜚᜛戽q;拍Ŷᜢᜦee;抽edĀ;gᜬᜭ挅e»ᜭrkĀ;t፜᜷brk;掶Āoyᜁᝁ;䐱quo;怞ʀcmprtᝓ᝛ᝡᝤᝨausĀ;eĊĉptyv;榰séᜌnoõēƀahwᝯ᝱ᝳ;䎲;愶een;扬r;쀀𝔟g΀costuvwឍឝឳេ៕៛៞ƀaiuបពរðݠrc;旯p»፱ƀdptឤឨឭot;樀lus;樁imes;樂ɱឹ\0\0ើcup;樆ar;昅riangleĀdu៍្own;施p;斳plus;樄eåᑄåᒭarow;植ƀako៭ᠦᠵĀcn៲ᠣkƀlst៺֫᠂ozenge;槫riangleȀ;dlr᠒᠓᠘᠝斴own;斾eft;旂ight;斸k;搣Ʊᠫ\0ᠳƲᠯ\0ᠱ;斒;斑4;斓ck;斈ĀeoᠾᡍĀ;qᡃᡆ쀀=⃥uiv;쀀≡⃥t;挐Ȁptwxᡙᡞᡧᡬf;쀀𝕓Ā;tᏋᡣom»Ꮜtie;拈؀DHUVbdhmptuvᢅᢖᢪᢻᣗᣛᣬ᣿ᤅᤊᤐᤡȀLRlrᢎᢐᢒᢔ;敗;敔;敖;敓ʀ;DUduᢡᢢᢤᢦᢨ敐;敦;敩;敤;敧ȀLRlrᢳᢵᢷᢹ;敝;敚;敜;教΀;HLRhlrᣊᣋᣍᣏᣑᣓᣕ救;敬;散;敠;敫;敢;敟ox;槉ȀLRlrᣤᣦᣨᣪ;敕;敒;攐;攌ʀ;DUduڽ᣷᣹᣻᣽;敥;敨;攬;攴inus;抟lus;択imes;抠ȀLRlrᤙᤛᤝ᤟;敛;敘;攘;攔΀;HLRhlrᤰᤱᤳᤵᤷ᤻᤹攂;敪;敡;敞;攼;攤;攜Āevģ᥂bar耻¦䂦Ȁceioᥑᥖᥚᥠr;쀀𝒷mi;恏mĀ;e᜚᜜lƀ;bhᥨᥩᥫ䁜;槅sub;柈Ŭᥴ᥾lĀ;e᥹᥺怢t»᥺pƀ;Eeįᦅᦇ;檮Ā;qۜۛೡᦧ\0᧨ᨑᨕᨲ\0ᨷᩐ\0\0᪴\0\0᫁\0\0ᬡᬮ᭍᭒\0᯽\0ᰌƀcpr᦭ᦲ᧝ute;䄇̀;abcdsᦿᧀᧄ᧊᧕᧙戩nd;橄rcup;橉Āau᧏᧒p;橋p;橇ot;橀;쀀∩︀Āeo᧢᧥t;恁îړȀaeiu᧰᧻ᨁᨅǰ᧵\0᧸s;橍on;䄍dil耻ç䃧rc;䄉psĀ;sᨌᨍ橌m;橐ot;䄋ƀdmnᨛᨠᨦil肻¸ƭptyv;榲t脀¢;eᨭᨮ䂢räƲr;쀀𝔠ƀceiᨽᩀᩍy;䑇ckĀ;mᩇᩈ朓ark»ᩈ;䏇r΀;Ecefms᩟᩠ᩢᩫ᪤᪪᪮旋;槃ƀ;elᩩᩪᩭ䋆q;扗eɡᩴ\0\0᪈rrowĀlr᩼᪁eft;憺ight;憻ʀRSacd᪒᪔᪖᪚᪟»ཇ;擈st;抛irc;抚ash;抝nint;樐id;櫯cir;槂ubsĀ;u᪻᪼晣it»᪼ˬ᫇᫔᫺\0ᬊonĀ;eᫍᫎ䀺Ā;qÇÆɭ᫙\0\0᫢aĀ;t᫞᫟䀬;䁀ƀ;fl᫨᫩᫫戁îᅠeĀmx᫱᫶ent»᫩eóɍǧ᫾\0ᬇĀ;dኻᬂot;橭nôɆƀfryᬐᬔᬗ;쀀𝕔oäɔ脀©;sŕᬝr;愗Āaoᬥᬩrr;憵ss;朗Ācuᬲᬷr;쀀𝒸Ābpᬼ᭄Ā;eᭁᭂ櫏;櫑Ā;eᭉᭊ櫐;櫒dot;拯΀delprvw᭠᭬᭷ᮂᮬᯔ᯹arrĀlr᭨᭪;椸;椵ɰ᭲\0\0᭵r;拞c;拟arrĀ;p᭿ᮀ憶;椽̀;bcdosᮏᮐᮖᮡᮥᮨ截rcap;橈Āauᮛᮞp;橆p;橊ot;抍r;橅;쀀∪︀Ȁalrv᮵ᮿᯞᯣrrĀ;mᮼᮽ憷;椼yƀevwᯇᯔᯘqɰᯎ\0\0ᯒreã᭳uã᭵ee;拎edge;拏en耻¤䂤earrowĀlrᯮ᯳eft»ᮀight»ᮽeäᯝĀciᰁᰇoninôǷnt;戱lcty;挭ঀAHabcdefhijlorstuwz᰸᰻᰿ᱝᱩᱵᲊᲞᲬᲷ᳻᳿ᴍᵻᶑᶫᶻ᷆᷍rò΁ar;楥Ȁglrs᱈ᱍ᱒᱔ger;怠eth;愸òᄳhĀ;vᱚᱛ怐»ऊūᱡᱧarow;椏aã̕Āayᱮᱳron;䄏;䐴ƀ;ao̲ᱼᲄĀgrʿᲁr;懊tseq;橷ƀglmᲑᲔᲘ耻°䂰ta;䎴ptyv;榱ĀirᲣᲨsht;楿;쀀𝔡arĀlrᲳᲵ»ࣜ»သʀaegsv᳂͸᳖᳜᳠mƀ;oș᳊᳔ndĀ;ș᳑uit;晦amma;䏝in;拲ƀ;io᳧᳨᳸䃷de脀÷;o᳧ᳰntimes;拇nø᳷cy;䑒cɯᴆ\0\0ᴊrn;挞op;挍ʀlptuwᴘᴝᴢᵉᵕlar;䀤f;쀀𝕕ʀ;emps̋ᴭᴷᴽᵂqĀ;d͒ᴳot;扑inus;戸lus;戔quare;抡blebarwedgåúnƀadhᄮᵝᵧownarrowóᲃarpoonĀlrᵲᵶefôᲴighôᲶŢᵿᶅkaro÷གɯᶊ\0\0ᶎrn;挟op;挌ƀcotᶘᶣᶦĀryᶝᶡ;쀀𝒹;䑕l;槶rok;䄑Ādrᶰᶴot;拱iĀ;fᶺ᠖斿Āah᷀᷃ròЩaòྦangle;榦Āci᷒ᷕy;䑟grarr;柿ऀDacdefglmnopqrstuxḁḉḙḸոḼṉṡṾấắẽỡἪἷὄ὎὚ĀDoḆᴴoôᲉĀcsḎḔute耻é䃩ter;橮ȀaioyḢḧḱḶron;䄛rĀ;cḭḮ扖耻ê䃪lon;払;䑍ot;䄗ĀDrṁṅot;扒;쀀𝔢ƀ;rsṐṑṗ檚ave耻è䃨Ā;dṜṝ檖ot;檘Ȁ;ilsṪṫṲṴ檙nters;揧;愓Ā;dṹṺ檕ot;檗ƀapsẅẉẗcr;䄓tyƀ;svẒẓẕ戅et»ẓpĀ1;ẝẤĳạả;怄;怅怃ĀgsẪẬ;䅋p;怂ĀgpẴẸon;䄙f;쀀𝕖ƀalsỄỎỒrĀ;sỊị拕l;槣us;橱iƀ;lvỚớở䎵on»ớ;䏵ȀcsuvỪỳἋἣĀioữḱrc»Ḯɩỹ\0\0ỻíՈantĀglἂἆtr»ṝess»Ṻƀaeiἒ἖Ἒls;䀽st;扟vĀ;DȵἠD;橸parsl;槥ĀDaἯἳot;打rr;楱ƀcdiἾὁỸr;愯oô͒ĀahὉὋ;䎷耻ð䃰Āmrὓὗl耻ë䃫o;悬ƀcipὡὤὧl;䀡sôծĀeoὬὴctatioîՙnentialåչৡᾒ\0ᾞ\0ᾡᾧ\0\0ῆῌ\0ΐ\0ῦῪ \0 ⁚llingdotseñṄy;䑄male;晀ƀilrᾭᾳ῁lig;耀ﬃɩᾹ\0\0᾽g;耀ﬀig;耀ﬄ;쀀𝔣lig;耀ﬁlig;쀀fjƀaltῙ῜ῡt;晭ig;耀ﬂns;斱of;䆒ǰ΅\0ῳf;쀀𝕗ĀakֿῷĀ;vῼ´拔;櫙artint;樍Āao‌⁕Ācs‑⁒α‚‰‸⁅⁈\0⁐β•‥‧‪‬\0‮耻½䂽;慓耻¼䂼;慕;慙;慛Ƴ‴\0‶;慔;慖ʴ‾⁁\0\0⁃耻¾䂾;慗;慜5;慘ƶ⁌\0⁎;慚;慝8;慞l;恄wn;挢cr;쀀𝒻ࢀEabcdefgijlnorstv₂₉₟₥₰₴⃰⃵⃺⃿℃ℒℸ̗ℾ⅒↞Ā;lٍ₇;檌ƀcmpₐₕ₝ute;䇵maĀ;dₜ᳚䎳;檆reve;䄟Āiy₪₮rc;䄝;䐳ot;䄡Ȁ;lqsؾق₽⃉ƀ;qsؾٌ⃄lanô٥Ȁ;cdl٥⃒⃥⃕c;檩otĀ;o⃜⃝檀Ā;l⃢⃣檂;檄Ā;e⃪⃭쀀⋛︀s;檔r;쀀𝔤Ā;gٳ؛mel;愷cy;䑓Ȁ;Eajٚℌℎℐ;檒;檥;檤ȀEaesℛℝ℩ℴ;扩pĀ;p℣ℤ檊rox»ℤĀ;q℮ℯ檈Ā;q℮ℛim;拧pf;쀀𝕘Āci⅃ⅆr;愊mƀ;el٫ⅎ⅐;檎;檐茀>;cdlqr׮ⅠⅪⅮⅳⅹĀciⅥⅧ;檧r;橺ot;拗Par;榕uest;橼ʀadelsↄⅪ←ٖ↛ǰ↉\0↎proø₞r;楸qĀlqؿ↖lesó₈ií٫Āen↣↭rtneqq;쀀≩︀Å↪ԀAabcefkosy⇄⇇⇱⇵⇺∘∝∯≨≽ròΠȀilmr⇐⇔⇗⇛rsðᒄf»․ilôکĀdr⇠⇤cy;䑊ƀ;cwࣴ⇫⇯ir;楈;憭ar;意irc;䄥ƀalr∁∎∓rtsĀ;u∉∊晥it»∊lip;怦con;抹r;쀀𝔥sĀew∣∩arow;椥arow;椦ʀamopr∺∾≃≞≣rr;懿tht;戻kĀlr≉≓eftarrow;憩ightarrow;憪f;쀀𝕙bar;怕ƀclt≯≴≸r;쀀𝒽asè⇴rok;䄧Ābp⊂⊇ull;恃hen»ᱛૡ⊣\0⊪\0⊸⋅⋎\0⋕⋳\0\0⋸⌢⍧⍢⍿\0⎆⎪⎴cute耻í䃭ƀ;iyݱ⊰⊵rc耻î䃮;䐸Ācx⊼⊿y;䐵cl耻¡䂡ĀfrΟ⋉;쀀𝔦rave耻ì䃬Ȁ;inoܾ⋝⋩⋮Āin⋢⋦nt;樌t;戭fin;槜ta;愩lig;䄳ƀaop⋾⌚⌝ƀcgt⌅⌈⌗r;䄫ƀelpܟ⌏⌓inåގarôܠh;䄱f;抷ed;䆵ʀ;cfotӴ⌬⌱⌽⍁are;愅inĀ;t⌸⌹戞ie;槝doô⌙ʀ;celpݗ⍌⍐⍛⍡al;抺Āgr⍕⍙eróᕣã⍍arhk;樗rod;樼Ȁcgpt⍯⍲⍶⍻y;䑑on;䄯f;쀀𝕚a;䎹uest耻¿䂿Āci⎊⎏r;쀀𝒾nʀ;EdsvӴ⎛⎝⎡ӳ;拹ot;拵Ā;v⎦⎧拴;拳Ā;iݷ⎮lde;䄩ǫ⎸\0⎼cy;䑖l耻ï䃯̀cfmosu⏌⏗⏜⏡⏧⏵Āiy⏑⏕rc;䄵;䐹r;쀀𝔧ath;䈷pf;쀀𝕛ǣ⏬\0⏱r;쀀𝒿rcy;䑘kcy;䑔Ѐacfghjos␋␖␢␧␭␱␵␻ppaĀ;v␓␔䎺;䏰Āey␛␠dil;䄷;䐺r;쀀𝔨reen;䄸cy;䑅cy;䑜pf;쀀𝕜cr;쀀𝓀஀ABEHabcdefghjlmnoprstuv⑰⒁⒆⒍⒑┎┽╚▀♎♞♥♹♽⚚⚲⛘❝❨➋⟀⠁⠒ƀart⑷⑺⑼rò৆òΕail;椛arr;椎Ā;gঔ⒋;檋ar;楢ॣ⒥\0⒪\0⒱\0\0\0\0\0⒵Ⓔ\0ⓆⓈⓍ\0⓹ute;䄺mptyv;榴raîࡌbda;䎻gƀ;dlࢎⓁⓃ;榑åࢎ;檅uo耻«䂫rЀ;bfhlpst࢙ⓞⓦⓩ⓫⓮⓱⓵Ā;f࢝ⓣs;椟s;椝ë≒p;憫l;椹im;楳l;憢ƀ;ae⓿─┄檫il;椙Ā;s┉┊檭;쀀⪭︀ƀabr┕┙┝rr;椌rk;杲Āak┢┬cĀek┨┪;䁻;䁛Āes┱┳;榋lĀdu┹┻;榏;榍Ȁaeuy╆╋╖╘ron;䄾Ādi═╔il;䄼ìࢰâ┩;䐻Ȁcqrs╣╦╭╽a;椶uoĀ;rนᝆĀdu╲╷har;楧shar;楋h;憲ʀ;fgqs▋▌উ◳◿扤tʀahlrt▘▤▷◂◨rrowĀ;t࢙□aé⓶arpoonĀdu▯▴own»њp»०eftarrows;懇ightƀahs◍◖◞rrowĀ;sࣴࢧarpoonó྘quigarro÷⇰hreetimes;拋ƀ;qs▋ও◺lanôবʀ;cdgsব☊☍☝☨c;檨otĀ;o☔☕橿Ā;r☚☛檁;檃Ā;e☢☥쀀⋚︀s;檓ʀadegs☳☹☽♉♋pproøⓆot;拖qĀgq♃♅ôউgtò⒌ôছiíলƀilr♕࣡♚sht;楼;쀀𝔩Ā;Eজ♣;檑š♩♶rĀdu▲♮Ā;l॥♳;楪lk;斄cy;䑙ʀ;achtੈ⚈⚋⚑⚖rò◁orneòᴈard;楫ri;旺Āio⚟⚤dot;䅀ustĀ;a⚬⚭掰che»⚭ȀEaes⚻⚽⛉⛔;扨pĀ;p⛃⛄檉rox»⛄Ā;q⛎⛏檇Ā;q⛎⚻im;拦Ѐabnoptwz⛩⛴⛷✚✯❁❇❐Ānr⛮⛱g;柬r;懽rëࣁgƀlmr⛿✍✔eftĀar০✇ightá৲apsto;柼ightá৽parrowĀlr✥✩efô⓭ight;憬ƀafl✶✹✽r;榅;쀀𝕝us;樭imes;樴š❋❏st;戗áፎƀ;ef❗❘᠀旊nge»❘arĀ;l❤❥䀨t;榓ʀachmt❳❶❼➅➇ròࢨorneòᶌarĀ;d྘➃;業;怎ri;抿̀achiqt➘➝ੀ➢➮➻quo;怹r;쀀𝓁mƀ;egল➪➬;檍;檏Ābu┪➳oĀ;rฟ➹;怚rok;䅂萀<;cdhilqrࠫ⟒☹⟜⟠⟥⟪⟰Āci⟗⟙;檦r;橹reå◲mes;拉arr;楶uest;橻ĀPi⟵⟹ar;榖ƀ;ef⠀भ᠛旃rĀdu⠇⠍shar;楊har;楦Āen⠗⠡rtneqq;쀀≨︀Å⠞܀Dacdefhilnopsu⡀⡅⢂⢎⢓⢠⢥⢨⣚⣢⣤ઃ⣳⤂Dot;戺Ȁclpr⡎⡒⡣⡽r耻¯䂯Āet⡗⡙;時Ā;e⡞⡟朠se»⡟Ā;sျ⡨toȀ;dluျ⡳⡷⡻owîҌefôएðᏑker;斮Āoy⢇⢌mma;権;䐼ash;怔asuredangle»ᘦr;쀀𝔪o;愧ƀcdn⢯⢴⣉ro耻µ䂵Ȁ;acdᑤ⢽⣀⣄sôᚧir;櫰ot肻·Ƶusƀ;bd⣒ᤃ⣓戒Ā;uᴼ⣘;横ţ⣞⣡p;櫛ò−ðઁĀdp⣩⣮els;抧f;쀀𝕞Āct⣸⣽r;쀀𝓂pos»ᖝƀ;lm⤉⤊⤍䎼timap;抸ఀGLRVabcdefghijlmoprstuvw⥂⥓⥾⦉⦘⧚⧩⨕⨚⩘⩝⪃⪕⪤⪨⬄⬇⭄⭿⮮ⰴⱧⱼ⳩Āgt⥇⥋;쀀⋙̸Ā;v⥐௏쀀≫⃒ƀelt⥚⥲⥶ftĀar⥡⥧rrow;懍ightarrow;懎;쀀⋘̸Ā;v⥻ే쀀≪⃒ightarrow;懏ĀDd⦎⦓ash;抯ash;抮ʀbcnpt⦣⦧⦬⦱⧌la»˞ute;䅄g;쀀∠⃒ʀ;Eiop඄⦼⧀⧅⧈;쀀⩰̸d;쀀≋̸s;䅉roø඄urĀ;a⧓⧔普lĀ;s⧓ସǳ⧟\0⧣p肻 ଷmpĀ;e௹ఀʀaeouy⧴⧾⨃⨐⨓ǰ⧹\0⧻;橃on;䅈dil;䅆ngĀ;dൾ⨊ot;쀀⩭̸p;橂;䐽ash;怓΀;Aadqsxஒ⨩⨭⨻⩁⩅⩐rr;懗rĀhr⨳⨶k;椤Ā;oᏲᏰot;쀀≐̸uiöୣĀei⩊⩎ar;椨í஘istĀ;s஠டr;쀀𝔫ȀEest௅⩦⩹⩼ƀ;qs஼⩭௡ƀ;qs஼௅⩴lanô௢ií௪Ā;rஶ⪁»ஷƀAap⪊⪍⪑rò⥱rr;憮ar;櫲ƀ;svྍ⪜ྌĀ;d⪡⪢拼;拺cy;䑚΀AEadest⪷⪺⪾⫂⫅⫶⫹rò⥦;쀀≦̸rr;憚r;急Ȁ;fqs఻⫎⫣⫯tĀar⫔⫙rro÷⫁ightarro÷⪐ƀ;qs఻⪺⫪lanôౕĀ;sౕ⫴»శiíౝĀ;rవ⫾iĀ;eచథiäඐĀpt⬌⬑f;쀀𝕟膀¬;in⬙⬚⬶䂬nȀ;Edvஉ⬤⬨⬮;쀀⋹̸ot;쀀⋵̸ǡஉ⬳⬵;拷;拶iĀ;vಸ⬼ǡಸ⭁⭃;拾;拽ƀaor⭋⭣⭩rȀ;ast୻⭕⭚⭟lleì୻l;쀀⫽⃥;쀀∂̸lint;樔ƀ;ceಒ⭰⭳uåಥĀ;cಘ⭸Ā;eಒ⭽ñಘȀAait⮈⮋⮝⮧rò⦈rrƀ;cw⮔⮕⮙憛;쀀⤳̸;쀀↝̸ghtarrow»⮕riĀ;eೋೖ΀chimpqu⮽⯍⯙⬄୸⯤⯯Ȁ;cerല⯆ഷ⯉uå൅;쀀𝓃ortɭ⬅\0\0⯖ará⭖mĀ;e൮⯟Ā;q൴൳suĀbp⯫⯭å೸åഋƀbcp⯶ⰑⰙȀ;Ees⯿ⰀഢⰄ抄;쀀⫅̸etĀ;eഛⰋqĀ;qണⰀcĀ;eലⰗñസȀ;EesⰢⰣൟⰧ抅;쀀⫆̸etĀ;e൘ⰮqĀ;qൠⰣȀgilrⰽⰿⱅⱇìௗlde耻ñ䃱çృiangleĀlrⱒⱜeftĀ;eచⱚñదightĀ;eೋⱥñ೗Ā;mⱬⱭ䎽ƀ;esⱴⱵⱹ䀣ro;愖p;怇ҀDHadgilrsⲏⲔⲙⲞⲣⲰⲶⳓⳣash;抭arr;椄p;쀀≍⃒ash;抬ĀetⲨⲬ;쀀≥⃒;쀀>⃒nfin;槞ƀAetⲽⳁⳅrr;椂;쀀≤⃒Ā;rⳊⳍ쀀<⃒ie;쀀⊴⃒ĀAtⳘⳜrr;椃rie;쀀⊵⃒im;쀀∼⃒ƀAan⳰⳴ⴂrr;懖rĀhr⳺⳽k;椣Ā;oᏧᏥear;椧ቓ᪕\0\0\0\0\0\0\0\0\0\0\0\0\0ⴭ\0ⴸⵈⵠⵥ⵲ⶄᬇ\0\0ⶍⶫ\0ⷈⷎ\0ⷜ⸙⸫⸾⹃Ācsⴱ᪗ute耻ó䃳ĀiyⴼⵅrĀ;c᪞ⵂ耻ô䃴;䐾ʀabios᪠ⵒⵗǈⵚlac;䅑v;樸old;榼lig;䅓Ācr⵩⵭ir;榿;쀀𝔬ͯ⵹\0\0⵼\0ⶂn;䋛ave耻ò䃲;槁Ābmⶈ෴ar;榵Ȁacitⶕ⶘ⶥⶨrò᪀Āir⶝ⶠr;榾oss;榻nå๒;槀ƀaeiⶱⶵⶹcr;䅍ga;䏉ƀcdnⷀⷅǍron;䎿;榶pf;쀀𝕠ƀaelⷔ⷗ǒr;榷rp;榹΀;adiosvⷪⷫⷮ⸈⸍⸐⸖戨rò᪆Ȁ;efmⷷⷸ⸂⸅橝rĀ;oⷾⷿ愴f»ⷿ耻ª䂪耻º䂺gof;抶r;橖lope;橗;橛ƀclo⸟⸡⸧ò⸁ash耻ø䃸l;折iŬⸯ⸴de耻õ䃵esĀ;aǛ⸺s;樶ml耻ö䃶bar;挽ૡ⹞\0⹽\0⺀⺝\0⺢⺹\0\0⻋ຜ\0⼓\0\0⼫⾼\0⿈rȀ;astЃ⹧⹲຅脀¶;l⹭⹮䂶leìЃɩ⹸\0\0⹻m;櫳;櫽y;䐿rʀcimpt⺋⺏⺓ᡥ⺗nt;䀥od;䀮il;怰enk;怱r;쀀𝔭ƀimo⺨⺰⺴Ā;v⺭⺮䏆;䏕maô੶ne;明ƀ;tv⺿⻀⻈䏀chfork»´;䏖Āau⻏⻟nĀck⻕⻝kĀ;h⇴⻛;愎ö⇴sҀ;abcdemst⻳⻴ᤈ⻹⻽⼄⼆⼊⼎䀫cir;樣ir;樢Āouᵀ⼂;樥;橲n肻±ຝim;樦wo;樧ƀipu⼙⼠⼥ntint;樕f;쀀𝕡nd耻£䂣Ԁ;Eaceinosu່⼿⽁⽄⽇⾁⾉⾒⽾⾶;檳p;檷uå໙Ā;c໎⽌̀;acens່⽙⽟⽦⽨⽾pproø⽃urlyeñ໙ñ໎ƀaes⽯⽶⽺pprox;檹qq;檵im;拨iíໟmeĀ;s⾈ຮ怲ƀEas⽸⾐⽺ð⽵ƀdfp໬⾙⾯ƀals⾠⾥⾪lar;挮ine;挒urf;挓Ā;t໻⾴ï໻rel;抰Āci⿀⿅r;쀀𝓅;䏈ncsp;怈̀fiopsu⿚⋢⿟⿥⿫⿱r;쀀𝔮pf;쀀𝕢rime;恗cr;쀀𝓆ƀaeo⿸〉〓tĀei⿾々rnionóڰnt;樖stĀ;e【】䀿ñἙô༔઀ABHabcdefhilmnoprstux぀けさすムㄎㄫㅇㅢㅲㆎ㈆㈕㈤㈩㉘㉮㉲㊐㊰㊷ƀartぇおがròႳòϝail;検aròᱥar;楤΀cdenqrtとふへみわゔヌĀeuねぱ;쀀∽̱te;䅕iãᅮmptyv;榳gȀ;del࿑らるろ;榒;榥å࿑uo耻»䂻rր;abcfhlpstw࿜ガクシスゼゾダッデナp;極Ā;f࿠ゴs;椠;椳s;椞ë≝ð✮l;楅im;楴l;憣;憝Āaiパフil;椚oĀ;nホボ戶aló༞ƀabrョリヮrò៥rk;杳ĀakンヽcĀekヹ・;䁽;䁝Āes㄂㄄;榌lĀduㄊㄌ;榎;榐Ȁaeuyㄗㄜㄧㄩron;䅙Ādiㄡㄥil;䅗ì࿲âヺ;䑀Ȁclqsㄴㄷㄽㅄa;椷dhar;楩uoĀ;rȎȍh;憳ƀacgㅎㅟངlȀ;ipsླྀㅘㅛႜnåႻarôྩt;断ƀilrㅩဣㅮsht;楽;쀀𝔯ĀaoㅷㆆrĀduㅽㅿ»ѻĀ;l႑ㆄ;楬Ā;vㆋㆌ䏁;䏱ƀgns㆕ㇹㇼht̀ahlrstㆤㆰ㇂㇘㇤㇮rrowĀ;t࿜ㆭaéトarpoonĀduㆻㆿowîㅾp»႒eftĀah㇊㇐rrowó࿪arpoonóՑightarrows;應quigarro÷ニhreetimes;拌g;䋚ingdotseñἲƀahm㈍㈐㈓rò࿪aòՑ;怏oustĀ;a㈞㈟掱che»㈟mid;櫮Ȁabpt㈲㈽㉀㉒Ānr㈷㈺g;柭r;懾rëဃƀafl㉇㉊㉎r;榆;쀀𝕣us;樮imes;樵Āap㉝㉧rĀ;g㉣㉤䀩t;榔olint;樒arò㇣Ȁachq㉻㊀Ⴜ㊅quo;怺r;쀀𝓇Ābu・㊊oĀ;rȔȓƀhir㊗㊛㊠reåㇸmes;拊iȀ;efl㊪ၙᠡ㊫方tri;槎luhar;楨;愞ൡ㋕㋛㋟㌬㌸㍱\0㍺㎤\0\0㏬㏰\0㐨㑈㑚㒭㒱㓊㓱\0㘖\0\0㘳cute;䅛quï➺Ԁ;Eaceinpsyᇭ㋳㋵㋿㌂㌋㌏㌟㌦㌩;檴ǰ㋺\0㋼;檸on;䅡uåᇾĀ;dᇳ㌇il;䅟rc;䅝ƀEas㌖㌘㌛;檶p;檺im;择olint;樓iíሄ;䑁otƀ;be㌴ᵇ㌵担;橦΀Aacmstx㍆㍊㍗㍛㍞㍣㍭rr;懘rĀhr㍐㍒ë∨Ā;oਸ਼਴t耻§䂧i;䀻war;椩mĀin㍩ðnuóñt;朶rĀ;o㍶⁕쀀𝔰Ȁacoy㎂㎆㎑㎠rp;景Āhy㎋㎏cy;䑉;䑈rtɭ㎙\0\0㎜iäᑤaraì⹯耻­䂭Āgm㎨㎴maƀ;fv㎱㎲㎲䏃;䏂Ѐ;deglnprካ㏅㏉㏎㏖㏞㏡㏦ot;橪Ā;q኱ኰĀ;E㏓㏔檞;檠Ā;E㏛㏜檝;檟e;扆lus;樤arr;楲aròᄽȀaeit㏸㐈㐏㐗Āls㏽㐄lsetmé㍪hp;樳parsl;槤Ādlᑣ㐔e;挣Ā;e㐜㐝檪Ā;s㐢㐣檬;쀀⪬︀ƀflp㐮㐳㑂tcy;䑌Ā;b㐸㐹䀯Ā;a㐾㐿槄r;挿f;쀀𝕤aĀdr㑍ЂesĀ;u㑔㑕晠it»㑕ƀcsu㑠㑹㒟Āau㑥㑯pĀ;sᆈ㑫;쀀⊓︀pĀ;sᆴ㑵;쀀⊔︀uĀbp㑿㒏ƀ;esᆗᆜ㒆etĀ;eᆗ㒍ñᆝƀ;esᆨᆭ㒖etĀ;eᆨ㒝ñᆮƀ;afᅻ㒦ְrť㒫ֱ»ᅼaròᅈȀcemt㒹㒾㓂㓅r;쀀𝓈tmîñiì㐕aræᆾĀar㓎㓕rĀ;f㓔ឿ昆Āan㓚㓭ightĀep㓣㓪psiloîỠhé⺯s»⡒ʀbcmnp㓻㕞ሉ㖋㖎Ҁ;Edemnprs㔎㔏㔑㔕㔞㔣㔬㔱㔶抂;櫅ot;檽Ā;dᇚ㔚ot;櫃ult;櫁ĀEe㔨㔪;櫋;把lus;檿arr;楹ƀeiu㔽㕒㕕tƀ;en㔎㕅㕋qĀ;qᇚ㔏eqĀ;q㔫㔨m;櫇Ābp㕚㕜;櫕;櫓c̀;acensᇭ㕬㕲㕹㕻㌦pproø㋺urlyeñᇾñᇳƀaes㖂㖈㌛pproø㌚qñ㌗g;晪ڀ123;Edehlmnps㖩㖬㖯ሜ㖲㖴㗀㗉㗕㗚㗟㗨㗭耻¹䂹耻²䂲耻³䂳;櫆Āos㖹㖼t;檾ub;櫘Ā;dሢ㗅ot;櫄sĀou㗏㗒l;柉b;櫗arr;楻ult;櫂ĀEe㗤㗦;櫌;抋lus;櫀ƀeiu㗴㘉㘌tƀ;enሜ㗼㘂qĀ;qሢ㖲eqĀ;q㗧㗤m;櫈Ābp㘑㘓;櫔;櫖ƀAan㘜㘠㘭rr;懙rĀhr㘦㘨ë∮Ā;oਫ਩war;椪lig耻ß䃟௡㙑㙝㙠ዎ㙳㙹\0㙾㛂\0\0\0\0\0㛛㜃\0㜉㝬\0\0\0㞇ɲ㙖\0\0㙛get;挖;䏄rë๟ƀaey㙦㙫㙰ron;䅥dil;䅣;䑂lrec;挕r;쀀𝔱Ȁeiko㚆㚝㚵㚼ǲ㚋\0㚑eĀ4fኄኁaƀ;sv㚘㚙㚛䎸ym;䏑Ācn㚢㚲kĀas㚨㚮pproø዁im»ኬsðኞĀas㚺㚮ð዁rn耻þ䃾Ǭ̟㛆⋧es膀×;bd㛏㛐㛘䃗Ā;aᤏ㛕r;樱;樰ƀeps㛡㛣㜀á⩍Ȁ;bcf҆㛬㛰㛴ot;挶ir;櫱Ā;o㛹㛼쀀𝕥rk;櫚á㍢rime;怴ƀaip㜏㜒㝤dåቈ΀adempst㜡㝍㝀㝑㝗㝜㝟ngleʀ;dlqr㜰㜱㜶㝀㝂斵own»ᶻeftĀ;e⠀㜾ñम;扜ightĀ;e㊪㝋ñၚot;旬inus;樺lus;樹b;槍ime;樻ezium;揢ƀcht㝲㝽㞁Āry㝷㝻;쀀𝓉;䑆cy;䑛rok;䅧Āio㞋㞎xô᝷headĀlr㞗㞠eftarro÷ࡏightarrow»ཝऀAHabcdfghlmoprstuw㟐㟓㟗㟤㟰㟼㠎㠜㠣㠴㡑㡝㡫㢩㣌㣒㣪㣶ròϭar;楣Ācr㟜㟢ute耻ú䃺òᅐrǣ㟪\0㟭y;䑞ve;䅭Āiy㟵㟺rc耻û䃻;䑃ƀabh㠃㠆㠋ròᎭlac;䅱aòᏃĀir㠓㠘sht;楾;쀀𝔲rave耻ù䃹š㠧㠱rĀlr㠬㠮»ॗ»ႃlk;斀Āct㠹㡍ɯ㠿\0\0㡊rnĀ;e㡅㡆挜r»㡆op;挏ri;旸Āal㡖㡚cr;䅫肻¨͉Āgp㡢㡦on;䅳f;쀀𝕦̀adhlsuᅋ㡸㡽፲㢑㢠ownáᎳarpoonĀlr㢈㢌efô㠭ighô㠯iƀ;hl㢙㢚㢜䏅»ᏺon»㢚parrows;懈ƀcit㢰㣄㣈ɯ㢶\0\0㣁rnĀ;e㢼㢽挝r»㢽op;挎ng;䅯ri;旹cr;쀀𝓊ƀdir㣙㣝㣢ot;拰lde;䅩iĀ;f㜰㣨»᠓Āam㣯㣲rò㢨l耻ü䃼angle;榧ހABDacdeflnoprsz㤜㤟㤩㤭㦵㦸㦽㧟㧤㧨㧳㧹㧽㨁㨠ròϷarĀ;v㤦㤧櫨;櫩asèϡĀnr㤲㤷grt;榜΀eknprst㓣㥆㥋㥒㥝㥤㦖appá␕othinçẖƀhir㓫⻈㥙opô⾵Ā;hᎷ㥢ïㆍĀiu㥩㥭gmá㎳Ābp㥲㦄setneqĀ;q㥽㦀쀀⊊︀;쀀⫋︀setneqĀ;q㦏㦒쀀⊋︀;쀀⫌︀Āhr㦛㦟etá㚜iangleĀlr㦪㦯eft»थight»ၑy;䐲ash»ံƀelr㧄㧒㧗ƀ;beⷪ㧋㧏ar;抻q;扚lip;拮Ābt㧜ᑨaòᑩr;쀀𝔳tré㦮suĀbp㧯㧱»ജ»൙pf;쀀𝕧roð໻tré㦴Ācu㨆㨋r;쀀𝓋Ābp㨐㨘nĀEe㦀㨖»㥾nĀEe㦒㨞»㦐igzag;榚΀cefoprs㨶㨻㩖㩛㩔㩡㩪irc;䅵Ādi㩀㩑Ābg㩅㩉ar;機eĀ;qᗺ㩏;扙erp;愘r;쀀𝔴pf;쀀𝕨Ā;eᑹ㩦atèᑹcr;쀀𝓌ૣណ㪇\0㪋\0㪐㪛\0\0㪝㪨㪫㪯\0\0㫃㫎\0㫘ៜ៟tré៑r;쀀𝔵ĀAa㪔㪗ròσrò৶;䎾ĀAa㪡㪤ròθrò৫að✓is;拻ƀdptឤ㪵㪾Āfl㪺ឩ;쀀𝕩imåឲĀAa㫇㫊ròώròਁĀcq㫒ីr;쀀𝓍Āpt៖㫜ré។Ѐacefiosu㫰㫽㬈㬌㬑㬕㬛㬡cĀuy㫶㫻te耻ý䃽;䑏Āiy㬂㬆rc;䅷;䑋n耻¥䂥r;쀀𝔶cy;䑗pf;쀀𝕪cr;쀀𝓎Ācm㬦㬩y;䑎l耻ÿ䃿Ԁacdefhiosw㭂㭈㭔㭘㭤㭩㭭㭴㭺㮀cute;䅺Āay㭍㭒ron;䅾;䐷ot;䅼Āet㭝㭡træᕟa;䎶r;쀀𝔷cy;䐶grarr;懝pf;쀀𝕫cr;쀀𝓏Ājn㮅㮇;怍j;怌'.split("").map(function(t){return t.charCodeAt(0)}))),ft}var yt={},rs;function oF(){return rs||(rs=1,Object.defineProperty(yt,"__esModule",{value:!0}),yt.default=new Uint16Array("Ȁaglq	\x1Bɭ\0\0p;䀦os;䀧t;䀾t;䀼uot;䀢".split("").map(function(t){return t.charCodeAt(0)}))),yt}var bn={},os;function is(){return os||(os=1,function(t){var e;Object.defineProperty(t,"__esModule",{value:!0}),t.replaceCodePoint=t.fromCodePoint=void 0;var n=new Map([[0,65533],[128,8364],[130,8218],[131,402],[132,8222],[133,8230],[134,8224],[135,8225],[136,710],[137,8240],[138,352],[139,8249],[140,338],[142,381],[145,8216],[146,8217],[147,8220],[148,8221],[149,8226],[150,8211],[151,8212],[152,732],[153,8482],[154,353],[155,8250],[156,339],[158,382],[159,376]]);t.fromCodePoint=(e=String.fromCodePoint)!==null&&e!==void 0?e:function(r){var i="";return r>65535&&(r-=65536,i+=String.fromCharCode(r>>>10&1023|55296),r=56320|r&1023),i+=String.fromCharCode(r),i};function a(r){var i;return r>=55296&&r<=57343||r>1114111?65533:(i=n.get(r))!==null&&i!==void 0?i:r}t.replaceCodePoint=a;function s(r){return(0,t.fromCodePoint)(a(r))}t.default=s}(bn)),bn}var ls;function us(){return ls||(ls=1,function(t){var e=q&&q.__createBinding||(Object.create?function(y,E,S,T){T===void 0&&(T=S);var P=Object.getOwnPropertyDescriptor(E,S);(!P||("get"in P?!E.__esModule:P.writable||P.configurable))&&(P={enumerable:!0,get:function(){return E[S]}}),Object.defineProperty(y,T,P)}:function(y,E,S,T){T===void 0&&(T=S),y[T]=E[S]}),n=q&&q.__setModuleDefault||(Object.create?function(y,E){Object.defineProperty(y,"default",{enumerable:!0,value:E})}:function(y,E){y.default=E}),a=q&&q.__importStar||function(y){if(y&&y.__esModule)return y;var E={};if(y!=null)for(var S in y)S!=="default"&&Object.prototype.hasOwnProperty.call(y,S)&&e(E,y,S);return n(E,y),E},s=q&&q.__importDefault||function(y){return y&&y.__esModule?y:{default:y}};Object.defineProperty(t,"__esModule",{value:!0}),t.decodeXML=t.decodeHTMLStrict=t.decodeHTMLAttribute=t.decodeHTML=t.determineBranch=t.EntityDecoder=t.DecodingMode=t.BinTrieFlags=t.fromCodePoint=t.replaceCodePoint=t.decodeCodePoint=t.xmlDecodeTree=t.htmlDecodeTree=void 0;var r=s(rF());t.htmlDecodeTree=r.default;var i=s(oF());t.xmlDecodeTree=i.default;var o=a(is());t.decodeCodePoint=o.default;var l=is();Object.defineProperty(t,"replaceCodePoint",{enumerable:!0,get:function(){return l.replaceCodePoint}}),Object.defineProperty(t,"fromCodePoint",{enumerable:!0,get:function(){return l.fromCodePoint}});var m;(function(y){y[y.NUM=35]="NUM",y[y.SEMI=59]="SEMI",y[y.EQUALS=61]="EQUALS",y[y.ZERO=48]="ZERO",y[y.NINE=57]="NINE",y[y.LOWER_A=97]="LOWER_A",y[y.LOWER_F=102]="LOWER_F",y[y.LOWER_X=120]="LOWER_X",y[y.LOWER_Z=122]="LOWER_Z",y[y.UPPER_A=65]="UPPER_A",y[y.UPPER_F=70]="UPPER_F",y[y.UPPER_Z=90]="UPPER_Z"})(m||(m={}));var g=32,p;(function(y){y[y.VALUE_LENGTH=49152]="VALUE_LENGTH",y[y.BRANCH_LENGTH=16256]="BRANCH_LENGTH",y[y.JUMP_TABLE=127]="JUMP_TABLE"})(p=t.BinTrieFlags||(t.BinTrieFlags={}));function u(y){return y>=m.ZERO&&y<=m.NINE}function c(y){return y>=m.UPPER_A&&y<=m.UPPER_F||y>=m.LOWER_A&&y<=m.LOWER_F}function k(y){return y>=m.UPPER_A&&y<=m.UPPER_Z||y>=m.LOWER_A&&y<=m.LOWER_Z||u(y)}function _(y){return y===m.EQUALS||k(y)}var x;(function(y){y[y.EntityStart=0]="EntityStart",y[y.NumericStart=1]="NumericStart",y[y.NumericDecimal=2]="NumericDecimal",y[y.NumericHex=3]="NumericHex",y[y.NamedEntity=4]="NamedEntity"})(x||(x={}));var f;(function(y){y[y.Legacy=0]="Legacy",y[y.Strict=1]="Strict",y[y.Attribute=2]="Attribute"})(f=t.DecodingMode||(t.DecodingMode={}));var b=function(){function y(E,S,T){this.decodeTree=E,this.emitCodePoint=S,this.errors=T,this.state=x.EntityStart,this.consumed=1,this.result=0,this.treeIndex=0,this.excess=1,this.decodeMode=f.Strict}return y.prototype.startEntity=function(E){this.decodeMode=E,this.state=x.EntityStart,this.result=0,this.treeIndex=0,this.excess=1,this.consumed=1},y.prototype.write=function(E,S){switch(this.state){case x.EntityStart:return E.charCodeAt(S)===m.NUM?(this.state=x.NumericStart,this.consumed+=1,this.stateNumericStart(E,S+1)):(this.state=x.NamedEntity,this.stateNamedEntity(E,S));case x.NumericStart:return this.stateNumericStart(E,S);case x.NumericDecimal:return this.stateNumericDecimal(E,S);case x.NumericHex:return this.stateNumericHex(E,S);case x.NamedEntity:return this.stateNamedEntity(E,S)}},y.prototype.stateNumericStart=function(E,S){return S>=E.length?-1:(E.charCodeAt(S)|g)===m.LOWER_X?(this.state=x.NumericHex,this.consumed+=1,this.stateNumericHex(E,S+1)):(this.state=x.NumericDecimal,this.stateNumericDecimal(E,S))},y.prototype.addToNumericResult=function(E,S,T,P){if(S!==T){var w=T-S;this.result=this.result*Math.pow(P,w)+parseInt(E.substr(S,w),P),this.consumed+=w}},y.prototype.stateNumericHex=function(E,S){for(var T=S;S<E.length;){var P=E.charCodeAt(S);if(u(P)||c(P))S+=1;else return this.addToNumericResult(E,T,S,16),this.emitNumericEntity(P,3)}return this.addToNumericResult(E,T,S,16),-1},y.prototype.stateNumericDecimal=function(E,S){for(var T=S;S<E.length;){var P=E.charCodeAt(S);if(u(P))S+=1;else return this.addToNumericResult(E,T,S,10),this.emitNumericEntity(P,2)}return this.addToNumericResult(E,T,S,10),-1},y.prototype.emitNumericEntity=function(E,S){var T;if(this.consumed<=S)return(T=this.errors)===null||T===void 0||T.absenceOfDigitsInNumericCharacterReference(this.consumed),0;if(E===m.SEMI)this.consumed+=1;else if(this.decodeMode===f.Strict)return 0;return this.emitCodePoint((0,o.replaceCodePoint)(this.result),this.consumed),this.errors&&(E!==m.SEMI&&this.errors.missingSemicolonAfterCharacterReference(),this.errors.validateNumericCharacterReference(this.result)),this.consumed},y.prototype.stateNamedEntity=function(E,S){for(var T=this.decodeTree,P=T[this.treeIndex],w=(P&p.VALUE_LENGTH)>>14;S<E.length;S++,this.excess++){var D=E.charCodeAt(S);if(this.treeIndex=v(T,P,this.treeIndex+Math.max(1,w),D),this.treeIndex<0)return this.result===0||this.decodeMode===f.Attribute&&(w===0||_(D))?0:this.emitNotTerminatedNamedEntity();if(P=T[this.treeIndex],w=(P&p.VALUE_LENGTH)>>14,w!==0){if(D===m.SEMI)return this.emitNamedEntityData(this.treeIndex,w,this.consumed+this.excess);this.decodeMode!==f.Strict&&(this.result=this.treeIndex,this.consumed+=this.excess,this.excess=0)}}return-1},y.prototype.emitNotTerminatedNamedEntity=function(){var E,S=this,T=S.result,P=S.decodeTree,w=(P[T]&p.VALUE_LENGTH)>>14;return this.emitNamedEntityData(T,w,this.consumed),(E=this.errors)===null||E===void 0||E.missingSemicolonAfterCharacterReference(),this.consumed},y.prototype.emitNamedEntityData=function(E,S,T){var P=this.decodeTree;return this.emitCodePoint(S===1?P[E]&~p.VALUE_LENGTH:P[E+1],T),S===3&&this.emitCodePoint(P[E+2],T),T},y.prototype.end=function(){var E;switch(this.state){case x.NamedEntity:return this.result!==0&&(this.decodeMode!==f.Attribute||this.result===this.treeIndex)?this.emitNotTerminatedNamedEntity():0;case x.NumericDecimal:return this.emitNumericEntity(0,2);case x.NumericHex:return this.emitNumericEntity(0,3);case x.NumericStart:return(E=this.errors)===null||E===void 0||E.absenceOfDigitsInNumericCharacterReference(this.consumed),0;case x.EntityStart:return 0}},y}();t.EntityDecoder=b;function h(y){var E="",S=new b(y,function(T){return E+=(0,o.fromCodePoint)(T)});return function(P,w){for(var D=0,M=0;(M=P.indexOf("&",M))>=0;){E+=P.slice(D,M),S.startEntity(w);var z=S.write(P,M+1);if(z<0){D=M+S.end();break}D=M+z,M=z===0?D+1:D}var H=E+P.slice(D);return E="",H}}function v(y,E,S,T){var P=(E&p.BRANCH_LENGTH)>>7,w=E&p.JUMP_TABLE;if(P===0)return w!==0&&T===w?S:-1;if(w){var D=T-w;return D<0||D>=P?-1:y[S+D]-1}for(var M=S,z=M+P-1;M<=z;){var H=M+z>>>1,Q=y[H];if(Q<T)M=H+1;else if(Q>T)z=H-1;else return y[H+P]}return-1}t.determineBranch=v;var d=h(r.default),L=h(i.default);function C(y,E){return E===void 0&&(E=f.Legacy),d(y,E)}t.decodeHTML=C;function A(y){return d(y,f.Attribute)}t.decodeHTMLAttribute=A;function I(y){return d(y,f.Strict)}t.decodeHTMLStrict=I;function R(y){return L(y,f.Strict)}t.decodeXML=R}(pn)),pn}var De={},vt={},ms;function iF(){if(ms)return vt;ms=1,Object.defineProperty(vt,"__esModule",{value:!0});function t(e){for(var n=1;n<e.length;n++)e[n][0]+=e[n-1][0]+1;return e}return vt.default=new Map(t([[9,"&Tab;"],[0,"&NewLine;"],[22,"&excl;"],[0,"&quot;"],[0,"&num;"],[0,"&dollar;"],[0,"&percnt;"],[0,"&amp;"],[0,"&apos;"],[0,"&lpar;"],[0,"&rpar;"],[0,"&ast;"],[0,"&plus;"],[0,"&comma;"],[1,"&period;"],[0,"&sol;"],[10,"&colon;"],[0,"&semi;"],[0,{v:"&lt;",n:8402,o:"&nvlt;"}],[0,{v:"&equals;",n:8421,o:"&bne;"}],[0,{v:"&gt;",n:8402,o:"&nvgt;"}],[0,"&quest;"],[0,"&commat;"],[26,"&lbrack;"],[0,"&bsol;"],[0,"&rbrack;"],[0,"&Hat;"],[0,"&lowbar;"],[0,"&DiacriticalGrave;"],[5,{n:106,o:"&fjlig;"}],[20,"&lbrace;"],[0,"&verbar;"],[0,"&rbrace;"],[34,"&nbsp;"],[0,"&iexcl;"],[0,"&cent;"],[0,"&pound;"],[0,"&curren;"],[0,"&yen;"],[0,"&brvbar;"],[0,"&sect;"],[0,"&die;"],[0,"&copy;"],[0,"&ordf;"],[0,"&laquo;"],[0,"&not;"],[0,"&shy;"],[0,"&circledR;"],[0,"&macr;"],[0,"&deg;"],[0,"&PlusMinus;"],[0,"&sup2;"],[0,"&sup3;"],[0,"&acute;"],[0,"&micro;"],[0,"&para;"],[0,"&centerdot;"],[0,"&cedil;"],[0,"&sup1;"],[0,"&ordm;"],[0,"&raquo;"],[0,"&frac14;"],[0,"&frac12;"],[0,"&frac34;"],[0,"&iquest;"],[0,"&Agrave;"],[0,"&Aacute;"],[0,"&Acirc;"],[0,"&Atilde;"],[0,"&Auml;"],[0,"&angst;"],[0,"&AElig;"],[0,"&Ccedil;"],[0,"&Egrave;"],[0,"&Eacute;"],[0,"&Ecirc;"],[0,"&Euml;"],[0,"&Igrave;"],[0,"&Iacute;"],[0,"&Icirc;"],[0,"&Iuml;"],[0,"&ETH;"],[0,"&Ntilde;"],[0,"&Ograve;"],[0,"&Oacute;"],[0,"&Ocirc;"],[0,"&Otilde;"],[0,"&Ouml;"],[0,"&times;"],[0,"&Oslash;"],[0,"&Ugrave;"],[0,"&Uacute;"],[0,"&Ucirc;"],[0,"&Uuml;"],[0,"&Yacute;"],[0,"&THORN;"],[0,"&szlig;"],[0,"&agrave;"],[0,"&aacute;"],[0,"&acirc;"],[0,"&atilde;"],[0,"&auml;"],[0,"&aring;"],[0,"&aelig;"],[0,"&ccedil;"],[0,"&egrave;"],[0,"&eacute;"],[0,"&ecirc;"],[0,"&euml;"],[0,"&igrave;"],[0,"&iacute;"],[0,"&icirc;"],[0,"&iuml;"],[0,"&eth;"],[0,"&ntilde;"],[0,"&ograve;"],[0,"&oacute;"],[0,"&ocirc;"],[0,"&otilde;"],[0,"&ouml;"],[0,"&div;"],[0,"&oslash;"],[0,"&ugrave;"],[0,"&uacute;"],[0,"&ucirc;"],[0,"&uuml;"],[0,"&yacute;"],[0,"&thorn;"],[0,"&yuml;"],[0,"&Amacr;"],[0,"&amacr;"],[0,"&Abreve;"],[0,"&abreve;"],[0,"&Aogon;"],[0,"&aogon;"],[0,"&Cacute;"],[0,"&cacute;"],[0,"&Ccirc;"],[0,"&ccirc;"],[0,"&Cdot;"],[0,"&cdot;"],[0,"&Ccaron;"],[0,"&ccaron;"],[0,"&Dcaron;"],[0,"&dcaron;"],[0,"&Dstrok;"],[0,"&dstrok;"],[0,"&Emacr;"],[0,"&emacr;"],[2,"&Edot;"],[0,"&edot;"],[0,"&Eogon;"],[0,"&eogon;"],[0,"&Ecaron;"],[0,"&ecaron;"],[0,"&Gcirc;"],[0,"&gcirc;"],[0,"&Gbreve;"],[0,"&gbreve;"],[0,"&Gdot;"],[0,"&gdot;"],[0,"&Gcedil;"],[1,"&Hcirc;"],[0,"&hcirc;"],[0,"&Hstrok;"],[0,"&hstrok;"],[0,"&Itilde;"],[0,"&itilde;"],[0,"&Imacr;"],[0,"&imacr;"],[2,"&Iogon;"],[0,"&iogon;"],[0,"&Idot;"],[0,"&imath;"],[0,"&IJlig;"],[0,"&ijlig;"],[0,"&Jcirc;"],[0,"&jcirc;"],[0,"&Kcedil;"],[0,"&kcedil;"],[0,"&kgreen;"],[0,"&Lacute;"],[0,"&lacute;"],[0,"&Lcedil;"],[0,"&lcedil;"],[0,"&Lcaron;"],[0,"&lcaron;"],[0,"&Lmidot;"],[0,"&lmidot;"],[0,"&Lstrok;"],[0,"&lstrok;"],[0,"&Nacute;"],[0,"&nacute;"],[0,"&Ncedil;"],[0,"&ncedil;"],[0,"&Ncaron;"],[0,"&ncaron;"],[0,"&napos;"],[0,"&ENG;"],[0,"&eng;"],[0,"&Omacr;"],[0,"&omacr;"],[2,"&Odblac;"],[0,"&odblac;"],[0,"&OElig;"],[0,"&oelig;"],[0,"&Racute;"],[0,"&racute;"],[0,"&Rcedil;"],[0,"&rcedil;"],[0,"&Rcaron;"],[0,"&rcaron;"],[0,"&Sacute;"],[0,"&sacute;"],[0,"&Scirc;"],[0,"&scirc;"],[0,"&Scedil;"],[0,"&scedil;"],[0,"&Scaron;"],[0,"&scaron;"],[0,"&Tcedil;"],[0,"&tcedil;"],[0,"&Tcaron;"],[0,"&tcaron;"],[0,"&Tstrok;"],[0,"&tstrok;"],[0,"&Utilde;"],[0,"&utilde;"],[0,"&Umacr;"],[0,"&umacr;"],[0,"&Ubreve;"],[0,"&ubreve;"],[0,"&Uring;"],[0,"&uring;"],[0,"&Udblac;"],[0,"&udblac;"],[0,"&Uogon;"],[0,"&uogon;"],[0,"&Wcirc;"],[0,"&wcirc;"],[0,"&Ycirc;"],[0,"&ycirc;"],[0,"&Yuml;"],[0,"&Zacute;"],[0,"&zacute;"],[0,"&Zdot;"],[0,"&zdot;"],[0,"&Zcaron;"],[0,"&zcaron;"],[19,"&fnof;"],[34,"&imped;"],[63,"&gacute;"],[65,"&jmath;"],[142,"&circ;"],[0,"&caron;"],[16,"&breve;"],[0,"&DiacriticalDot;"],[0,"&ring;"],[0,"&ogon;"],[0,"&DiacriticalTilde;"],[0,"&dblac;"],[51,"&DownBreve;"],[127,"&Alpha;"],[0,"&Beta;"],[0,"&Gamma;"],[0,"&Delta;"],[0,"&Epsilon;"],[0,"&Zeta;"],[0,"&Eta;"],[0,"&Theta;"],[0,"&Iota;"],[0,"&Kappa;"],[0,"&Lambda;"],[0,"&Mu;"],[0,"&Nu;"],[0,"&Xi;"],[0,"&Omicron;"],[0,"&Pi;"],[0,"&Rho;"],[1,"&Sigma;"],[0,"&Tau;"],[0,"&Upsilon;"],[0,"&Phi;"],[0,"&Chi;"],[0,"&Psi;"],[0,"&ohm;"],[7,"&alpha;"],[0,"&beta;"],[0,"&gamma;"],[0,"&delta;"],[0,"&epsi;"],[0,"&zeta;"],[0,"&eta;"],[0,"&theta;"],[0,"&iota;"],[0,"&kappa;"],[0,"&lambda;"],[0,"&mu;"],[0,"&nu;"],[0,"&xi;"],[0,"&omicron;"],[0,"&pi;"],[0,"&rho;"],[0,"&sigmaf;"],[0,"&sigma;"],[0,"&tau;"],[0,"&upsi;"],[0,"&phi;"],[0,"&chi;"],[0,"&psi;"],[0,"&omega;"],[7,"&thetasym;"],[0,"&Upsi;"],[2,"&phiv;"],[0,"&piv;"],[5,"&Gammad;"],[0,"&digamma;"],[18,"&kappav;"],[0,"&rhov;"],[3,"&epsiv;"],[0,"&backepsilon;"],[10,"&IOcy;"],[0,"&DJcy;"],[0,"&GJcy;"],[0,"&Jukcy;"],[0,"&DScy;"],[0,"&Iukcy;"],[0,"&YIcy;"],[0,"&Jsercy;"],[0,"&LJcy;"],[0,"&NJcy;"],[0,"&TSHcy;"],[0,"&KJcy;"],[1,"&Ubrcy;"],[0,"&DZcy;"],[0,"&Acy;"],[0,"&Bcy;"],[0,"&Vcy;"],[0,"&Gcy;"],[0,"&Dcy;"],[0,"&IEcy;"],[0,"&ZHcy;"],[0,"&Zcy;"],[0,"&Icy;"],[0,"&Jcy;"],[0,"&Kcy;"],[0,"&Lcy;"],[0,"&Mcy;"],[0,"&Ncy;"],[0,"&Ocy;"],[0,"&Pcy;"],[0,"&Rcy;"],[0,"&Scy;"],[0,"&Tcy;"],[0,"&Ucy;"],[0,"&Fcy;"],[0,"&KHcy;"],[0,"&TScy;"],[0,"&CHcy;"],[0,"&SHcy;"],[0,"&SHCHcy;"],[0,"&HARDcy;"],[0,"&Ycy;"],[0,"&SOFTcy;"],[0,"&Ecy;"],[0,"&YUcy;"],[0,"&YAcy;"],[0,"&acy;"],[0,"&bcy;"],[0,"&vcy;"],[0,"&gcy;"],[0,"&dcy;"],[0,"&iecy;"],[0,"&zhcy;"],[0,"&zcy;"],[0,"&icy;"],[0,"&jcy;"],[0,"&kcy;"],[0,"&lcy;"],[0,"&mcy;"],[0,"&ncy;"],[0,"&ocy;"],[0,"&pcy;"],[0,"&rcy;"],[0,"&scy;"],[0,"&tcy;"],[0,"&ucy;"],[0,"&fcy;"],[0,"&khcy;"],[0,"&tscy;"],[0,"&chcy;"],[0,"&shcy;"],[0,"&shchcy;"],[0,"&hardcy;"],[0,"&ycy;"],[0,"&softcy;"],[0,"&ecy;"],[0,"&yucy;"],[0,"&yacy;"],[1,"&iocy;"],[0,"&djcy;"],[0,"&gjcy;"],[0,"&jukcy;"],[0,"&dscy;"],[0,"&iukcy;"],[0,"&yicy;"],[0,"&jsercy;"],[0,"&ljcy;"],[0,"&njcy;"],[0,"&tshcy;"],[0,"&kjcy;"],[1,"&ubrcy;"],[0,"&dzcy;"],[7074,"&ensp;"],[0,"&emsp;"],[0,"&emsp13;"],[0,"&emsp14;"],[1,"&numsp;"],[0,"&puncsp;"],[0,"&ThinSpace;"],[0,"&hairsp;"],[0,"&NegativeMediumSpace;"],[0,"&zwnj;"],[0,"&zwj;"],[0,"&lrm;"],[0,"&rlm;"],[0,"&dash;"],[2,"&ndash;"],[0,"&mdash;"],[0,"&horbar;"],[0,"&Verbar;"],[1,"&lsquo;"],[0,"&CloseCurlyQuote;"],[0,"&lsquor;"],[1,"&ldquo;"],[0,"&CloseCurlyDoubleQuote;"],[0,"&bdquo;"],[1,"&dagger;"],[0,"&Dagger;"],[0,"&bull;"],[2,"&nldr;"],[0,"&hellip;"],[9,"&permil;"],[0,"&pertenk;"],[0,"&prime;"],[0,"&Prime;"],[0,"&tprime;"],[0,"&backprime;"],[3,"&lsaquo;"],[0,"&rsaquo;"],[3,"&oline;"],[2,"&caret;"],[1,"&hybull;"],[0,"&frasl;"],[10,"&bsemi;"],[7,"&qprime;"],[7,{v:"&MediumSpace;",n:8202,o:"&ThickSpace;"}],[0,"&NoBreak;"],[0,"&af;"],[0,"&InvisibleTimes;"],[0,"&ic;"],[72,"&euro;"],[46,"&tdot;"],[0,"&DotDot;"],[37,"&complexes;"],[2,"&incare;"],[4,"&gscr;"],[0,"&hamilt;"],[0,"&Hfr;"],[0,"&Hopf;"],[0,"&planckh;"],[0,"&hbar;"],[0,"&imagline;"],[0,"&Ifr;"],[0,"&lagran;"],[0,"&ell;"],[1,"&naturals;"],[0,"&numero;"],[0,"&copysr;"],[0,"&weierp;"],[0,"&Popf;"],[0,"&Qopf;"],[0,"&realine;"],[0,"&real;"],[0,"&reals;"],[0,"&rx;"],[3,"&trade;"],[1,"&integers;"],[2,"&mho;"],[0,"&zeetrf;"],[0,"&iiota;"],[2,"&bernou;"],[0,"&Cayleys;"],[1,"&escr;"],[0,"&Escr;"],[0,"&Fouriertrf;"],[1,"&Mellintrf;"],[0,"&order;"],[0,"&alefsym;"],[0,"&beth;"],[0,"&gimel;"],[0,"&daleth;"],[12,"&CapitalDifferentialD;"],[0,"&dd;"],[0,"&ee;"],[0,"&ii;"],[10,"&frac13;"],[0,"&frac23;"],[0,"&frac15;"],[0,"&frac25;"],[0,"&frac35;"],[0,"&frac45;"],[0,"&frac16;"],[0,"&frac56;"],[0,"&frac18;"],[0,"&frac38;"],[0,"&frac58;"],[0,"&frac78;"],[49,"&larr;"],[0,"&ShortUpArrow;"],[0,"&rarr;"],[0,"&darr;"],[0,"&harr;"],[0,"&updownarrow;"],[0,"&nwarr;"],[0,"&nearr;"],[0,"&LowerRightArrow;"],[0,"&LowerLeftArrow;"],[0,"&nlarr;"],[0,"&nrarr;"],[1,{v:"&rarrw;",n:824,o:"&nrarrw;"}],[0,"&Larr;"],[0,"&Uarr;"],[0,"&Rarr;"],[0,"&Darr;"],[0,"&larrtl;"],[0,"&rarrtl;"],[0,"&LeftTeeArrow;"],[0,"&mapstoup;"],[0,"&map;"],[0,"&DownTeeArrow;"],[1,"&hookleftarrow;"],[0,"&hookrightarrow;"],[0,"&larrlp;"],[0,"&looparrowright;"],[0,"&harrw;"],[0,"&nharr;"],[1,"&lsh;"],[0,"&rsh;"],[0,"&ldsh;"],[0,"&rdsh;"],[1,"&crarr;"],[0,"&cularr;"],[0,"&curarr;"],[2,"&circlearrowleft;"],[0,"&circlearrowright;"],[0,"&leftharpoonup;"],[0,"&DownLeftVector;"],[0,"&RightUpVector;"],[0,"&LeftUpVector;"],[0,"&rharu;"],[0,"&DownRightVector;"],[0,"&dharr;"],[0,"&dharl;"],[0,"&RightArrowLeftArrow;"],[0,"&udarr;"],[0,"&LeftArrowRightArrow;"],[0,"&leftleftarrows;"],[0,"&upuparrows;"],[0,"&rightrightarrows;"],[0,"&ddarr;"],[0,"&leftrightharpoons;"],[0,"&Equilibrium;"],[0,"&nlArr;"],[0,"&nhArr;"],[0,"&nrArr;"],[0,"&DoubleLeftArrow;"],[0,"&DoubleUpArrow;"],[0,"&DoubleRightArrow;"],[0,"&dArr;"],[0,"&DoubleLeftRightArrow;"],[0,"&DoubleUpDownArrow;"],[0,"&nwArr;"],[0,"&neArr;"],[0,"&seArr;"],[0,"&swArr;"],[0,"&lAarr;"],[0,"&rAarr;"],[1,"&zigrarr;"],[6,"&larrb;"],[0,"&rarrb;"],[15,"&DownArrowUpArrow;"],[7,"&loarr;"],[0,"&roarr;"],[0,"&hoarr;"],[0,"&forall;"],[0,"&comp;"],[0,{v:"&part;",n:824,o:"&npart;"}],[0,"&exist;"],[0,"&nexist;"],[0,"&empty;"],[1,"&Del;"],[0,"&Element;"],[0,"&NotElement;"],[1,"&ni;"],[0,"&notni;"],[2,"&prod;"],[0,"&coprod;"],[0,"&sum;"],[0,"&minus;"],[0,"&MinusPlus;"],[0,"&dotplus;"],[1,"&Backslash;"],[0,"&lowast;"],[0,"&compfn;"],[1,"&radic;"],[2,"&prop;"],[0,"&infin;"],[0,"&angrt;"],[0,{v:"&ang;",n:8402,o:"&nang;"}],[0,"&angmsd;"],[0,"&angsph;"],[0,"&mid;"],[0,"&nmid;"],[0,"&DoubleVerticalBar;"],[0,"&NotDoubleVerticalBar;"],[0,"&and;"],[0,"&or;"],[0,{v:"&cap;",n:65024,o:"&caps;"}],[0,{v:"&cup;",n:65024,o:"&cups;"}],[0,"&int;"],[0,"&Int;"],[0,"&iiint;"],[0,"&conint;"],[0,"&Conint;"],[0,"&Cconint;"],[0,"&cwint;"],[0,"&ClockwiseContourIntegral;"],[0,"&awconint;"],[0,"&there4;"],[0,"&becaus;"],[0,"&ratio;"],[0,"&Colon;"],[0,"&dotminus;"],[1,"&mDDot;"],[0,"&homtht;"],[0,{v:"&sim;",n:8402,o:"&nvsim;"}],[0,{v:"&backsim;",n:817,o:"&race;"}],[0,{v:"&ac;",n:819,o:"&acE;"}],[0,"&acd;"],[0,"&VerticalTilde;"],[0,"&NotTilde;"],[0,{v:"&eqsim;",n:824,o:"&nesim;"}],[0,"&sime;"],[0,"&NotTildeEqual;"],[0,"&cong;"],[0,"&simne;"],[0,"&ncong;"],[0,"&ap;"],[0,"&nap;"],[0,"&ape;"],[0,{v:"&apid;",n:824,o:"&napid;"}],[0,"&backcong;"],[0,{v:"&asympeq;",n:8402,o:"&nvap;"}],[0,{v:"&bump;",n:824,o:"&nbump;"}],[0,{v:"&bumpe;",n:824,o:"&nbumpe;"}],[0,{v:"&doteq;",n:824,o:"&nedot;"}],[0,"&doteqdot;"],[0,"&efDot;"],[0,"&erDot;"],[0,"&Assign;"],[0,"&ecolon;"],[0,"&ecir;"],[0,"&circeq;"],[1,"&wedgeq;"],[0,"&veeeq;"],[1,"&triangleq;"],[2,"&equest;"],[0,"&ne;"],[0,{v:"&Congruent;",n:8421,o:"&bnequiv;"}],[0,"&nequiv;"],[1,{v:"&le;",n:8402,o:"&nvle;"}],[0,{v:"&ge;",n:8402,o:"&nvge;"}],[0,{v:"&lE;",n:824,o:"&nlE;"}],[0,{v:"&gE;",n:824,o:"&ngE;"}],[0,{v:"&lnE;",n:65024,o:"&lvertneqq;"}],[0,{v:"&gnE;",n:65024,o:"&gvertneqq;"}],[0,{v:"&ll;",n:new Map(t([[824,"&nLtv;"],[7577,"&nLt;"]]))}],[0,{v:"&gg;",n:new Map(t([[824,"&nGtv;"],[7577,"&nGt;"]]))}],[0,"&between;"],[0,"&NotCupCap;"],[0,"&nless;"],[0,"&ngt;"],[0,"&nle;"],[0,"&nge;"],[0,"&lesssim;"],[0,"&GreaterTilde;"],[0,"&nlsim;"],[0,"&ngsim;"],[0,"&LessGreater;"],[0,"&gl;"],[0,"&NotLessGreater;"],[0,"&NotGreaterLess;"],[0,"&pr;"],[0,"&sc;"],[0,"&prcue;"],[0,"&sccue;"],[0,"&PrecedesTilde;"],[0,{v:"&scsim;",n:824,o:"&NotSucceedsTilde;"}],[0,"&NotPrecedes;"],[0,"&NotSucceeds;"],[0,{v:"&sub;",n:8402,o:"&NotSubset;"}],[0,{v:"&sup;",n:8402,o:"&NotSuperset;"}],[0,"&nsub;"],[0,"&nsup;"],[0,"&sube;"],[0,"&supe;"],[0,"&NotSubsetEqual;"],[0,"&NotSupersetEqual;"],[0,{v:"&subne;",n:65024,o:"&varsubsetneq;"}],[0,{v:"&supne;",n:65024,o:"&varsupsetneq;"}],[1,"&cupdot;"],[0,"&UnionPlus;"],[0,{v:"&sqsub;",n:824,o:"&NotSquareSubset;"}],[0,{v:"&sqsup;",n:824,o:"&NotSquareSuperset;"}],[0,"&sqsube;"],[0,"&sqsupe;"],[0,{v:"&sqcap;",n:65024,o:"&sqcaps;"}],[0,{v:"&sqcup;",n:65024,o:"&sqcups;"}],[0,"&CirclePlus;"],[0,"&CircleMinus;"],[0,"&CircleTimes;"],[0,"&osol;"],[0,"&CircleDot;"],[0,"&circledcirc;"],[0,"&circledast;"],[1,"&circleddash;"],[0,"&boxplus;"],[0,"&boxminus;"],[0,"&boxtimes;"],[0,"&dotsquare;"],[0,"&RightTee;"],[0,"&dashv;"],[0,"&DownTee;"],[0,"&bot;"],[1,"&models;"],[0,"&DoubleRightTee;"],[0,"&Vdash;"],[0,"&Vvdash;"],[0,"&VDash;"],[0,"&nvdash;"],[0,"&nvDash;"],[0,"&nVdash;"],[0,"&nVDash;"],[0,"&prurel;"],[1,"&LeftTriangle;"],[0,"&RightTriangle;"],[0,{v:"&LeftTriangleEqual;",n:8402,o:"&nvltrie;"}],[0,{v:"&RightTriangleEqual;",n:8402,o:"&nvrtrie;"}],[0,"&origof;"],[0,"&imof;"],[0,"&multimap;"],[0,"&hercon;"],[0,"&intcal;"],[0,"&veebar;"],[1,"&barvee;"],[0,"&angrtvb;"],[0,"&lrtri;"],[0,"&bigwedge;"],[0,"&bigvee;"],[0,"&bigcap;"],[0,"&bigcup;"],[0,"&diam;"],[0,"&sdot;"],[0,"&sstarf;"],[0,"&divideontimes;"],[0,"&bowtie;"],[0,"&ltimes;"],[0,"&rtimes;"],[0,"&leftthreetimes;"],[0,"&rightthreetimes;"],[0,"&backsimeq;"],[0,"&curlyvee;"],[0,"&curlywedge;"],[0,"&Sub;"],[0,"&Sup;"],[0,"&Cap;"],[0,"&Cup;"],[0,"&fork;"],[0,"&epar;"],[0,"&lessdot;"],[0,"&gtdot;"],[0,{v:"&Ll;",n:824,o:"&nLl;"}],[0,{v:"&Gg;",n:824,o:"&nGg;"}],[0,{v:"&leg;",n:65024,o:"&lesg;"}],[0,{v:"&gel;",n:65024,o:"&gesl;"}],[2,"&cuepr;"],[0,"&cuesc;"],[0,"&NotPrecedesSlantEqual;"],[0,"&NotSucceedsSlantEqual;"],[0,"&NotSquareSubsetEqual;"],[0,"&NotSquareSupersetEqual;"],[2,"&lnsim;"],[0,"&gnsim;"],[0,"&precnsim;"],[0,"&scnsim;"],[0,"&nltri;"],[0,"&NotRightTriangle;"],[0,"&nltrie;"],[0,"&NotRightTriangleEqual;"],[0,"&vellip;"],[0,"&ctdot;"],[0,"&utdot;"],[0,"&dtdot;"],[0,"&disin;"],[0,"&isinsv;"],[0,"&isins;"],[0,{v:"&isindot;",n:824,o:"&notindot;"}],[0,"&notinvc;"],[0,"&notinvb;"],[1,{v:"&isinE;",n:824,o:"&notinE;"}],[0,"&nisd;"],[0,"&xnis;"],[0,"&nis;"],[0,"&notnivc;"],[0,"&notnivb;"],[6,"&barwed;"],[0,"&Barwed;"],[1,"&lceil;"],[0,"&rceil;"],[0,"&LeftFloor;"],[0,"&rfloor;"],[0,"&drcrop;"],[0,"&dlcrop;"],[0,"&urcrop;"],[0,"&ulcrop;"],[0,"&bnot;"],[1,"&profline;"],[0,"&profsurf;"],[1,"&telrec;"],[0,"&target;"],[5,"&ulcorn;"],[0,"&urcorn;"],[0,"&dlcorn;"],[0,"&drcorn;"],[2,"&frown;"],[0,"&smile;"],[9,"&cylcty;"],[0,"&profalar;"],[7,"&topbot;"],[6,"&ovbar;"],[1,"&solbar;"],[60,"&angzarr;"],[51,"&lmoustache;"],[0,"&rmoustache;"],[2,"&OverBracket;"],[0,"&bbrk;"],[0,"&bbrktbrk;"],[37,"&OverParenthesis;"],[0,"&UnderParenthesis;"],[0,"&OverBrace;"],[0,"&UnderBrace;"],[2,"&trpezium;"],[4,"&elinters;"],[59,"&blank;"],[164,"&circledS;"],[55,"&boxh;"],[1,"&boxv;"],[9,"&boxdr;"],[3,"&boxdl;"],[3,"&boxur;"],[3,"&boxul;"],[3,"&boxvr;"],[7,"&boxvl;"],[7,"&boxhd;"],[7,"&boxhu;"],[7,"&boxvh;"],[19,"&boxH;"],[0,"&boxV;"],[0,"&boxdR;"],[0,"&boxDr;"],[0,"&boxDR;"],[0,"&boxdL;"],[0,"&boxDl;"],[0,"&boxDL;"],[0,"&boxuR;"],[0,"&boxUr;"],[0,"&boxUR;"],[0,"&boxuL;"],[0,"&boxUl;"],[0,"&boxUL;"],[0,"&boxvR;"],[0,"&boxVr;"],[0,"&boxVR;"],[0,"&boxvL;"],[0,"&boxVl;"],[0,"&boxVL;"],[0,"&boxHd;"],[0,"&boxhD;"],[0,"&boxHD;"],[0,"&boxHu;"],[0,"&boxhU;"],[0,"&boxHU;"],[0,"&boxvH;"],[0,"&boxVh;"],[0,"&boxVH;"],[19,"&uhblk;"],[3,"&lhblk;"],[3,"&block;"],[8,"&blk14;"],[0,"&blk12;"],[0,"&blk34;"],[13,"&square;"],[8,"&blacksquare;"],[0,"&EmptyVerySmallSquare;"],[1,"&rect;"],[0,"&marker;"],[2,"&fltns;"],[1,"&bigtriangleup;"],[0,"&blacktriangle;"],[0,"&triangle;"],[2,"&blacktriangleright;"],[0,"&rtri;"],[3,"&bigtriangledown;"],[0,"&blacktriangledown;"],[0,"&dtri;"],[2,"&blacktriangleleft;"],[0,"&ltri;"],[6,"&loz;"],[0,"&cir;"],[32,"&tridot;"],[2,"&bigcirc;"],[8,"&ultri;"],[0,"&urtri;"],[0,"&lltri;"],[0,"&EmptySmallSquare;"],[0,"&FilledSmallSquare;"],[8,"&bigstar;"],[0,"&star;"],[7,"&phone;"],[49,"&female;"],[1,"&male;"],[29,"&spades;"],[2,"&clubs;"],[1,"&hearts;"],[0,"&diamondsuit;"],[3,"&sung;"],[2,"&flat;"],[0,"&natural;"],[0,"&sharp;"],[163,"&check;"],[3,"&cross;"],[8,"&malt;"],[21,"&sext;"],[33,"&VerticalSeparator;"],[25,"&lbbrk;"],[0,"&rbbrk;"],[84,"&bsolhsub;"],[0,"&suphsol;"],[28,"&LeftDoubleBracket;"],[0,"&RightDoubleBracket;"],[0,"&lang;"],[0,"&rang;"],[0,"&Lang;"],[0,"&Rang;"],[0,"&loang;"],[0,"&roang;"],[7,"&longleftarrow;"],[0,"&longrightarrow;"],[0,"&longleftrightarrow;"],[0,"&DoubleLongLeftArrow;"],[0,"&DoubleLongRightArrow;"],[0,"&DoubleLongLeftRightArrow;"],[1,"&longmapsto;"],[2,"&dzigrarr;"],[258,"&nvlArr;"],[0,"&nvrArr;"],[0,"&nvHarr;"],[0,"&Map;"],[6,"&lbarr;"],[0,"&bkarow;"],[0,"&lBarr;"],[0,"&dbkarow;"],[0,"&drbkarow;"],[0,"&DDotrahd;"],[0,"&UpArrowBar;"],[0,"&DownArrowBar;"],[2,"&Rarrtl;"],[2,"&latail;"],[0,"&ratail;"],[0,"&lAtail;"],[0,"&rAtail;"],[0,"&larrfs;"],[0,"&rarrfs;"],[0,"&larrbfs;"],[0,"&rarrbfs;"],[2,"&nwarhk;"],[0,"&nearhk;"],[0,"&hksearow;"],[0,"&hkswarow;"],[0,"&nwnear;"],[0,"&nesear;"],[0,"&seswar;"],[0,"&swnwar;"],[8,{v:"&rarrc;",n:824,o:"&nrarrc;"}],[1,"&cudarrr;"],[0,"&ldca;"],[0,"&rdca;"],[0,"&cudarrl;"],[0,"&larrpl;"],[2,"&curarrm;"],[0,"&cularrp;"],[7,"&rarrpl;"],[2,"&harrcir;"],[0,"&Uarrocir;"],[0,"&lurdshar;"],[0,"&ldrushar;"],[2,"&LeftRightVector;"],[0,"&RightUpDownVector;"],[0,"&DownLeftRightVector;"],[0,"&LeftUpDownVector;"],[0,"&LeftVectorBar;"],[0,"&RightVectorBar;"],[0,"&RightUpVectorBar;"],[0,"&RightDownVectorBar;"],[0,"&DownLeftVectorBar;"],[0,"&DownRightVectorBar;"],[0,"&LeftUpVectorBar;"],[0,"&LeftDownVectorBar;"],[0,"&LeftTeeVector;"],[0,"&RightTeeVector;"],[0,"&RightUpTeeVector;"],[0,"&RightDownTeeVector;"],[0,"&DownLeftTeeVector;"],[0,"&DownRightTeeVector;"],[0,"&LeftUpTeeVector;"],[0,"&LeftDownTeeVector;"],[0,"&lHar;"],[0,"&uHar;"],[0,"&rHar;"],[0,"&dHar;"],[0,"&luruhar;"],[0,"&ldrdhar;"],[0,"&ruluhar;"],[0,"&rdldhar;"],[0,"&lharul;"],[0,"&llhard;"],[0,"&rharul;"],[0,"&lrhard;"],[0,"&udhar;"],[0,"&duhar;"],[0,"&RoundImplies;"],[0,"&erarr;"],[0,"&simrarr;"],[0,"&larrsim;"],[0,"&rarrsim;"],[0,"&rarrap;"],[0,"&ltlarr;"],[1,"&gtrarr;"],[0,"&subrarr;"],[1,"&suplarr;"],[0,"&lfisht;"],[0,"&rfisht;"],[0,"&ufisht;"],[0,"&dfisht;"],[5,"&lopar;"],[0,"&ropar;"],[4,"&lbrke;"],[0,"&rbrke;"],[0,"&lbrkslu;"],[0,"&rbrksld;"],[0,"&lbrksld;"],[0,"&rbrkslu;"],[0,"&langd;"],[0,"&rangd;"],[0,"&lparlt;"],[0,"&rpargt;"],[0,"&gtlPar;"],[0,"&ltrPar;"],[3,"&vzigzag;"],[1,"&vangrt;"],[0,"&angrtvbd;"],[6,"&ange;"],[0,"&range;"],[0,"&dwangle;"],[0,"&uwangle;"],[0,"&angmsdaa;"],[0,"&angmsdab;"],[0,"&angmsdac;"],[0,"&angmsdad;"],[0,"&angmsdae;"],[0,"&angmsdaf;"],[0,"&angmsdag;"],[0,"&angmsdah;"],[0,"&bemptyv;"],[0,"&demptyv;"],[0,"&cemptyv;"],[0,"&raemptyv;"],[0,"&laemptyv;"],[0,"&ohbar;"],[0,"&omid;"],[0,"&opar;"],[1,"&operp;"],[1,"&olcross;"],[0,"&odsold;"],[1,"&olcir;"],[0,"&ofcir;"],[0,"&olt;"],[0,"&ogt;"],[0,"&cirscir;"],[0,"&cirE;"],[0,"&solb;"],[0,"&bsolb;"],[3,"&boxbox;"],[3,"&trisb;"],[0,"&rtriltri;"],[0,{v:"&LeftTriangleBar;",n:824,o:"&NotLeftTriangleBar;"}],[0,{v:"&RightTriangleBar;",n:824,o:"&NotRightTriangleBar;"}],[11,"&iinfin;"],[0,"&infintie;"],[0,"&nvinfin;"],[4,"&eparsl;"],[0,"&smeparsl;"],[0,"&eqvparsl;"],[5,"&blacklozenge;"],[8,"&RuleDelayed;"],[1,"&dsol;"],[9,"&bigodot;"],[0,"&bigoplus;"],[0,"&bigotimes;"],[1,"&biguplus;"],[1,"&bigsqcup;"],[5,"&iiiint;"],[0,"&fpartint;"],[2,"&cirfnint;"],[0,"&awint;"],[0,"&rppolint;"],[0,"&scpolint;"],[0,"&npolint;"],[0,"&pointint;"],[0,"&quatint;"],[0,"&intlarhk;"],[10,"&pluscir;"],[0,"&plusacir;"],[0,"&simplus;"],[0,"&plusdu;"],[0,"&plussim;"],[0,"&plustwo;"],[1,"&mcomma;"],[0,"&minusdu;"],[2,"&loplus;"],[0,"&roplus;"],[0,"&Cross;"],[0,"&timesd;"],[0,"&timesbar;"],[1,"&smashp;"],[0,"&lotimes;"],[0,"&rotimes;"],[0,"&otimesas;"],[0,"&Otimes;"],[0,"&odiv;"],[0,"&triplus;"],[0,"&triminus;"],[0,"&tritime;"],[0,"&intprod;"],[2,"&amalg;"],[0,"&capdot;"],[1,"&ncup;"],[0,"&ncap;"],[0,"&capand;"],[0,"&cupor;"],[0,"&cupcap;"],[0,"&capcup;"],[0,"&cupbrcap;"],[0,"&capbrcup;"],[0,"&cupcup;"],[0,"&capcap;"],[0,"&ccups;"],[0,"&ccaps;"],[2,"&ccupssm;"],[2,"&And;"],[0,"&Or;"],[0,"&andand;"],[0,"&oror;"],[0,"&orslope;"],[0,"&andslope;"],[1,"&andv;"],[0,"&orv;"],[0,"&andd;"],[0,"&ord;"],[1,"&wedbar;"],[6,"&sdote;"],[3,"&simdot;"],[2,{v:"&congdot;",n:824,o:"&ncongdot;"}],[0,"&easter;"],[0,"&apacir;"],[0,{v:"&apE;",n:824,o:"&napE;"}],[0,"&eplus;"],[0,"&pluse;"],[0,"&Esim;"],[0,"&Colone;"],[0,"&Equal;"],[1,"&ddotseq;"],[0,"&equivDD;"],[0,"&ltcir;"],[0,"&gtcir;"],[0,"&ltquest;"],[0,"&gtquest;"],[0,{v:"&leqslant;",n:824,o:"&nleqslant;"}],[0,{v:"&geqslant;",n:824,o:"&ngeqslant;"}],[0,"&lesdot;"],[0,"&gesdot;"],[0,"&lesdoto;"],[0,"&gesdoto;"],[0,"&lesdotor;"],[0,"&gesdotol;"],[0,"&lap;"],[0,"&gap;"],[0,"&lne;"],[0,"&gne;"],[0,"&lnap;"],[0,"&gnap;"],[0,"&lEg;"],[0,"&gEl;"],[0,"&lsime;"],[0,"&gsime;"],[0,"&lsimg;"],[0,"&gsiml;"],[0,"&lgE;"],[0,"&glE;"],[0,"&lesges;"],[0,"&gesles;"],[0,"&els;"],[0,"&egs;"],[0,"&elsdot;"],[0,"&egsdot;"],[0,"&el;"],[0,"&eg;"],[2,"&siml;"],[0,"&simg;"],[0,"&simlE;"],[0,"&simgE;"],[0,{v:"&LessLess;",n:824,o:"&NotNestedLessLess;"}],[0,{v:"&GreaterGreater;",n:824,o:"&NotNestedGreaterGreater;"}],[1,"&glj;"],[0,"&gla;"],[0,"&ltcc;"],[0,"&gtcc;"],[0,"&lescc;"],[0,"&gescc;"],[0,"&smt;"],[0,"&lat;"],[0,{v:"&smte;",n:65024,o:"&smtes;"}],[0,{v:"&late;",n:65024,o:"&lates;"}],[0,"&bumpE;"],[0,{v:"&PrecedesEqual;",n:824,o:"&NotPrecedesEqual;"}],[0,{v:"&sce;",n:824,o:"&NotSucceedsEqual;"}],[2,"&prE;"],[0,"&scE;"],[0,"&precneqq;"],[0,"&scnE;"],[0,"&prap;"],[0,"&scap;"],[0,"&precnapprox;"],[0,"&scnap;"],[0,"&Pr;"],[0,"&Sc;"],[0,"&subdot;"],[0,"&supdot;"],[0,"&subplus;"],[0,"&supplus;"],[0,"&submult;"],[0,"&supmult;"],[0,"&subedot;"],[0,"&supedot;"],[0,{v:"&subE;",n:824,o:"&nsubE;"}],[0,{v:"&supE;",n:824,o:"&nsupE;"}],[0,"&subsim;"],[0,"&supsim;"],[2,{v:"&subnE;",n:65024,o:"&varsubsetneqq;"}],[0,{v:"&supnE;",n:65024,o:"&varsupsetneqq;"}],[2,"&csub;"],[0,"&csup;"],[0,"&csube;"],[0,"&csupe;"],[0,"&subsup;"],[0,"&supsub;"],[0,"&subsub;"],[0,"&supsup;"],[0,"&suphsub;"],[0,"&supdsub;"],[0,"&forkv;"],[0,"&topfork;"],[0,"&mlcp;"],[8,"&Dashv;"],[1,"&Vdashl;"],[0,"&Barv;"],[0,"&vBar;"],[0,"&vBarv;"],[1,"&Vbar;"],[0,"&Not;"],[0,"&bNot;"],[0,"&rnmid;"],[0,"&cirmid;"],[0,"&midcir;"],[0,"&topcir;"],[0,"&nhpar;"],[0,"&parsim;"],[9,{v:"&parsl;",n:8421,o:"&nparsl;"}],[44343,{n:new Map(t([[56476,"&Ascr;"],[1,"&Cscr;"],[0,"&Dscr;"],[2,"&Gscr;"],[2,"&Jscr;"],[0,"&Kscr;"],[2,"&Nscr;"],[0,"&Oscr;"],[0,"&Pscr;"],[0,"&Qscr;"],[1,"&Sscr;"],[0,"&Tscr;"],[0,"&Uscr;"],[0,"&Vscr;"],[0,"&Wscr;"],[0,"&Xscr;"],[0,"&Yscr;"],[0,"&Zscr;"],[0,"&ascr;"],[0,"&bscr;"],[0,"&cscr;"],[0,"&dscr;"],[1,"&fscr;"],[1,"&hscr;"],[0,"&iscr;"],[0,"&jscr;"],[0,"&kscr;"],[0,"&lscr;"],[0,"&mscr;"],[0,"&nscr;"],[1,"&pscr;"],[0,"&qscr;"],[0,"&rscr;"],[0,"&sscr;"],[0,"&tscr;"],[0,"&uscr;"],[0,"&vscr;"],[0,"&wscr;"],[0,"&xscr;"],[0,"&yscr;"],[0,"&zscr;"],[52,"&Afr;"],[0,"&Bfr;"],[1,"&Dfr;"],[0,"&Efr;"],[0,"&Ffr;"],[0,"&Gfr;"],[2,"&Jfr;"],[0,"&Kfr;"],[0,"&Lfr;"],[0,"&Mfr;"],[0,"&Nfr;"],[0,"&Ofr;"],[0,"&Pfr;"],[0,"&Qfr;"],[1,"&Sfr;"],[0,"&Tfr;"],[0,"&Ufr;"],[0,"&Vfr;"],[0,"&Wfr;"],[0,"&Xfr;"],[0,"&Yfr;"],[1,"&afr;"],[0,"&bfr;"],[0,"&cfr;"],[0,"&dfr;"],[0,"&efr;"],[0,"&ffr;"],[0,"&gfr;"],[0,"&hfr;"],[0,"&ifr;"],[0,"&jfr;"],[0,"&kfr;"],[0,"&lfr;"],[0,"&mfr;"],[0,"&nfr;"],[0,"&ofr;"],[0,"&pfr;"],[0,"&qfr;"],[0,"&rfr;"],[0,"&sfr;"],[0,"&tfr;"],[0,"&ufr;"],[0,"&vfr;"],[0,"&wfr;"],[0,"&xfr;"],[0,"&yfr;"],[0,"&zfr;"],[0,"&Aopf;"],[0,"&Bopf;"],[1,"&Dopf;"],[0,"&Eopf;"],[0,"&Fopf;"],[0,"&Gopf;"],[1,"&Iopf;"],[0,"&Jopf;"],[0,"&Kopf;"],[0,"&Lopf;"],[0,"&Mopf;"],[1,"&Oopf;"],[3,"&Sopf;"],[0,"&Topf;"],[0,"&Uopf;"],[0,"&Vopf;"],[0,"&Wopf;"],[0,"&Xopf;"],[0,"&Yopf;"],[1,"&aopf;"],[0,"&bopf;"],[0,"&copf;"],[0,"&dopf;"],[0,"&eopf;"],[0,"&fopf;"],[0,"&gopf;"],[0,"&hopf;"],[0,"&iopf;"],[0,"&jopf;"],[0,"&kopf;"],[0,"&lopf;"],[0,"&mopf;"],[0,"&nopf;"],[0,"&oopf;"],[0,"&popf;"],[0,"&qopf;"],[0,"&ropf;"],[0,"&sopf;"],[0,"&topf;"],[0,"&uopf;"],[0,"&vopf;"],[0,"&wopf;"],[0,"&xopf;"],[0,"&yopf;"],[0,"&zopf;"]]))}],[8906,"&fflig;"],[0,"&filig;"],[0,"&fllig;"],[0,"&ffilig;"],[0,"&ffllig;"]])),vt}var dn={},cs;function Pn(){return cs||(cs=1,function(t){Object.defineProperty(t,"__esModule",{value:!0}),t.escapeText=t.escapeAttribute=t.escapeUTF8=t.escape=t.encodeXML=t.getCodePoint=t.xmlReplacer=void 0,t.xmlReplacer=/["&'<>$\x80-\uFFFF]/g;var e=new Map([[34,"&quot;"],[38,"&amp;"],[39,"&apos;"],[60,"&lt;"],[62,"&gt;"]]);t.getCodePoint=String.prototype.codePointAt!=null?function(s,r){return s.codePointAt(r)}:function(s,r){return(s.charCodeAt(r)&64512)===55296?(s.charCodeAt(r)-55296)*1024+s.charCodeAt(r+1)-56320+65536:s.charCodeAt(r)};function n(s){for(var r="",i=0,o;(o=t.xmlReplacer.exec(s))!==null;){var l=o.index,m=s.charCodeAt(l),g=e.get(m);g!==void 0?(r+=s.substring(i,l)+g,i=l+1):(r+="".concat(s.substring(i,l),"&#x").concat((0,t.getCodePoint)(s,l).toString(16),";"),i=t.xmlReplacer.lastIndex+=Number((m&64512)===55296))}return r+s.substr(i)}t.encodeXML=n,t.escape=n;function a(s,r){return function(o){for(var l,m=0,g="";l=s.exec(o);)m!==l.index&&(g+=o.substring(m,l.index)),g+=r.get(l[0].charCodeAt(0)),m=l.index+1;return g+o.substring(m)}}t.escapeUTF8=a(/[&<>'"]/g,e),t.escapeAttribute=a(/["&\u00A0]/g,new Map([[34,"&quot;"],[38,"&amp;"],[160,"&nbsp;"]])),t.escapeText=a(/[&<>\u00A0]/g,new Map([[38,"&amp;"],[60,"&lt;"],[62,"&gt;"],[160,"&nbsp;"]]))}(dn)),dn}var gs;function ps(){if(gs)return De;gs=1;var t=q&&q.__importDefault||function(o){return o&&o.__esModule?o:{default:o}};Object.defineProperty(De,"__esModule",{value:!0}),De.encodeNonAsciiHTML=De.encodeHTML=void 0;var e=t(iF()),n=Pn(),a=/[\t\n!-,./:-@[-`\f{-}$\x80-\uFFFF]/g;function s(o){return i(a,o)}De.encodeHTML=s;function r(o){return i(n.xmlReplacer,o)}De.encodeNonAsciiHTML=r;function i(o,l){for(var m="",g=0,p;(p=o.exec(l))!==null;){var u=p.index;m+=l.substring(g,u);var c=l.charCodeAt(u),k=e.default.get(c);if(typeof k=="object"){if(u+1<l.length){var _=l.charCodeAt(u+1),x=typeof k.n=="number"?k.n===_?k.o:void 0:k.n.get(_);if(x!==void 0){m+=x,g=o.lastIndex+=1;continue}}k=k.v}if(k!==void 0)m+=k,g=u+1;else{var f=(0,n.getCodePoint)(l,u);m+="&#x".concat(f.toString(16),";"),g=o.lastIndex+=Number(f!==c)}}return m+l.substr(g)}return De}var bs;function lF(){return bs||(bs=1,function(t){Object.defineProperty(t,"__esModule",{value:!0}),t.decodeXMLStrict=t.decodeHTML5Strict=t.decodeHTML4Strict=t.decodeHTML5=t.decodeHTML4=t.decodeHTMLAttribute=t.decodeHTMLStrict=t.decodeHTML=t.decodeXML=t.DecodingMode=t.EntityDecoder=t.encodeHTML5=t.encodeHTML4=t.encodeNonAsciiHTML=t.encodeHTML=t.escapeText=t.escapeAttribute=t.escapeUTF8=t.escape=t.encodeXML=t.encode=t.decodeStrict=t.decode=t.EncodingMode=t.EntityLevel=void 0;var e=us(),n=ps(),a=Pn(),s;(function(u){u[u.XML=0]="XML",u[u.HTML=1]="HTML"})(s=t.EntityLevel||(t.EntityLevel={}));var r;(function(u){u[u.UTF8=0]="UTF8",u[u.ASCII=1]="ASCII",u[u.Extensive=2]="Extensive",u[u.Attribute=3]="Attribute",u[u.Text=4]="Text"})(r=t.EncodingMode||(t.EncodingMode={}));function i(u,c){c===void 0&&(c=s.XML);var k=typeof c=="number"?c:c.level;if(k===s.HTML){var _=typeof c=="object"?c.mode:void 0;return(0,e.decodeHTML)(u,_)}return(0,e.decodeXML)(u)}t.decode=i;function o(u,c){var k;c===void 0&&(c=s.XML);var _=typeof c=="number"?{level:c}:c;return(k=_.mode)!==null&&k!==void 0||(_.mode=e.DecodingMode.Strict),i(u,_)}t.decodeStrict=o;function l(u,c){c===void 0&&(c=s.XML);var k=typeof c=="number"?{level:c}:c;return k.mode===r.UTF8?(0,a.escapeUTF8)(u):k.mode===r.Attribute?(0,a.escapeAttribute)(u):k.mode===r.Text?(0,a.escapeText)(u):k.level===s.HTML?k.mode===r.ASCII?(0,n.encodeNonAsciiHTML)(u):(0,n.encodeHTML)(u):(0,a.encodeXML)(u)}t.encode=l;var m=Pn();Object.defineProperty(t,"encodeXML",{enumerable:!0,get:function(){return m.encodeXML}}),Object.defineProperty(t,"escape",{enumerable:!0,get:function(){return m.escape}}),Object.defineProperty(t,"escapeUTF8",{enumerable:!0,get:function(){return m.escapeUTF8}}),Object.defineProperty(t,"escapeAttribute",{enumerable:!0,get:function(){return m.escapeAttribute}}),Object.defineProperty(t,"escapeText",{enumerable:!0,get:function(){return m.escapeText}});var g=ps();Object.defineProperty(t,"encodeHTML",{enumerable:!0,get:function(){return g.encodeHTML}}),Object.defineProperty(t,"encodeNonAsciiHTML",{enumerable:!0,get:function(){return g.encodeNonAsciiHTML}}),Object.defineProperty(t,"encodeHTML4",{enumerable:!0,get:function(){return g.encodeHTML}}),Object.defineProperty(t,"encodeHTML5",{enumerable:!0,get:function(){return g.encodeHTML}});var p=us();Object.defineProperty(t,"EntityDecoder",{enumerable:!0,get:function(){return p.EntityDecoder}}),Object.defineProperty(t,"DecodingMode",{enumerable:!0,get:function(){return p.DecodingMode}}),Object.defineProperty(t,"decodeXML",{enumerable:!0,get:function(){return p.decodeXML}}),Object.defineProperty(t,"decodeHTML",{enumerable:!0,get:function(){return p.decodeHTML}}),Object.defineProperty(t,"decodeHTMLStrict",{enumerable:!0,get:function(){return p.decodeHTMLStrict}}),Object.defineProperty(t,"decodeHTMLAttribute",{enumerable:!0,get:function(){return p.decodeHTMLAttribute}}),Object.defineProperty(t,"decodeHTML4",{enumerable:!0,get:function(){return p.decodeHTML}}),Object.defineProperty(t,"decodeHTML5",{enumerable:!0,get:function(){return p.decodeHTML}}),Object.defineProperty(t,"decodeHTML4Strict",{enumerable:!0,get:function(){return p.decodeHTMLStrict}}),Object.defineProperty(t,"decodeHTML5Strict",{enumerable:!0,get:function(){return p.decodeHTMLStrict}}),Object.defineProperty(t,"decodeXMLStrict",{enumerable:!0,get:function(){return p.decodeXML}})}(gn)),gn}var Me={},ds;function uF(){return ds||(ds=1,Object.defineProperty(Me,"__esModule",{value:!0}),Me.attributeNames=Me.elementNames=void 0,Me.elementNames=new Map(["altGlyph","altGlyphDef","altGlyphItem","animateColor","animateMotion","animateTransform","clipPath","feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feDropShadow","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feImage","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence","foreignObject","glyphRef","linearGradient","radialGradient","textPath"].map(function(t){return[t.toLowerCase(),t]})),Me.attributeNames=new Map(["definitionURL","attributeName","attributeType","baseFrequency","baseProfile","calcMode","clipPathUnits","diffuseConstant","edgeMode","filterUnits","glyphRef","gradientTransform","gradientUnits","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","lengthAdjust","limitingConeAngle","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","numOctaves","pathLength","patternContentUnits","patternTransform","patternUnits","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","specularConstant","specularExponent","spreadMethod","startOffset","stdDeviation","stitchTiles","surfaceScale","systemLanguage","tableValues","targetX","targetY","textLength","viewBox","viewTarget","xChannelSelector","yChannelSelector","zoomAndPan"].map(function(t){return[t.toLowerCase(),t]}))),Me}var hs;function mr(){if(hs)return je;hs=1;var t=q&&q.__assign||function(){return t=Object.assign||function(v){for(var d,L=1,C=arguments.length;L<C;L++){d=arguments[L];for(var A in d)Object.prototype.hasOwnProperty.call(d,A)&&(v[A]=d[A])}return v},t.apply(this,arguments)},e=q&&q.__createBinding||(Object.create?function(v,d,L,C){C===void 0&&(C=L);var A=Object.getOwnPropertyDescriptor(d,L);(!A||("get"in A?!d.__esModule:A.writable||A.configurable))&&(A={enumerable:!0,get:function(){return d[L]}}),Object.defineProperty(v,C,A)}:function(v,d,L,C){C===void 0&&(C=L),v[C]=d[L]}),n=q&&q.__setModuleDefault||(Object.create?function(v,d){Object.defineProperty(v,"default",{enumerable:!0,value:d})}:function(v,d){v.default=d}),a=q&&q.__importStar||function(v){if(v&&v.__esModule)return v;var d={};if(v!=null)for(var L in v)L!=="default"&&Object.prototype.hasOwnProperty.call(v,L)&&e(d,v,L);return n(d,v),d};Object.defineProperty(je,"__esModule",{value:!0}),je.render=void 0;var s=a(ct()),r=lF(),i=uF(),o=new Set(["style","script","xmp","iframe","noembed","noframes","plaintext","noscript"]);function l(v){return v.replace(/"/g,"&quot;")}function m(v,d){var L;if(v){var C=((L=d.encodeEntities)!==null&&L!==void 0?L:d.decodeEntities)===!1?l:d.xmlMode||d.encodeEntities!=="utf8"?r.encodeXML:r.escapeAttribute;return Object.keys(v).map(function(A){var I,R,y=(I=v[A])!==null&&I!==void 0?I:"";return d.xmlMode==="foreign"&&(A=(R=i.attributeNames.get(A))!==null&&R!==void 0?R:A),!d.emptyAttrs&&!d.xmlMode&&y===""?A:"".concat(A,'="').concat(C(y),'"')}).join(" ")}}var g=new Set(["area","base","basefont","br","col","command","embed","frame","hr","img","input","isindex","keygen","link","meta","param","source","track","wbr"]);function p(v,d){d===void 0&&(d={});for(var L=("length"in v)?v:[v],C="",A=0;A<L.length;A++)C+=u(L[A],d);return C}je.render=p,je.default=p;function u(v,d){switch(v.type){case s.Root:return p(v.children,d);case s.Doctype:case s.Directive:return x(v);case s.Comment:return h(v);case s.CDATA:return b(v);case s.Script:case s.Style:case s.Tag:return _(v,d);case s.Text:return f(v,d)}}var c=new Set(["mi","mo","mn","ms","mtext","annotation-xml","foreignObject","desc","title"]),k=new Set(["svg","math"]);function _(v,d){var L;d.xmlMode==="foreign"&&(v.name=(L=i.elementNames.get(v.name))!==null&&L!==void 0?L:v.name,v.parent&&c.has(v.parent.name)&&(d=t(t({},d),{xmlMode:!1}))),!d.xmlMode&&k.has(v.name)&&(d=t(t({},d),{xmlMode:"foreign"}));var C="<".concat(v.name),A=m(v.attribs,d);return A&&(C+=" ".concat(A)),v.children.length===0&&(d.xmlMode?d.selfClosingTags!==!1:d.selfClosingTags&&g.has(v.name))?(d.xmlMode||(C+=" "),C+="/>"):(C+=">",v.children.length>0&&(C+=p(v.children,d)),(d.xmlMode||!g.has(v.name))&&(C+="</".concat(v.name,">"))),C}function x(v){return"<".concat(v.data,">")}function f(v,d){var L,C=v.data||"";return((L=d.encodeEntities)!==null&&L!==void 0?L:d.decodeEntities)!==!1&&!(!d.xmlMode&&v.parent&&o.has(v.parent.name))&&(C=d.xmlMode||d.encodeEntities!=="utf8"?(0,r.encodeXML)(C):(0,r.escapeText)(C)),C}function b(v){return"<![CDATA[".concat(v.children[0].data,"]]>")}function h(v){return"<!--".concat(v.data,"-->")}return je}var fs;function cr(){if(fs)return be;fs=1;var t=q&&q.__importDefault||function(m){return m&&m.__esModule?m:{default:m}};Object.defineProperty(be,"__esModule",{value:!0}),be.innerText=be.textContent=be.getText=be.getInnerHTML=be.getOuterHTML=void 0;var e=Ge(),n=t(mr()),a=ct();function s(m,g){return(0,n.default)(m,g)}be.getOuterHTML=s;function r(m,g){return(0,e.hasChildren)(m)?m.children.map(function(p){return s(p,g)}).join(""):""}be.getInnerHTML=r;function i(m){return Array.isArray(m)?m.map(i).join(""):(0,e.isTag)(m)?m.name==="br"?`
`:i(m.children):(0,e.isCDATA)(m)?i(m.children):(0,e.isText)(m)?m.data:""}be.getText=i;function o(m){return Array.isArray(m)?m.map(o).join(""):(0,e.hasChildren)(m)&&!(0,e.isComment)(m)?o(m.children):(0,e.isText)(m)?m.data:""}be.textContent=o;function l(m){return Array.isArray(m)?m.map(l).join(""):(0,e.hasChildren)(m)&&(m.type===a.ElementType.Tag||(0,e.isCDATA)(m))?l(m.children):(0,e.isText)(m)?m.data:""}return be.innerText=l,be}var ae={},ys;function mF(){if(ys)return ae;ys=1,Object.defineProperty(ae,"__esModule",{value:!0}),ae.prevElementSibling=ae.nextElementSibling=ae.getName=ae.hasAttrib=ae.getAttributeValue=ae.getSiblings=ae.getParent=ae.getChildren=void 0;var t=Ge();function e(m){return(0,t.hasChildren)(m)?m.children:[]}ae.getChildren=e;function n(m){return m.parent||null}ae.getParent=n;function a(m){var g,p,u=n(m);if(u!=null)return e(u);for(var c=[m],k=m.prev,_=m.next;k!=null;)c.unshift(k),g=k,k=g.prev;for(;_!=null;)c.push(_),p=_,_=p.next;return c}ae.getSiblings=a;function s(m,g){var p;return(p=m.attribs)===null||p===void 0?void 0:p[g]}ae.getAttributeValue=s;function r(m,g){return m.attribs!=null&&Object.prototype.hasOwnProperty.call(m.attribs,g)&&m.attribs[g]!=null}ae.hasAttrib=r;function i(m){return m.name}ae.getName=i;function o(m){for(var g,p=m.next;p!==null&&!(0,t.isTag)(p);)g=p,p=g.next;return p}ae.nextElementSibling=o;function l(m){for(var g,p=m.prev;p!==null&&!(0,t.isTag)(p);)g=p,p=g.prev;return p}return ae.prevElementSibling=l,ae}var ue={},vs;function cF(){if(vs)return ue;vs=1,Object.defineProperty(ue,"__esModule",{value:!0}),ue.prepend=ue.prependChild=ue.append=ue.appendChild=ue.replaceElement=ue.removeElement=void 0;function t(i){if(i.prev&&(i.prev.next=i.next),i.next&&(i.next.prev=i.prev),i.parent){var o=i.parent.children,l=o.lastIndexOf(i);l>=0&&o.splice(l,1)}i.next=null,i.prev=null,i.parent=null}ue.removeElement=t;function e(i,o){var l=o.prev=i.prev;l&&(l.next=o);var m=o.next=i.next;m&&(m.prev=o);var g=o.parent=i.parent;if(g){var p=g.children;p[p.lastIndexOf(i)]=o,i.parent=null}}ue.replaceElement=e;function n(i,o){if(t(o),o.next=null,o.parent=i,i.children.push(o)>1){var l=i.children[i.children.length-2];l.next=o,o.prev=l}else o.prev=null}ue.appendChild=n;function a(i,o){t(o);var l=i.parent,m=i.next;if(o.next=m,o.prev=i,i.next=o,o.parent=l,m){if(m.prev=o,l){var g=l.children;g.splice(g.lastIndexOf(m),0,o)}}else l&&l.children.push(o)}ue.append=a;function s(i,o){if(t(o),o.parent=i,o.prev=null,i.children.unshift(o)!==1){var l=i.children[1];l.prev=o,o.next=l}else o.next=null}ue.prependChild=s;function r(i,o){t(o);var l=i.parent;if(l){var m=l.children;m.splice(m.indexOf(i),0,o)}i.prev&&(i.prev.next=o),o.parent=l,o.prev=i.prev,o.next=i,i.prev=o}return ue.prepend=r,ue}var me={},Ls;function gr(){if(Ls)return me;Ls=1,Object.defineProperty(me,"__esModule",{value:!0}),me.findAll=me.existsOne=me.findOne=me.findOneChild=me.find=me.filter=void 0;var t=Ge();function e(o,l,m,g){return m===void 0&&(m=!0),g===void 0&&(g=1/0),n(o,Array.isArray(l)?l:[l],m,g)}me.filter=e;function n(o,l,m,g){for(var p=[],u=[l],c=[0];;){if(c[0]>=u[0].length){if(c.length===1)return p;u.shift(),c.shift();continue}var k=u[0][c[0]++];if(o(k)&&(p.push(k),--g<=0))return p;m&&(0,t.hasChildren)(k)&&k.children.length>0&&(c.unshift(0),u.unshift(k.children))}}me.find=n;function a(o,l){return l.find(o)}me.findOneChild=a;function s(o,l,m){m===void 0&&(m=!0);for(var g=null,p=0;p<l.length&&!g;p++){var u=l[p];if((0,t.isTag)(u))o(u)?g=u:m&&u.children.length>0&&(g=s(o,u.children,!0));else continue}return g}me.findOne=s;function r(o,l){return l.some(function(m){return(0,t.isTag)(m)&&(o(m)||r(o,m.children))})}me.existsOne=r;function i(o,l){for(var m=[],g=[l],p=[0];;){if(p[0]>=g[0].length){if(g.length===1)return m;g.shift(),p.shift();continue}var u=g[0][p[0]++];(0,t.isTag)(u)&&(o(u)&&m.push(u),u.children.length>0&&(p.unshift(0),g.unshift(u.children)))}}return me.findAll=i,me}var de={},Ts;function pr(){if(Ts)return de;Ts=1,Object.defineProperty(de,"__esModule",{value:!0}),de.getElementsByTagType=de.getElementsByTagName=de.getElementById=de.getElements=de.testElement=void 0;var t=Ge(),e=gr(),n={tag_name:function(p){return typeof p=="function"?function(u){return(0,t.isTag)(u)&&p(u.name)}:p==="*"?t.isTag:function(u){return(0,t.isTag)(u)&&u.name===p}},tag_type:function(p){return typeof p=="function"?function(u){return p(u.type)}:function(u){return u.type===p}},tag_contains:function(p){return typeof p=="function"?function(u){return(0,t.isText)(u)&&p(u.data)}:function(u){return(0,t.isText)(u)&&u.data===p}}};function a(p,u){return typeof u=="function"?function(c){return(0,t.isTag)(c)&&u(c.attribs[p])}:function(c){return(0,t.isTag)(c)&&c.attribs[p]===u}}function s(p,u){return function(c){return p(c)||u(c)}}function r(p){var u=Object.keys(p).map(function(c){var k=p[c];return Object.prototype.hasOwnProperty.call(n,c)?n[c](k):a(c,k)});return u.length===0?null:u.reduce(s)}function i(p,u){var c=r(p);return c?c(u):!0}de.testElement=i;function o(p,u,c,k){k===void 0&&(k=1/0);var _=r(p);return _?(0,e.filter)(_,u,c,k):[]}de.getElements=o;function l(p,u,c){return c===void 0&&(c=!0),Array.isArray(u)||(u=[u]),(0,e.findOne)(a("id",p),u,c)}de.getElementById=l;function m(p,u,c,k){return c===void 0&&(c=!0),k===void 0&&(k=1/0),(0,e.filter)(n.tag_name(p),u,c,k)}de.getElementsByTagName=m;function g(p,u,c,k){return c===void 0&&(c=!0),k===void 0&&(k=1/0),(0,e.filter)(n.tag_type(p),u,c,k)}return de.getElementsByTagType=g,de}var hn={},xs;function gF(){return xs||(xs=1,function(t){Object.defineProperty(t,"__esModule",{value:!0}),t.uniqueSort=t.compareDocumentPosition=t.DocumentPosition=t.removeSubsets=void 0;var e=Ge();function n(i){for(var o=i.length;--o>=0;){var l=i[o];if(o>0&&i.lastIndexOf(l,o-1)>=0){i.splice(o,1);continue}for(var m=l.parent;m;m=m.parent)if(i.includes(m)){i.splice(o,1);break}}return i}t.removeSubsets=n;var a;(function(i){i[i.DISCONNECTED=1]="DISCONNECTED",i[i.PRECEDING=2]="PRECEDING",i[i.FOLLOWING=4]="FOLLOWING",i[i.CONTAINS=8]="CONTAINS",i[i.CONTAINED_BY=16]="CONTAINED_BY"})(a=t.DocumentPosition||(t.DocumentPosition={}));function s(i,o){var l=[],m=[];if(i===o)return 0;for(var g=(0,e.hasChildren)(i)?i:i.parent;g;)l.unshift(g),g=g.parent;for(g=(0,e.hasChildren)(o)?o:o.parent;g;)m.unshift(g),g=g.parent;for(var p=Math.min(l.length,m.length),u=0;u<p&&l[u]===m[u];)u++;if(u===0)return a.DISCONNECTED;var c=l[u-1],k=c.children,_=l[u],x=m[u];return k.indexOf(_)>k.indexOf(x)?c===o?a.FOLLOWING|a.CONTAINED_BY:a.FOLLOWING:c===i?a.PRECEDING|a.CONTAINS:a.PRECEDING}t.compareDocumentPosition=s;function r(i){return i=i.filter(function(o,l,m){return!m.includes(o,l+1)}),i.sort(function(o,l){var m=s(o,l);return m&a.PRECEDING?-1:m&a.FOLLOWING?1:0}),i}t.uniqueSort=r}(hn)),hn}var st={},ks;function pF(){if(ks)return st;ks=1,Object.defineProperty(st,"__esModule",{value:!0}),st.getFeed=void 0;var t=cr(),e=pr();function n(u){var c=l(p,u);return c?c.name==="feed"?a(c):s(c):null}st.getFeed=n;function a(u){var c,k=u.children,_={type:"atom",items:(0,e.getElementsByTagName)("entry",k).map(function(b){var h,v=b.children,d={media:o(v)};g(d,"id","id",v),g(d,"title","title",v);var L=(h=l("link",v))===null||h===void 0?void 0:h.attribs.href;L&&(d.link=L);var C=m("summary",v)||m("content",v);C&&(d.description=C);var A=m("updated",v);return A&&(d.pubDate=new Date(A)),d})};g(_,"id","id",k),g(_,"title","title",k);var x=(c=l("link",k))===null||c===void 0?void 0:c.attribs.href;x&&(_.link=x),g(_,"description","subtitle",k);var f=m("updated",k);return f&&(_.updated=new Date(f)),g(_,"author","email",k,!0),_}function s(u){var c,k,_=(k=(c=l("channel",u.children))===null||c===void 0?void 0:c.children)!==null&&k!==void 0?k:[],x={type:u.name.substr(0,3),id:"",items:(0,e.getElementsByTagName)("item",u.children).map(function(b){var h=b.children,v={media:o(h)};g(v,"id","guid",h),g(v,"title","title",h),g(v,"link","link",h),g(v,"description","description",h);var d=m("pubDate",h)||m("dc:date",h);return d&&(v.pubDate=new Date(d)),v})};g(x,"title","title",_),g(x,"link","link",_),g(x,"description","description",_);var f=m("lastBuildDate",_);return f&&(x.updated=new Date(f)),g(x,"author","managingEditor",_,!0),x}var r=["url","type","lang"],i=["fileSize","bitrate","framerate","samplingrate","channels","duration","height","width"];function o(u){return(0,e.getElementsByTagName)("media:content",u).map(function(c){for(var k=c.attribs,_={medium:k.medium,isDefault:!!k.isDefault},x=0,f=r;x<f.length;x++){var b=f[x];k[b]&&(_[b]=k[b])}for(var h=0,v=i;h<v.length;h++){var b=v[h];k[b]&&(_[b]=parseInt(k[b],10))}return k.expression&&(_.expression=k.expression),_})}function l(u,c){return(0,e.getElementsByTagName)(u,c,!0,1)[0]}function m(u,c,k){return k===void 0&&(k=!1),(0,t.textContent)((0,e.getElementsByTagName)(u,c,k,1)).trim()}function g(u,c,k,_,x){x===void 0&&(x=!1);var f=m(k,_,x);f&&(u[c]=f)}function p(u){return u==="rss"||u==="feed"||u==="rdf:RDF"}return st}var Cs;function fn(){return Cs||(Cs=1,function(t){var e=q&&q.__createBinding||(Object.create?function(s,r,i,o){o===void 0&&(o=i);var l=Object.getOwnPropertyDescriptor(r,i);(!l||("get"in l?!r.__esModule:l.writable||l.configurable))&&(l={enumerable:!0,get:function(){return r[i]}}),Object.defineProperty(s,o,l)}:function(s,r,i,o){o===void 0&&(o=i),s[o]=r[i]}),n=q&&q.__exportStar||function(s,r){for(var i in s)i!=="default"&&!Object.prototype.hasOwnProperty.call(r,i)&&e(r,s,i)};Object.defineProperty(t,"__esModule",{value:!0}),t.hasChildren=t.isDocument=t.isComment=t.isText=t.isCDATA=t.isTag=void 0,n(cr(),t),n(mF(),t),n(cF(),t),n(gr(),t),n(pr(),t),n(gF(),t),n(pF(),t);var a=Ge();Object.defineProperty(t,"isTag",{enumerable:!0,get:function(){return a.isTag}}),Object.defineProperty(t,"isCDATA",{enumerable:!0,get:function(){return a.isCDATA}}),Object.defineProperty(t,"isText",{enumerable:!0,get:function(){return a.isText}}),Object.defineProperty(t,"isComment",{enumerable:!0,get:function(){return a.isComment}}),Object.defineProperty(t,"isDocument",{enumerable:!0,get:function(){return a.isDocument}}),Object.defineProperty(t,"hasChildren",{enumerable:!0,get:function(){return a.hasChildren}})}(cn)),cn}var _s;function bF(){return _s||(_s=1,function(t){var e=q&&q.__createBinding||(Object.create?function(f,b,h,v){v===void 0&&(v=h);var d=Object.getOwnPropertyDescriptor(b,h);(!d||("get"in d?!b.__esModule:d.writable||d.configurable))&&(d={enumerable:!0,get:function(){return b[h]}}),Object.defineProperty(f,v,d)}:function(f,b,h,v){v===void 0&&(v=h),f[v]=b[h]}),n=q&&q.__setModuleDefault||(Object.create?function(f,b){Object.defineProperty(f,"default",{enumerable:!0,value:b})}:function(f,b){f.default=b}),a=q&&q.__importStar||function(f){if(f&&f.__esModule)return f;var b={};if(f!=null)for(var h in f)h!=="default"&&Object.prototype.hasOwnProperty.call(f,h)&&e(b,f,h);return n(b,f),b},s=q&&q.__importDefault||function(f){return f&&f.__esModule?f:{default:f}};Object.defineProperty(t,"__esModule",{value:!0}),t.DomUtils=t.parseFeed=t.getFeed=t.ElementType=t.Tokenizer=t.createDomStream=t.parseDOM=t.parseDocument=t.DefaultHandler=t.DomHandler=t.Parser=void 0;var r=Ja(),i=Ja();Object.defineProperty(t,"Parser",{enumerable:!0,get:function(){return i.Parser}});var o=Ge(),l=Ge();Object.defineProperty(t,"DomHandler",{enumerable:!0,get:function(){return l.DomHandler}}),Object.defineProperty(t,"DefaultHandler",{enumerable:!0,get:function(){return l.DomHandler}});function m(f,b){var h=new o.DomHandler(void 0,b);return new r.Parser(h,b).end(f),h.root}t.parseDocument=m;function g(f,b){return m(f,b).children}t.parseDOM=g;function p(f,b,h){var v=new o.DomHandler(f,b,h);return new r.Parser(v,b)}t.createDomStream=p;var u=ur();Object.defineProperty(t,"Tokenizer",{enumerable:!0,get:function(){return s(u).default}}),t.ElementType=a(ct());var c=fn(),k=fn();Object.defineProperty(t,"getFeed",{enumerable:!0,get:function(){return k.getFeed}});var _={xmlMode:!0};function x(f,b){return b===void 0&&(b=_),(0,c.getFeed)(g(f,b))}t.parseFeed=x,t.DomUtils=a(fn())}(sn)),sn}function ws(t,e,n,a){t.attrs.forEach(function(s){s[0]===e&&(s[1]=n(s[1],a,t))})}function br(t,e,n,a){if(t)for(let s=0;s<t.length;s++){const r=t[s];r.attribs&&(r.name==="img"&&r.attribs.src&&(r.attribs.src=e(r.attribs.src,n,a,r)),r.name==="a"&&r.attribs.href&&(r.attribs.href=e(r.attribs.href,n,a,r))),br(r.children,e,n,a)}}function Es(t,e,n){const a=bF(),s=mr(),r=new a.parseDocument(t.content,{recognizeCDATA:!0,recognizeSelfClosing:!0});br(r.children,e,n,t),t.content=s.render(r)}var dF=function(t,e){t.core.ruler.after("inline","replace-link",function(n){let a;if(t.options.replaceLink&&typeof t.options.replaceLink=="function")a=t.options.replaceLink;else if(e&&e.replaceLink&&typeof e.replaceLink=="function")a=e.replaceLink;else return!1;const s=e&&e.processHTML||!1;return typeof a=="function"&&n.tokens.forEach(function(r){s&&r.type==="html_block"&&Es(r,a,n.env),r.type==="inline"&&r.children&&r.children.forEach(function(i){const o=i.type;s&&o==="html_inline"&&Es(i,a,n.env),o==="link_open"?ws(i,"href",a,n.env):o==="image"&&ws(i,"src",a,n.env)})}),!1})};Prism.languages.clike={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,lookbehind:!0,greedy:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},"class-name":{pattern:/(\b(?:class|extends|implements|instanceof|interface|new|trait)\s+|\bcatch\s+\()[\w.\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\]/}},keyword:/\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\b/,boolean:/\b(?:false|true)\b/,function:/\b\w+(?=\()/,number:/\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,operator:/[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,punctuation:/[{}[\];(),.:]/};Prism.languages.javascript=Prism.languages.extend("clike",{"class-name":[Prism.languages.clike["class-name"],{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:constructor|prototype))/,lookbehind:!0}],keyword:[{pattern:/((?:^|\})\s*)catch\b/,lookbehind:!0},{pattern:/(^|[^.]|\.\.\.\s*)\b(?:as|assert(?=\s*\{)|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\s*(?:\{|$))|for|from(?=\s*(?:['"]|$))|function|(?:get|set)(?=\s*(?:[#\[$\w\xA0-\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,lookbehind:!0}],function:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,number:{pattern:RegExp(/(^|[^\w$])/.source+"(?:"+(/NaN|Infinity/.source+"|"+/0[bB][01]+(?:_[01]+)*n?/.source+"|"+/0[oO][0-7]+(?:_[0-7]+)*n?/.source+"|"+/0[xX][\dA-Fa-f]+(?:_[\dA-Fa-f]+)*n?/.source+"|"+/\d+(?:_\d+)*n/.source+"|"+/(?:\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[Ee][+-]?\d+(?:_\d+)*)?/.source)+")"+/(?![\w$])/.source),lookbehind:!0},operator:/--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/});Prism.languages.javascript["class-name"][0].pattern=/(\b(?:class|extends|implements|instanceof|interface|new)\s+)[\w.\\]+/;Prism.languages.insertBefore("javascript","keyword",{regex:{pattern:RegExp(/((?:^|[^$\w\xA0-\uFFFF."'\])\s]|\b(?:return|yield))\s*)/.source+/\//.source+"(?:"+/(?:\[(?:[^\]\\\r\n]|\\.)*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}/.source+"|"+/(?:\[(?:[^[\]\\\r\n]|\\.|\[(?:[^[\]\\\r\n]|\\.|\[(?:[^[\]\\\r\n]|\\.)*\])*\])*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source+")"+/(?=(?:\s|\/\*(?:[^*]|\*(?!\/))*\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))/.source),lookbehind:!0,greedy:!0,inside:{"regex-source":{pattern:/^(\/)[\s\S]+(?=\/[a-z]*$)/,lookbehind:!0,alias:"language-regex",inside:Prism.languages.regex},"regex-delimiter":/^\/|\/$/,"regex-flags":/^[a-z]+$/}},"function-variable":{pattern:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,alias:"function"},parameter:[{pattern:/(function(?:\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)?\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\))/,lookbehind:!0,inside:Prism.languages.javascript},{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=>)/i,lookbehind:!0,inside:Prism.languages.javascript},{pattern:/(\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*=>)/,lookbehind:!0,inside:Prism.languages.javascript},{pattern:/((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*\{)/,lookbehind:!0,inside:Prism.languages.javascript}],constant:/\b[A-Z](?:[A-Z_]|\dx?)*\b/});Prism.languages.insertBefore("javascript","string",{hashbang:{pattern:/^#!.*/,greedy:!0,alias:"comment"},"template-string":{pattern:/`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`/,greedy:!0,inside:{"template-punctuation":{pattern:/^`|`$/,alias:"string"},interpolation:{pattern:/((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,lookbehind:!0,inside:{"interpolation-punctuation":{pattern:/^\$\{|\}$/,alias:"punctuation"},rest:Prism.languages.javascript}},string:/[\s\S]+/}},"string-property":{pattern:/((?:^|[,{])[ \t]*)(["'])(?:\\(?:\r\n|[\s\S])|(?!\2)[^\\\r\n])*\2(?=\s*:)/m,lookbehind:!0,greedy:!0,alias:"property"}});Prism.languages.insertBefore("javascript","operator",{"literal-property":{pattern:/((?:^|[,{])[ \t]*)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)/m,lookbehind:!0,alias:"property"}});Prism.languages.markup&&(Prism.languages.markup.tag.addInlined("script","javascript"),Prism.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,"javascript"));Prism.languages.js=Prism.languages.javascript;(function(t){t.languages.typescript=t.languages.extend("javascript",{"class-name":{pattern:/(\b(?:class|extends|implements|instanceof|interface|new|type)\s+)(?!keyof\b)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?:\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,lookbehind:!0,greedy:!0,inside:null},builtin:/\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\b/}),t.languages.typescript.keyword.push(/\b(?:abstract|declare|is|keyof|readonly|require)\b/,/\b(?:asserts|infer|interface|module|namespace|type)\b(?=\s*(?:[{_$a-zA-Z\xA0-\uFFFF]|$))/,/\btype\b(?=\s*(?:[\{*]|$))/),delete t.languages.typescript.parameter,delete t.languages.typescript["literal-property"];var e=t.languages.extend("typescript",{});delete e["class-name"],t.languages.typescript["class-name"].inside=e,t.languages.insertBefore("typescript","function",{decorator:{pattern:/@[$\w\xA0-\uFFFF]+/,inside:{at:{pattern:/^@/,alias:"operator"},function:/^[\s\S]+/}},"generic-function":{pattern:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\s*\()/,greedy:!0,inside:{function:/^#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*/,generic:{pattern:/<[\s\S]+/,alias:"class-name",inside:e}}}}),t.languages.ts=t.languages.typescript})(Prism);Prism.languages.c=Prism.languages.extend("clike",{comment:{pattern:/\/\/(?:[^\r\n\\]|\\(?:\r\n?|\n|(?![\r\n])))*|\/\*[\s\S]*?(?:\*\/|$)/,greedy:!0},string:{pattern:/"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,greedy:!0},"class-name":{pattern:/(\b(?:enum|struct)\s+(?:__attribute__\s*\(\([\s\S]*?\)\)\s*)?)\w+|\b[a-z]\w*_t\b/,lookbehind:!0},keyword:/\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\b/,function:/\b[a-z_]\w*(?=\s*\()/i,number:/(?:\b0x(?:[\da-f]+(?:\.[\da-f]*)?|\.[\da-f]+)(?:p[+-]?\d+)?|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)[ful]{0,4}/i,operator:/>>=?|<<=?|->|([-+&|:])\1|[?:~]|[-+*/%&|^!=<>]=?/});Prism.languages.insertBefore("c","string",{char:{pattern:/'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n]){0,32}'/,greedy:!0}});Prism.languages.insertBefore("c","string",{macro:{pattern:/(^[\t ]*)#\s*[a-z](?:[^\r\n\\/]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|\\(?:\r\n|[\s\S]))*/im,lookbehind:!0,greedy:!0,alias:"property",inside:{string:[{pattern:/^(#\s*include\s*)<[^>]+>/,lookbehind:!0},Prism.languages.c.string],char:Prism.languages.c.char,comment:Prism.languages.c.comment,"macro-name":[{pattern:/(^#\s*define\s+)\w+\b(?!\()/i,lookbehind:!0},{pattern:/(^#\s*define\s+)\w+\b(?=\()/i,lookbehind:!0,alias:"function"}],directive:{pattern:/^(#\s*)[a-z]+/,lookbehind:!0,alias:"keyword"},"directive-hash":/^#/,punctuation:/##|\\(?=[\r\n])/,expression:{pattern:/\S[\s\S]*/,inside:Prism.languages.c}}}});Prism.languages.insertBefore("c","function",{constant:/\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\b/});delete Prism.languages.c.boolean;Prism.languages.glsl=Prism.languages.extend("c",{keyword:/\b(?:active|asm|atomic_uint|attribute|[ibdu]?vec[234]|bool|break|buffer|case|cast|centroid|class|coherent|common|const|continue|d?mat[234](?:x[234])?|default|discard|do|double|else|enum|extern|external|false|filter|fixed|flat|float|for|fvec[234]|goto|half|highp|hvec[234]|[iu]?sampler2DMS(?:Array)?|[iu]?sampler2DRect|[iu]?samplerBuffer|[iu]?samplerCube|[iu]?samplerCubeArray|[iu]?sampler[123]D|[iu]?sampler[12]DArray|[iu]?image2DMS(?:Array)?|[iu]?image2DRect|[iu]?imageBuffer|[iu]?imageCube|[iu]?imageCubeArray|[iu]?image[123]D|[iu]?image[12]DArray|if|in|inline|inout|input|int|interface|invariant|layout|long|lowp|mediump|namespace|noinline|noperspective|out|output|partition|patch|precise|precision|public|readonly|resource|restrict|return|sample|sampler[12]DArrayShadow|sampler[12]DShadow|sampler2DRectShadow|sampler3DRect|samplerCubeArrayShadow|samplerCubeShadow|shared|short|sizeof|smooth|static|struct|subroutine|superp|switch|template|this|true|typedef|uint|uniform|union|unsigned|using|varying|void|volatile|while|writeonly)\b/});const Ue=ze(null);function hF(){return{init:()=>{Ue.value||(Ue.value=new $q,Ue.value.use(dF,{replaceLink:e=>{const n="/nanogl-docs";return e.startsWith("/")&&n?`${n}${e}`:e}}),Ue.value.use(nF,{matcher:e=>/^https?:\/\//.test(e),attrs:{target:"_blank",rel:"noopener"}}),Ue.value.use(Jq,{highlightInlineCode:!0,defaultLanguage:"js"}))},md:Ue}}const fF={class:"app relative w-full max-w-screen-2xl mx-auto"},yF={class:"grid grid-cols-10 mt-menu"},vF={class:"content col-span-8 col-start-3 relative"},LF=Te({__name:"App",setup(t){const{init:e}=Ce(),{init:n}=hF();return e(),n(),(a,s)=>{const r=Vi,i=Si,o=Ve("RouterView");return F(),X("div",fF,[Be(r),te("div",yF,[Be(i),te("div",vF,[Be(o)])])])}}}),TF=()=>ee(()=>import("./texture-2d-e78be0ee.js"),["assets/texture-2d-e78be0ee.js","assets/UICallout.vue_vue_type_script_setup_true_lang-9ed50965.js","assets/runtime-core.esm-bundler-b2e16801.js","assets/route-block-83d24a4e.js"]),xF=()=>ee(()=>import("./program-7af4f0a3.js"),["assets/program-7af4f0a3.js","assets/UICallout.vue_vue_type_script_setup_true_lang-9ed50965.js","assets/runtime-core.esm-bundler-b2e16801.js","assets/route-block-83d24a4e.js"]),kF=()=>ee(()=>import("./indexbuffer-c0e7f721.js"),["assets/indexbuffer-c0e7f721.js","assets/route-block-83d24a4e.js","assets/runtime-core.esm-bundler-b2e16801.js"]),CF=()=>ee(()=>import("./fbo-29a0cd24.js"),["assets/fbo-29a0cd24.js","assets/UICallout.vue_vue_type_script_setup_true_lang-9ed50965.js","assets/runtime-core.esm-bundler-b2e16801.js","assets/route-block-83d24a4e.js"]),_F=()=>ee(()=>import("./arraybuffer-421c669c.js"),["assets/arraybuffer-421c669c.js","assets/UICallout.vue_vue_type_script_setup_true_lang-9ed50965.js","assets/runtime-core.esm-bundler-b2e16801.js","assets/route-block-83d24a4e.js"]),wF=()=>ee(()=>import("./load-gltf-d4fecf3e.js"),["assets/load-gltf-d4fecf3e.js","assets/route-block-83d24a4e.js","assets/runtime-core.esm-bundler-b2e16801.js"]),EF=()=>ee(()=>import("./introduction-103bd40a.js"),["assets/introduction-103bd40a.js","assets/runtime-core.esm-bundler-b2e16801.js","assets/route-block-83d24a4e.js"]),PF=()=>ee(()=>import("./installation-b0f4184b.js"),["assets/installation-b0f4184b.js","assets/UICallout.vue_vue_type_script_setup_true_lang-9ed50965.js","assets/runtime-core.esm-bundler-b2e16801.js","assets/route-block-83d24a4e.js"]),SF=()=>ee(()=>import("./full-screen-shader-1f76e190.js"),["assets/full-screen-shader-1f76e190.js","assets/GLPreview.vue_vue_type_script_setup_true_lang-b234feb2.js","assets/runtime-core.esm-bundler-b2e16801.js","assets/UICallout.vue_vue_type_script_setup_true_lang-9ed50965.js","assets/route-block-83d24a4e.js"]),AF=()=>ee(()=>import("./creating-a-scene-7e7e90d4.js"),["assets/creating-a-scene-7e7e90d4.js","assets/GLPreview.vue_vue_type_script_setup_true_lang-b234feb2.js","assets/runtime-core.esm-bundler-b2e16801.js","assets/UICallout.vue_vue_type_script_setup_true_lang-9ed50965.js","assets/route-block-83d24a4e.js"]),IF=()=>ee(()=>import("./add-movement-4478bcff.js"),["assets/add-movement-4478bcff.js","assets/GLPreview.vue_vue_type_script_setup_true_lang-b234feb2.js","assets/runtime-core.esm-bundler-b2e16801.js","assets/UICallout.vue_vue_type_script_setup_true_lang-9ed50965.js","assets/route-block-83d24a4e.js"]),GF=()=>ee(()=>import("./index-bf608564.js"),["assets/index-bf608564.js","assets/runtime-core.esm-bundler-b2e16801.js"]),RF=()=>ee(()=>import("./index-b3ceaa55.js"),["assets/index-b3ceaa55.js","assets/UIBlockLink.vue_vue_type_script_setup_true_lang-c4d2e0b0.js","assets/runtime-core.esm-bundler-b2e16801.js"]),DF=()=>ee(()=>import("./index-ba78018e.js"),["assets/index-ba78018e.js","assets/UIBlockLink.vue_vue_type_script_setup_true_lang-c4d2e0b0.js","assets/runtime-core.esm-bundler-b2e16801.js"]),MF=()=>ee(()=>import("./index-24d191bf.js"),["assets/index-24d191bf.js","assets/GLPreview.vue_vue_type_script_setup_true_lang-b234feb2.js","assets/runtime-core.esm-bundler-b2e16801.js","assets/UIButton.vue_vue_type_script_setup_true_lang-8595b560.js"]),NF=()=>ee(()=>import("./index-714544ef.js"),["assets/index-714544ef.js","assets/runtime-core.esm-bundler-b2e16801.js","assets/UIButton.vue_vue_type_script_setup_true_lang-8595b560.js"]),OF=[{name:"guide-quick-guides-texture-2d",path:"/guide/quick-guides/texture-2d",component:TF,props:!0,meta:{menuGuide:!0,menuName:"Texture2D",menuOrder:0}},{name:"guide-quick-guides-program",path:"/guide/quick-guides/program",component:xF,props:!0,meta:{menuGuide:!0,menuName:"Program",menuOrder:1}},{name:"guide-quick-guides-indexbuffer",path:"/guide/quick-guides/indexbuffer",component:kF,props:!0,meta:{menuGuide:!0,menuName:"IndexBuffer",menuOrder:4}},{name:"guide-quick-guides-fbo",path:"/guide/quick-guides/fbo",component:CF,props:!0,meta:{menuGuide:!0,menuName:"Fbo",menuOrder:2}},{name:"guide-quick-guides-arraybuffer",path:"/guide/quick-guides/arraybuffer",component:_F,props:!0,meta:{menuGuide:!0,menuName:"ArrayBuffer",menuOrder:3}},{name:"guide-getting-started-load-gltf",path:"/guide/getting-started/load-gltf",component:wF,props:!0,meta:{menuGuide:!0,menuName:"Load a GLTF model",menuOrder:4}},{name:"guide-getting-started-introduction",path:"/guide/getting-started/introduction",component:EF,props:!0,meta:{menuGuide:!0,menuName:"Introduction",menuOrder:0}},{name:"guide-getting-started-installation",path:"/guide/getting-started/installation",component:PF,props:!0,meta:{menuGuide:!0,menuName:"Installation",menuOrder:1}},{name:"guide-getting-started-full-screen-shader",path:"/guide/getting-started/full-screen-shader",component:SF,props:!0,meta:{menuGuide:!0,menuName:"Full-screen shader",menuOrder:5}},{name:"guide-getting-started-creating-a-scene",path:"/guide/getting-started/creating-a-scene",component:AF,props:!0,meta:{menuGuide:!0,menuName:"Creating a scene",menuOrder:2}},{name:"guide-getting-started-add-movement",path:"/guide/getting-started/add-movement",component:IF,props:!0,meta:{menuGuide:!0,menuName:"Add some movement",menuOrder:3}},{name:"examples",path:"/examples",component:GF,props:!0},{name:"api",path:"/api",component:RF,props:!0},{name:"api-library",path:"/api/:library",component:DF,props:!0},{name:"examples-example",path:"/examples/:example",component:MF,props:!0},{name:"api-library-type-item",path:"/api/:library/:type/:item",component:NF,props:!0}],BF=(t,e)=>{const n=t.__vccOpts||t;for(const[a,s]of e)n[a]=s;return n},qF={},FF={class:"page-body"},zF=te("h2",null," Not found ",-1),VF=[zF];function HF(t,e){return F(),X("div",FF,VF)}const jF=BF(qF,[["render",HF]]),UF=ei({routes:[...OF,{path:"/",name:"homepage",redirect:"/guide/getting-started/introduction"},{path:"/guide",name:"guide",redirect:"/guide/getting-started/introduction"},{path:"/guide/getting-started",name:"getting-started",redirect:"/guide/getting-started/introduction"},{path:"/guide/quick-guides",name:"quick-guides",redirect:"/guide/quick-guides/texture-2d"},{path:"/examples",name:"examples",redirect:"/examples/triangle"},{path:"/:pathMatch(.*)*",name:"not-found",component:jF}],history:ho("/nanogl-docs"),scrollBehavior(t,e,n){if(t.hash){const a=document.querySelector(t.hash);if(!a)return{el:t.hash};const s=parseFloat(getComputedStyle(a).scrollMarginTop);return{el:t.hash,top:s}}return{top:0}}});Zr(LF).use(UF).mount("#app");export{We as L,ve as S,BF as _,Gi as a,ee as b,Ri as c,jF as d,hF as e,ni as f,Ce as u};
