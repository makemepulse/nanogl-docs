import{b as a}from"./route-block-83d24a4e.js";import{c as n,o,b as s}from"./index-2d8dba22.js";const t={class:"markdown-body"},l=s(`<h1>Installation</h1><p>You can use nanogl in any Javascript project.</p><h2>Setup nanogl in your project</h2><h3>Install with a package manager</h3><p>The easiest way to install nanogl is with a package manager. You will need to install <a href="https://nodejs.org/en">Node.js</a> or <a href="https://yarnpkg.com/">Yarn</a>, then you can run the corresponding line :</p><pre class="language-bash"><code class="language-bash"><span class="token function">npm</span> i nanogl
</code></pre><p>or</p><pre class="language-bash"><code class="language-bash"><span class="token function">yarn</span> <span class="token function">add</span> nanogl
</code></pre><p>You can then import what you need like this :</p><pre class="language-js"><code class="language-js"><span class="token keyword">import</span> Program <span class="token keyword">from</span> <span class="token string">&quot;nanogl/program&quot;</span>
</code></pre><h3>Use the source files</h3><p>You can download the zipped repository <a href="https://github.com/plepers/nanogl/archive/refs/heads/develop.zip">here</a>. Add the folder to your project, keeping the desired files. You can then import what you need like this :</p><pre class="language-js"><code class="language-js"><span class="token keyword">import</span> Program <span class="token keyword">from</span> <span class="token string">&quot;path/to/folder/program.js&quot;</span>
</code></pre><h2>Additional libraries</h2><p>There are other packages you can install to use with nanogl.</p><h3>nanogl libraries</h3><p>You can also install some nanogl libraries for useful features :</p><ul><li><a href="https://github.com/plepers/nanogl-camera">nanogl-camera</a> : Cameras for nanogl</li><li><a href="https://github.com/plepers/nanogl-node">nanogl-node</a> : Handle nested objects transform in 3D space</li><li><a href="https://github.com/plepers/nanogl-primitives-2d">nanogl-primitives-2d</a> : Basic 2D primitives for nanogl</li><li><a href="https://github.com/plepers/nanogl-gltf">nanogl-glft</a> : Handle .gltf files</li><li><a href="https://github.com/plepers/nanogl-pbr">nanogl-pbr</a> : Physically based rendering materials for nanogl</li><li><a href="https://github.com/plepers/nanogl-pf">nanogl-pf</a> : Provide pixel format related capabilities</li><li><a href="https://github.com/plepers/nanogl-post">nanogl-post</a> : Post-processing for nanogl</li><li><a href="https://github.com/plepers/nanogl-state">nanogl-state</a> : Efficient webgl state management</li><li><a href="https://github.com/plepers/nanogl-sync">nanogl-sync</a> : WebGLSync for nanogl</li><li><a href="https://github.com/plepers/nanogl-vao">nanogl-vao</a> : OES_vertex_array_object extension support for nanogl</li></ul><h3>Other libraries</h3><p>The <a href="https://glmatrix.net/">gl-matrix</a> package is also useful for vector &amp; matrix math.</p>`,20),r=[l],p={__name:"installation",setup(i,{expose:e}){return e({frontmatter:{}}),(g,h)=>(o(),n("div",t,r))}};typeof a=="function"&&a(p);export{p as default};
