import{L as _,I as y}from"./Ibl-f425c70a.js";import{C as H,P as D,N as G}from"./index-099e42fb.js";import{G as z,I as W}from"./indexbuffer-5b89fc58.js";import{a as Q,T as V}from"./ShaderVersion-8538814c.js";import{T as M}from"./texture-2d-53b1df66.js";import{A as j}from"./arraybuffer-7f1df196.js";import{P as k}from"./tweakpane-24b35bd6.js";import{a as q}from"./Bounds-f9785a14.js";import{t as K}from"./square-texture-5de1b8a4.js";import{iblSh as X,iblPath as Y}from"./iblData-2ac082dd.js";import{cubePosUvsNormals as $,cubeIndices as J}from"./cubeGeometry-a8671df7.js";import{c as Z}from"./vec3-33249e24.js";import"./common-a066d304.js";const he=O=>{let A=!0;const d=O||document.getElementById("canvas"),a=d.getContext("webgl"),r={width:1,height:1},v=window.devicePixelRatio,U=([c])=>{const n=c.contentRect.width,B=c.contentRect.height;d.width=Math.round(n*v),d.height=Math.round(B*v),r.width=a.drawingBufferWidth,r.height=a.drawingBufferHeight},I=new ResizeObserver(U);I.observe(d);const i=z.get(a),E=Z(),s=new H(new D);s.lens.setAutoFov(35*(Math.PI/180)),s.lens.near=.01,s.lens.far=50,s.position.set([0,4,10]),s.lookAt(E);const m=new j(a,new Float32Array($)),b=new W(a,a.UNSIGNED_SHORT,new Uint16Array(J));m.attrib("aPosition",3,a.FLOAT),m.attrib("aTexCoord",2,a.FLOAT),m.attrib("aNormal",3,a.FLOAT);const l=new G,p=new M(a);p.clamp();const w=new Image;w.src=K,w.onload=()=>{p.fromImage(w)};const g=new _;g.bounds.fromMinMax([-1,-1,-1],[1,1,1]);const h=new M(a,a.RGBA);h.clamp();const u=new y(h,X);u.iblFormat="OCTA",u.shFormat="SH9",u.hdrEncoding="RGBM";const C=new Image;C.src=Y,C.onload=()=>{h.fromImage(C)},g.add(u);const e={useTexture:!1,baseColor:{r:.5,g:0,b:.5},metalness:.8,roughness:.2,emissiveColor:{r:0,g:0,b:0},alpha:1,isTransparent:!1},o=new Q(a);o.glconfig.enableDepthTest().enableCullface().cullFace(a.BACK).enableBlend().blendFunc(a.SRC_ALPHA,a.ONE_MINUS_SRC_ALPHA);const t=new q;o.addPass(t),t.setLightSetup(g),t.surface.metalness.attachUniform("metalness",1).set(e.metalness),t.surface.roughness.attachUniform("roughness",1).set(e.roughness),t.emissive.attachUniform("emissive",3).set(e.emissiveColor.r,e.emissiveColor.g,e.emissiveColor.b),t.alpha.attachUniform("alpha",1).set(e.alpha),t.alphaMode.set("OPAQUE");const P=()=>{t.surface.baseColor.attachUniform("color",3).set(e.baseColor.r,e.baseColor.g,e.baseColor.b)},L=()=>{t.surface.baseColor.attachSampler("color",V.create("aTexCoord")).set(p)};P();const N=()=>{l.rotateY(-.005),l.rotateX(.005),l.invalidate(),l.updateWorldMatrix()};let F=null;const R=(c=0)=>{if(!A)return;a.viewport(0,0,r.width,r.height),a.clearColor(0,0,0,0),a.clear(a.COLOR_BUFFER_BIT|a.DEPTH_BUFFER_BIT),o.glconfig&&i.push(o.glconfig),i.apply(),N(),s.updateWorldMatrix(),s.updateViewProjectionMatrix(r.width,r.height),g.prepare(a),o.getAllPasses().forEach(B=>{B.prepare(l,s)});const n=o.getProgram("color");m.attribPointer(n),b.bind(),b.drawTriangles(),o.glconfig&&i.pop(),F=window.requestAnimationFrame(R)};setTimeout(R,0);const T=new k({container:document.getElementById("debug")}),f=T.addFolder({title:"Metalness"}),x=T.addFolder({title:"Standard"}),S=(c,n)=>{c.set(n.r,n.g,n.b)};return f.addBinding(e,"useTexture").on("change",()=>{e.useTexture?L():P()}),f.addBinding(e,"baseColor",{color:{type:"float"}}).on("change",()=>{e.useTexture||S(t.surface.baseColor.param,e.baseColor)}),f.addBinding(e,"metalness",{min:0,max:1,step:.1}).on("change",()=>t.surface.metalness.param.set(e.metalness)),f.addBinding(e,"roughness",{min:0,max:1,step:.1}).on("change",()=>t.surface.roughness.param.set(e.roughness)),x.addBinding(e,"emissiveColor",{color:{type:"float"}}).on("change",()=>S(t.emissive.param,e.emissiveColor)),x.addBinding(e,"isTransparent").on("change",()=>{t.alphaMode.set(e.isTransparent?"BLEND":"OPAQUE")}),x.addBinding(e,"alpha",{min:0,max:1,step:.1}).on("change",()=>t.alpha.param.set(e.alpha)),()=>{A=!1,window.cancelAnimationFrame(F),I.disconnect(),T.dispose(),p.dispose(),b.dispose(),h.dispose(),i.pop(),i.apply()}};export{he as preview};
